/* eslint-disable */
//prettier-ignore
module.exports = {
name: "@yarnpkg/plugin-yarnpnp2nix",
factory: function (require) {
var plugin=(()=>{var Eg=Object.create;var $r=Object.defineProperty;var Pg=Object.getOwnPropertyDescriptor;var xg=Object.getOwnPropertyNames;var Rg=Object.getPrototypeOf,Tg=Object.prototype.hasOwnProperty;var w=(t=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(t,{get:(e,r)=>(typeof require<"u"?require:e)[r]}):t)(function(t){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+t+'" is not supported')});var W=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),Ag=(t,e)=>{for(var r in e)$r(t,r,{get:e[r],enumerable:!0})},qa=(t,e,r,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of xg(e))!Tg.call(t,i)&&i!==r&&$r(t,i,{get:()=>e[i],enumerable:!(n=Pg(e,i))||n.enumerable});return t};var he=(t,e,r)=>(r=t!=null?Eg(Rg(t)):{},qa(e||!t||!t.__esModule?$r(r,"default",{value:t,enumerable:!0}):r,t)),kg=t=>qa($r({},"__esModule",{value:!0}),t);var bc=W(Ce=>{"use strict";Object.defineProperty(Ce,"__esModule",{value:!0});var Lg=w("zlib"),tc=w("path"),gt=w("module"),re=w("url"),Ya=w("util"),Og=w("assert"),Ig=w("fs"),Ng=w("crypto"),Dg=w("os"),sn=t=>t&&typeof t=="object"&&"default"in t?t:{default:t},rc=sn(Lg),tn=sn(tc),Cg=sn(Og),vg=sn(Ig),nc=(t=>(t.HARD="HARD",t.SOFT="SOFT",t))(nc||{}),Fg=456789e3,$i={root:"/",dot:".",parent:".."},rn={home:"~",nodeModules:"node_modules",manifest:"package.json",lockfile:"yarn.lock",virtual:"__virtual__",pnpJs:".pnp.js",pnpCjs:".pnp.cjs",pnpData:".pnp.data.json",pnpEsmLoader:".pnp.loader.mjs",rc:".yarnrc.yml",env:".env"},P=Object.create(tn.default),j=Object.create(tn.default.posix);P.cwd=()=>process.cwd();j.cwd=process.platform==="win32"?()=>ao(process.cwd()):process.cwd;process.platform==="win32"&&(j.resolve=(...t)=>t.length>0&&j.isAbsolute(t[0])?tn.default.posix.resolve(...t):tn.default.posix.resolve(j.cwd(),...t));var ic=function(t,e,r){return e=t.normalize(e),r=t.normalize(r),e===r?".":(e.endsWith(t.sep)||(e=e+t.sep),r.startsWith(e)?r.slice(e.length):null)};P.contains=(t,e)=>ic(P,t,e);j.contains=(t,e)=>ic(j,t,e);var Mg=/^([a-zA-Z]:.*)$/,Ug=/^\/\/(\.\/)?(.*)$/,Bg=/^\/([a-zA-Z]:.*)$/,Hg=/^\/unc\/(\.dot\/)?(.*)$/;function Gg(t){let e,r;if(e=t.match(Bg))t=e[1];else if(r=t.match(Hg))t=`\\\\${r[1]?".\\":""}${r[2]}`;else return t;return t.replace(/\//g,"\\")}function zg(t){t=t.replace(/\\/g,"/");let e,r;return(e=t.match(Mg))?t=`/${e[1]}`:(r=t.match(Ug))&&(t=`/unc/${r[1]?".dot/":""}${r[2]}`),t}var ao=process.platform==="win32"?zg:t=>t,oc=process.platform==="win32"?Gg:t=>t;P.fromPortablePath=oc;P.toPortablePath=ao;function sc(t,e){return t===P?oc(e):ao(e)}var St=new Date(Fg*1e3),Wg=St.getTime();async function jg(t,e,r,n,i){let o=t.pathUtils.normalize(e),s=r.pathUtils.normalize(n),a=[],c=[],{atime:l,mtime:f}=i.stableTime?{atime:St,mtime:St}:await r.lstatPromise(s);await t.mkdirpPromise(t.pathUtils.dirname(e),{utimes:[l,f]}),await eo(a,c,t,o,r,s,{...i,didParentExist:!0});for(let u of a)await u();await Promise.all(c.map(u=>u()))}async function eo(t,e,r,n,i,o,s){let a=s.didParentExist?await ac(r,n):null,c=await i.lstatPromise(o),{atime:l,mtime:f}=s.stableTime?{atime:St,mtime:St}:c,u;switch(!0){case c.isDirectory():u=await qg(t,e,r,n,a,i,o,c,s);break;case c.isFile():u=await Kg(t,e,r,n,a,i,o,c,s);break;case c.isSymbolicLink():u=await Zg(t,e,r,n,a,i,o,c,s);break;default:throw new Error(`Unsupported file type (${c.mode})`)}return(s.linkStrategy?.type!=="HardlinkFromIndex"||!c.isFile())&&((u||a?.mtime?.getTime()!==f.getTime()||a?.atime?.getTime()!==l.getTime())&&(e.push(()=>r.lutimesPromise(n,l,f)),u=!0),(a===null||(a.mode&511)!==(c.mode&511))&&(e.push(()=>r.chmodPromise(n,c.mode&511)),u=!0)),u}async function ac(t,e){try{return await t.lstatPromise(e)}catch{return null}}async function qg(t,e,r,n,i,o,s,a,c){if(i!==null&&!i.isDirectory())if(c.overwrite)t.push(async()=>r.removePromise(n)),i=null;else return!1;let l=!1;i===null&&(t.push(async()=>{try{await r.mkdirPromise(n,{mode:a.mode})}catch(p){if(p.code!=="EEXIST")throw p}}),l=!0);let f=await o.readdirPromise(s),u=c.didParentExist&&!i?{...c,didParentExist:!1}:c;if(c.stableSort)for(let p of f.sort())await eo(t,e,r,r.pathUtils.join(n,p),o,o.pathUtils.join(s,p),u)&&(l=!0);else(await Promise.all(f.map(async d=>{await eo(t,e,r,r.pathUtils.join(n,d),o,o.pathUtils.join(s,d),u)}))).some(d=>d)&&(l=!0);return l}async function Yg(t,e,r,n,i,o,s,a,c,l){let f=await o.checksumFilePromise(s,{algorithm:"sha1"}),u=420,p=a.mode&511,d=`${f}${p!==u?p.toString(8):""}`,m=r.pathUtils.join(l.indexPath,f.slice(0,2),`${d}.dat`),g;(H=>{H[H.Lock=0]="Lock",H[H.Rename=1]="Rename"})(g||(g={}));let h=1,O=await ac(r,m);if(i){let H=O&&i.dev===O.dev&&i.ino===O.ino,G=O?.mtimeMs!==Wg;if(H&&G&&l.autoRepair&&(h=0,O=null),!H)if(c.overwrite)t.push(async()=>r.removePromise(n)),i=null;else return!1}let D=!O&&h===1?`${m}.${Math.floor(Math.random()*4294967296).toString(16).padStart(8,"0")}`:null,N=!1;return t.push(async()=>{if(!O&&(h===0&&await r.lockPromise(m,async()=>{let H=await o.readFilePromise(s);await r.writeFilePromise(m,H)}),h===1&&D)){let H=await o.readFilePromise(s);await r.writeFilePromise(D,H);try{await r.linkPromise(D,m)}catch(G){if(G.code==="EEXIST")N=!0,await r.unlinkPromise(D);else throw G}}i||await r.linkPromise(m,n)}),e.push(async()=>{O||(await r.lutimesPromise(m,St,St),p!==u&&await r.chmodPromise(m,p)),D&&!N&&await r.unlinkPromise(D)}),!1}async function Vg(t,e,r,n,i,o,s,a,c){if(i!==null)if(c.overwrite)t.push(async()=>r.removePromise(n)),i=null;else return!1;return t.push(async()=>{let l=await o.readFilePromise(s);await r.writeFilePromise(n,l)}),!0}async function Kg(t,e,r,n,i,o,s,a,c){return c.linkStrategy?.type==="HardlinkFromIndex"?Yg(t,e,r,n,i,o,s,a,c,c.linkStrategy):Vg(t,e,r,n,i,o,s,a,c)}async function Zg(t,e,r,n,i,o,s,a,c){if(i!==null)if(c.overwrite)t.push(async()=>r.removePromise(n)),i=null;else return!1;return t.push(async()=>{await r.symlinkPromise(sc(r.pathUtils,await o.readlinkPromise(s)),n)}),!0}var nn=class{constructor(e){this.pathUtils=e}async*genTraversePromise(e,{stableSort:r=!1}={}){let n=[e];for(;n.length>0;){let i=n.shift();if((await this.lstatPromise(i)).isDirectory()){let s=await this.readdirPromise(i);if(r)for(let a of s.sort())n.push(this.pathUtils.join(i,a));else throw new Error("Not supported")}else yield i}}async checksumFilePromise(e,{algorithm:r="sha512"}={}){let n=await this.openPromise(e,"r");try{let o=Buffer.allocUnsafeSlow(65536),s=Ng.createHash(r),a=0;for(;(a=await this.readPromise(n,o,0,65536))!==0;)s.update(a===65536?o:o.slice(0,a));return s.digest("hex")}finally{await this.closePromise(n)}}async removePromise(e,{recursive:r=!0,maxRetries:n=5}={}){let i;try{i=await this.lstatPromise(e)}catch(o){if(o.code==="ENOENT")return;throw o}if(i.isDirectory()){if(r){let o=await this.readdirPromise(e);await Promise.all(o.map(s=>this.removePromise(this.pathUtils.resolve(e,s))))}for(let o=0;o<=n;o++)try{await this.rmdirPromise(e);break}catch(s){if(s.code!=="EBUSY"&&s.code!=="ENOTEMPTY")throw s;o<n&&await new Promise(a=>setTimeout(a,o*100))}}else await this.unlinkPromise(e)}removeSync(e,{recursive:r=!0}={}){let n;try{n=this.lstatSync(e)}catch(i){if(i.code==="ENOENT")return;throw i}if(n.isDirectory()){if(r)for(let i of this.readdirSync(e))this.removeSync(this.pathUtils.resolve(e,i));this.rmdirSync(e)}else this.unlinkSync(e)}async mkdirpPromise(e,{chmod:r,utimes:n}={}){if(e=this.resolve(e),e===this.pathUtils.dirname(e))return;let i=e.split(this.pathUtils.sep),o;for(let s=2;s<=i.length;++s){let a=i.slice(0,s).join(this.pathUtils.sep);if(!this.existsSync(a)){try{await this.mkdirPromise(a)}catch(c){if(c.code==="EEXIST")continue;throw c}if(o??=a,r!=null&&await this.chmodPromise(a,r),n!=null)await this.utimesPromise(a,n[0],n[1]);else{let c=await this.statPromise(this.pathUtils.dirname(a));await this.utimesPromise(a,c.atime,c.mtime)}}}return o}mkdirpSync(e,{chmod:r,utimes:n}={}){if(e=this.resolve(e),e===this.pathUtils.dirname(e))return;let i=e.split(this.pathUtils.sep),o;for(let s=2;s<=i.length;++s){let a=i.slice(0,s).join(this.pathUtils.sep);if(!this.existsSync(a)){try{this.mkdirSync(a)}catch(c){if(c.code==="EEXIST")continue;throw c}if(o??=a,r!=null&&this.chmodSync(a,r),n!=null)this.utimesSync(a,n[0],n[1]);else{let c=this.statSync(this.pathUtils.dirname(a));this.utimesSync(a,c.atime,c.mtime)}}}return o}async copyPromise(e,r,{baseFs:n=this,overwrite:i=!0,stableSort:o=!1,stableTime:s=!1,linkStrategy:a=null}={}){return await jg(this,e,n,r,{overwrite:i,stableSort:o,stableTime:s,linkStrategy:a})}copySync(e,r,{baseFs:n=this,overwrite:i=!0}={}){let o=n.lstatSync(r),s=this.existsSync(e);if(o.isDirectory()){this.mkdirpSync(e);let c=n.readdirSync(r);for(let l of c)this.copySync(this.pathUtils.join(e,l),n.pathUtils.join(r,l),{baseFs:n,overwrite:i})}else if(o.isFile()){if(!s||i){s&&this.removeSync(e);let c=n.readFileSync(r);this.writeFileSync(e,c)}}else if(o.isSymbolicLink()){if(!s||i){s&&this.removeSync(e);let c=n.readlinkSync(r);this.symlinkSync(sc(this.pathUtils,c),e)}}else throw new Error(`Unsupported file type (file: ${r}, mode: 0o${o.mode.toString(8).padStart(6,"0")})`);let a=o.mode&511;this.chmodSync(e,a)}async changeFilePromise(e,r,n={}){return Buffer.isBuffer(r)?this.changeFileBufferPromise(e,r,n):this.changeFileTextPromise(e,r,n)}async changeFileBufferPromise(e,r,{mode:n}={}){let i=Buffer.alloc(0);try{i=await this.readFilePromise(e)}catch{}Buffer.compare(i,r)!==0&&await this.writeFilePromise(e,r,{mode:n})}async changeFileTextPromise(e,r,{automaticNewlines:n,mode:i}={}){let o="";try{o=await this.readFilePromise(e,"utf8")}catch{}let s=n?Va(o,r):r;o!==s&&await this.writeFilePromise(e,s,{mode:i})}changeFileSync(e,r,n={}){return Buffer.isBuffer(r)?this.changeFileBufferSync(e,r,n):this.changeFileTextSync(e,r,n)}changeFileBufferSync(e,r,{mode:n}={}){let i=Buffer.alloc(0);try{i=this.readFileSync(e)}catch{}Buffer.compare(i,r)!==0&&this.writeFileSync(e,r,{mode:n})}changeFileTextSync(e,r,{automaticNewlines:n=!1,mode:i}={}){let o="";try{o=this.readFileSync(e,"utf8")}catch{}let s=n?Va(o,r):r;o!==s&&this.writeFileSync(e,s,{mode:i})}async movePromise(e,r){try{await this.renamePromise(e,r)}catch(n){if(n.code==="EXDEV")await this.copyPromise(r,e),await this.removePromise(e);else throw n}}moveSync(e,r){try{this.renameSync(e,r)}catch(n){if(n.code==="EXDEV")this.copySync(r,e),this.removeSync(e);else throw n}}async lockPromise(e,r){let n=`${e}.flock`,i=1e3/60,o=Date.now(),s=null,a=async()=>{let c;try{[c]=await this.readJsonPromise(n)}catch{return Date.now()-o<500}try{return process.kill(c,0),!0}catch{return!1}};for(;s===null;)try{s=await this.openPromise(n,"wx")}catch(c){if(c.code==="EEXIST"){if(!await a())try{await this.unlinkPromise(n);continue}catch{}if(Date.now()-o<60*1e3)await new Promise(l=>setTimeout(l,i));else throw new Error(`Couldn't acquire a lock in a reasonable time (via ${n})`)}else throw c}await this.writePromise(s,JSON.stringify([process.pid]));try{return await r()}finally{try{await this.closePromise(s),await this.unlinkPromise(n)}catch{}}}async readJsonPromise(e){let r=await this.readFilePromise(e,"utf8");try{return JSON.parse(r)}catch(n){throw n.message+=` (in ${e})`,n}}readJsonSync(e){let r=this.readFileSync(e,"utf8");try{return JSON.parse(r)}catch(n){throw n.message+=` (in ${e})`,n}}async writeJsonPromise(e,r,{compact:n=!1}={}){let i=n?0:2;return await this.writeFilePromise(e,`${JSON.stringify(r,null,i)}
`)}writeJsonSync(e,r,{compact:n=!1}={}){let i=n?0:2;return this.writeFileSync(e,`${JSON.stringify(r,null,i)}
`)}async preserveTimePromise(e,r){let n=await this.lstatPromise(e),i=await r();typeof i<"u"&&(e=i),await this.lutimesPromise(e,n.atime,n.mtime)}async preserveTimeSync(e,r){let n=this.lstatSync(e),i=r();typeof i<"u"&&(e=i),this.lutimesSync(e,n.atime,n.mtime)}},to=class extends nn{constructor(){super(j)}};function Jg(t){let e=t.match(/\r?\n/g);if(e===null)return Dg.EOL;let r=e.filter(i=>i===`\r
`).length,n=e.length-r;return r>n?`\r
`:`
`}function Va(t,e){return e.replace(/\r?\n/g,Jg(t))}var ro=class extends nn{getExtractHint(e){return this.baseFs.getExtractHint(e)}resolve(e){return this.mapFromBase(this.baseFs.resolve(this.mapToBase(e)))}getRealPath(){return this.mapFromBase(this.baseFs.getRealPath())}async openPromise(e,r,n){return this.baseFs.openPromise(this.mapToBase(e),r,n)}openSync(e,r,n){return this.baseFs.openSync(this.mapToBase(e),r,n)}async opendirPromise(e,r){return Object.assign(await this.baseFs.opendirPromise(this.mapToBase(e),r),{path:e})}opendirSync(e,r){return Object.assign(this.baseFs.opendirSync(this.mapToBase(e),r),{path:e})}async readPromise(e,r,n,i,o){return await this.baseFs.readPromise(e,r,n,i,o)}readSync(e,r,n,i,o){return this.baseFs.readSync(e,r,n,i,o)}async writePromise(e,r,n,i,o){return typeof r=="string"?await this.baseFs.writePromise(e,r,n):await this.baseFs.writePromise(e,r,n,i,o)}writeSync(e,r,n,i,o){return typeof r=="string"?this.baseFs.writeSync(e,r,n):this.baseFs.writeSync(e,r,n,i,o)}async closePromise(e){return this.baseFs.closePromise(e)}closeSync(e){this.baseFs.closeSync(e)}createReadStream(e,r){return this.baseFs.createReadStream(e!==null?this.mapToBase(e):e,r)}createWriteStream(e,r){return this.baseFs.createWriteStream(e!==null?this.mapToBase(e):e,r)}async realpathPromise(e){return this.mapFromBase(await this.baseFs.realpathPromise(this.mapToBase(e)))}realpathSync(e){return this.mapFromBase(this.baseFs.realpathSync(this.mapToBase(e)))}async existsPromise(e){return this.baseFs.existsPromise(this.mapToBase(e))}existsSync(e){return this.baseFs.existsSync(this.mapToBase(e))}accessSync(e,r){return this.baseFs.accessSync(this.mapToBase(e),r)}async accessPromise(e,r){return this.baseFs.accessPromise(this.mapToBase(e),r)}async statPromise(e,r){return this.baseFs.statPromise(this.mapToBase(e),r)}statSync(e,r){return this.baseFs.statSync(this.mapToBase(e),r)}async fstatPromise(e,r){return this.baseFs.fstatPromise(e,r)}fstatSync(e,r){return this.baseFs.fstatSync(e,r)}lstatPromise(e,r){return this.baseFs.lstatPromise(this.mapToBase(e),r)}lstatSync(e,r){return this.baseFs.lstatSync(this.mapToBase(e),r)}async fchmodPromise(e,r){return this.baseFs.fchmodPromise(e,r)}fchmodSync(e,r){return this.baseFs.fchmodSync(e,r)}async chmodPromise(e,r){return this.baseFs.chmodPromise(this.mapToBase(e),r)}chmodSync(e,r){return this.baseFs.chmodSync(this.mapToBase(e),r)}async fchownPromise(e,r,n){return this.baseFs.fchownPromise(e,r,n)}fchownSync(e,r,n){return this.baseFs.fchownSync(e,r,n)}async chownPromise(e,r,n){return this.baseFs.chownPromise(this.mapToBase(e),r,n)}chownSync(e,r,n){return this.baseFs.chownSync(this.mapToBase(e),r,n)}async renamePromise(e,r){return this.baseFs.renamePromise(this.mapToBase(e),this.mapToBase(r))}renameSync(e,r){return this.baseFs.renameSync(this.mapToBase(e),this.mapToBase(r))}async copyFilePromise(e,r,n=0){return this.baseFs.copyFilePromise(this.mapToBase(e),this.mapToBase(r),n)}copyFileSync(e,r,n=0){return this.baseFs.copyFileSync(this.mapToBase(e),this.mapToBase(r),n)}async appendFilePromise(e,r,n){return this.baseFs.appendFilePromise(this.fsMapToBase(e),r,n)}appendFileSync(e,r,n){return this.baseFs.appendFileSync(this.fsMapToBase(e),r,n)}async writeFilePromise(e,r,n){return this.baseFs.writeFilePromise(this.fsMapToBase(e),r,n)}writeFileSync(e,r,n){return this.baseFs.writeFileSync(this.fsMapToBase(e),r,n)}async unlinkPromise(e){return this.baseFs.unlinkPromise(this.mapToBase(e))}unlinkSync(e){return this.baseFs.unlinkSync(this.mapToBase(e))}async utimesPromise(e,r,n){return this.baseFs.utimesPromise(this.mapToBase(e),r,n)}utimesSync(e,r,n){return this.baseFs.utimesSync(this.mapToBase(e),r,n)}async lutimesPromise(e,r,n){return this.baseFs.lutimesPromise(this.mapToBase(e),r,n)}lutimesSync(e,r,n){return this.baseFs.lutimesSync(this.mapToBase(e),r,n)}async mkdirPromise(e,r){return this.baseFs.mkdirPromise(this.mapToBase(e),r)}mkdirSync(e,r){return this.baseFs.mkdirSync(this.mapToBase(e),r)}async rmdirPromise(e,r){return this.baseFs.rmdirPromise(this.mapToBase(e),r)}rmdirSync(e,r){return this.baseFs.rmdirSync(this.mapToBase(e),r)}async rmPromise(e,r){return this.baseFs.rmPromise(this.mapToBase(e),r)}rmSync(e,r){return this.baseFs.rmSync(this.mapToBase(e),r)}async linkPromise(e,r){return this.baseFs.linkPromise(this.mapToBase(e),this.mapToBase(r))}linkSync(e,r){return this.baseFs.linkSync(this.mapToBase(e),this.mapToBase(r))}async symlinkPromise(e,r,n){let i=this.mapToBase(r);if(this.pathUtils.isAbsolute(e))return this.baseFs.symlinkPromise(this.mapToBase(e),i,n);let o=this.mapToBase(this.pathUtils.join(this.pathUtils.dirname(r),e)),s=this.baseFs.pathUtils.relative(this.baseFs.pathUtils.dirname(i),o);return this.baseFs.symlinkPromise(s,i,n)}symlinkSync(e,r,n){let i=this.mapToBase(r);if(this.pathUtils.isAbsolute(e))return this.baseFs.symlinkSync(this.mapToBase(e),i,n);let o=this.mapToBase(this.pathUtils.join(this.pathUtils.dirname(r),e)),s=this.baseFs.pathUtils.relative(this.baseFs.pathUtils.dirname(i),o);return this.baseFs.symlinkSync(s,i,n)}async readFilePromise(e,r){return this.baseFs.readFilePromise(this.fsMapToBase(e),r)}readFileSync(e,r){return this.baseFs.readFileSync(this.fsMapToBase(e),r)}readdirPromise(e,r){return this.baseFs.readdirPromise(this.mapToBase(e),r)}readdirSync(e,r){return this.baseFs.readdirSync(this.mapToBase(e),r)}async readlinkPromise(e){return this.mapFromBase(await this.baseFs.readlinkPromise(this.mapToBase(e)))}readlinkSync(e){return this.mapFromBase(this.baseFs.readlinkSync(this.mapToBase(e)))}async truncatePromise(e,r){return this.baseFs.truncatePromise(this.mapToBase(e),r)}truncateSync(e,r){return this.baseFs.truncateSync(this.mapToBase(e),r)}async ftruncatePromise(e,r){return this.baseFs.ftruncatePromise(e,r)}ftruncateSync(e,r){return this.baseFs.ftruncateSync(e,r)}watch(e,r,n){return this.baseFs.watch(this.mapToBase(e),r,n)}watchFile(e,r,n){return this.baseFs.watchFile(this.mapToBase(e),r,n)}unwatchFile(e,r){return this.baseFs.unwatchFile(this.mapToBase(e),r)}fsMapToBase(e){return typeof e=="number"?e:this.mapToBase(e)}};function Ka(t){let e=t;return typeof t.path=="string"&&(e.path=P.toPortablePath(t.path)),e}var no=class extends to{constructor(e=vg.default){super(),this.realFs=e}getExtractHint(){return!1}getRealPath(){return $i.root}resolve(e){return j.resolve(e)}async openPromise(e,r,n){return await new Promise((i,o)=>{this.realFs.open(P.fromPortablePath(e),r,n,this.makeCallback(i,o))})}openSync(e,r,n){return this.realFs.openSync(P.fromPortablePath(e),r,n)}async opendirPromise(e,r){return await new Promise((n,i)=>{typeof r<"u"?this.realFs.opendir(P.fromPortablePath(e),r,this.makeCallback(n,i)):this.realFs.opendir(P.fromPortablePath(e),this.makeCallback(n,i))}).then(n=>{let i=n;return Object.defineProperty(i,"path",{value:e,configurable:!0,writable:!0}),i})}opendirSync(e,r){let i=typeof r<"u"?this.realFs.opendirSync(P.fromPortablePath(e),r):this.realFs.opendirSync(P.fromPortablePath(e));return Object.defineProperty(i,"path",{value:e,configurable:!0,writable:!0}),i}async readPromise(e,r,n=0,i=0,o=-1){return await new Promise((s,a)=>{this.realFs.read(e,r,n,i,o,(c,l)=>{c?a(c):s(l)})})}readSync(e,r,n,i,o){return this.realFs.readSync(e,r,n,i,o)}async writePromise(e,r,n,i,o){return await new Promise((s,a)=>typeof r=="string"?this.realFs.write(e,r,n,this.makeCallback(s,a)):this.realFs.write(e,r,n,i,o,this.makeCallback(s,a)))}writeSync(e,r,n,i,o){return typeof r=="string"?this.realFs.writeSync(e,r,n):this.realFs.writeSync(e,r,n,i,o)}async closePromise(e){await new Promise((r,n)=>{this.realFs.close(e,this.makeCallback(r,n))})}closeSync(e){this.realFs.closeSync(e)}createReadStream(e,r){let n=e!==null?P.fromPortablePath(e):e;return this.realFs.createReadStream(n,r)}createWriteStream(e,r){let n=e!==null?P.fromPortablePath(e):e;return this.realFs.createWriteStream(n,r)}async realpathPromise(e){return await new Promise((r,n)=>{this.realFs.realpath(P.fromPortablePath(e),{},this.makeCallback(r,n))}).then(r=>P.toPortablePath(r))}realpathSync(e){return P.toPortablePath(this.realFs.realpathSync(P.fromPortablePath(e),{}))}async existsPromise(e){return await new Promise(r=>{this.realFs.exists(P.fromPortablePath(e),r)})}accessSync(e,r){return this.realFs.accessSync(P.fromPortablePath(e),r)}async accessPromise(e,r){return await new Promise((n,i)=>{this.realFs.access(P.fromPortablePath(e),r,this.makeCallback(n,i))})}existsSync(e){return this.realFs.existsSync(P.fromPortablePath(e))}async statPromise(e,r){return await new Promise((n,i)=>{r?this.realFs.stat(P.fromPortablePath(e),r,this.makeCallback(n,i)):this.realFs.stat(P.fromPortablePath(e),this.makeCallback(n,i))})}statSync(e,r){return r?this.realFs.statSync(P.fromPortablePath(e),r):this.realFs.statSync(P.fromPortablePath(e))}async fstatPromise(e,r){return await new Promise((n,i)=>{r?this.realFs.fstat(e,r,this.makeCallback(n,i)):this.realFs.fstat(e,this.makeCallback(n,i))})}fstatSync(e,r){return r?this.realFs.fstatSync(e,r):this.realFs.fstatSync(e)}async lstatPromise(e,r){return await new Promise((n,i)=>{r?this.realFs.lstat(P.fromPortablePath(e),r,this.makeCallback(n,i)):this.realFs.lstat(P.fromPortablePath(e),this.makeCallback(n,i))})}lstatSync(e,r){return r?this.realFs.lstatSync(P.fromPortablePath(e),r):this.realFs.lstatSync(P.fromPortablePath(e))}async fchmodPromise(e,r){return await new Promise((n,i)=>{this.realFs.fchmod(e,r,this.makeCallback(n,i))})}fchmodSync(e,r){return this.realFs.fchmodSync(e,r)}async chmodPromise(e,r){return await new Promise((n,i)=>{this.realFs.chmod(P.fromPortablePath(e),r,this.makeCallback(n,i))})}chmodSync(e,r){return this.realFs.chmodSync(P.fromPortablePath(e),r)}async fchownPromise(e,r,n){return await new Promise((i,o)=>{this.realFs.fchown(e,r,n,this.makeCallback(i,o))})}fchownSync(e,r,n){return this.realFs.fchownSync(e,r,n)}async chownPromise(e,r,n){return await new Promise((i,o)=>{this.realFs.chown(P.fromPortablePath(e),r,n,this.makeCallback(i,o))})}chownSync(e,r,n){return this.realFs.chownSync(P.fromPortablePath(e),r,n)}async renamePromise(e,r){return await new Promise((n,i)=>{this.realFs.rename(P.fromPortablePath(e),P.fromPortablePath(r),this.makeCallback(n,i))})}renameSync(e,r){return this.realFs.renameSync(P.fromPortablePath(e),P.fromPortablePath(r))}async copyFilePromise(e,r,n=0){return await new Promise((i,o)=>{this.realFs.copyFile(P.fromPortablePath(e),P.fromPortablePath(r),n,this.makeCallback(i,o))})}copyFileSync(e,r,n=0){return this.realFs.copyFileSync(P.fromPortablePath(e),P.fromPortablePath(r),n)}async appendFilePromise(e,r,n){return await new Promise((i,o)=>{let s=typeof e=="string"?P.fromPortablePath(e):e;n?this.realFs.appendFile(s,r,n,this.makeCallback(i,o)):this.realFs.appendFile(s,r,this.makeCallback(i,o))})}appendFileSync(e,r,n){let i=typeof e=="string"?P.fromPortablePath(e):e;n?this.realFs.appendFileSync(i,r,n):this.realFs.appendFileSync(i,r)}async writeFilePromise(e,r,n){return await new Promise((i,o)=>{let s=typeof e=="string"?P.fromPortablePath(e):e;n?this.realFs.writeFile(s,r,n,this.makeCallback(i,o)):this.realFs.writeFile(s,r,this.makeCallback(i,o))})}writeFileSync(e,r,n){let i=typeof e=="string"?P.fromPortablePath(e):e;n?this.realFs.writeFileSync(i,r,n):this.realFs.writeFileSync(i,r)}async unlinkPromise(e){return await new Promise((r,n)=>{this.realFs.unlink(P.fromPortablePath(e),this.makeCallback(r,n))})}unlinkSync(e){return this.realFs.unlinkSync(P.fromPortablePath(e))}async utimesPromise(e,r,n){return await new Promise((i,o)=>{this.realFs.utimes(P.fromPortablePath(e),r,n,this.makeCallback(i,o))})}utimesSync(e,r,n){this.realFs.utimesSync(P.fromPortablePath(e),r,n)}async lutimesPromise(e,r,n){return await new Promise((i,o)=>{this.realFs.lutimes(P.fromPortablePath(e),r,n,this.makeCallback(i,o))})}lutimesSync(e,r,n){this.realFs.lutimesSync(P.fromPortablePath(e),r,n)}async mkdirPromise(e,r){return await new Promise((n,i)=>{this.realFs.mkdir(P.fromPortablePath(e),r,this.makeCallback(n,i))})}mkdirSync(e,r){return this.realFs.mkdirSync(P.fromPortablePath(e),r)}async rmdirPromise(e,r){return await new Promise((n,i)=>{r?this.realFs.rmdir(P.fromPortablePath(e),r,this.makeCallback(n,i)):this.realFs.rmdir(P.fromPortablePath(e),this.makeCallback(n,i))})}rmdirSync(e,r){return this.realFs.rmdirSync(P.fromPortablePath(e),r)}async rmPromise(e,r){return await new Promise((n,i)=>{r?this.realFs.rm(P.fromPortablePath(e),r,this.makeCallback(n,i)):this.realFs.rm(P.fromPortablePath(e),this.makeCallback(n,i))})}rmSync(e,r){return this.realFs.rmSync(P.fromPortablePath(e),r)}async linkPromise(e,r){return await new Promise((n,i)=>{this.realFs.link(P.fromPortablePath(e),P.fromPortablePath(r),this.makeCallback(n,i))})}linkSync(e,r){return this.realFs.linkSync(P.fromPortablePath(e),P.fromPortablePath(r))}async symlinkPromise(e,r,n){return await new Promise((i,o)=>{this.realFs.symlink(P.fromPortablePath(e.replace(/\/+$/,"")),P.fromPortablePath(r),n,this.makeCallback(i,o))})}symlinkSync(e,r,n){return this.realFs.symlinkSync(P.fromPortablePath(e.replace(/\/+$/,"")),P.fromPortablePath(r),n)}async readFilePromise(e,r){return await new Promise((n,i)=>{let o=typeof e=="string"?P.fromPortablePath(e):e;this.realFs.readFile(o,r,this.makeCallback(n,i))})}readFileSync(e,r){let n=typeof e=="string"?P.fromPortablePath(e):e;return this.realFs.readFileSync(n,r)}async readdirPromise(e,r){return await new Promise((n,i)=>{r?r.recursive&&process.platform==="win32"?r.withFileTypes?this.realFs.readdir(P.fromPortablePath(e),r,this.makeCallback(o=>n(o.map(Ka)),i)):this.realFs.readdir(P.fromPortablePath(e),r,this.makeCallback(o=>n(o.map(P.toPortablePath)),i)):this.realFs.readdir(P.fromPortablePath(e),r,this.makeCallback(n,i)):this.realFs.readdir(P.fromPortablePath(e),this.makeCallback(n,i))})}readdirSync(e,r){return r?r.recursive&&process.platform==="win32"?r.withFileTypes?this.realFs.readdirSync(P.fromPortablePath(e),r).map(Ka):this.realFs.readdirSync(P.fromPortablePath(e),r).map(P.toPortablePath):this.realFs.readdirSync(P.fromPortablePath(e),r):this.realFs.readdirSync(P.fromPortablePath(e))}async readlinkPromise(e){return await new Promise((r,n)=>{this.realFs.readlink(P.fromPortablePath(e),this.makeCallback(r,n))}).then(r=>P.toPortablePath(r))}readlinkSync(e){return P.toPortablePath(this.realFs.readlinkSync(P.fromPortablePath(e)))}async truncatePromise(e,r){return await new Promise((n,i)=>{this.realFs.truncate(P.fromPortablePath(e),r,this.makeCallback(n,i))})}truncateSync(e,r){return this.realFs.truncateSync(P.fromPortablePath(e),r)}async ftruncatePromise(e,r){return await new Promise((n,i)=>{this.realFs.ftruncate(e,r,this.makeCallback(n,i))})}ftruncateSync(e,r){return this.realFs.ftruncateSync(e,r)}watch(e,r,n){return this.realFs.watch(P.fromPortablePath(e),r,n)}watchFile(e,r,n){return this.realFs.watchFile(P.fromPortablePath(e),r,n)}unwatchFile(e,r){return this.realFs.unwatchFile(P.fromPortablePath(e),r)}makeCallback(e,r){return(n,i)=>{n?r(n):e(i)}}},Xg=/^[0-9]+$/,Zi=/^(\/(?:[^/]+\/)*?(?:\$\$virtual|__virtual__))((?:\/((?:[^/]+-)?[a-f0-9]+)(?:\/([^/]+))?)?((?:\/.*)?))$/,Qg=/^([^/]+-)?[a-f0-9]+$/,De=class extends ro{constructor({baseFs:e=new no}={}){super(j),this.baseFs=e}static makeVirtualPath(e,r,n){if(j.basename(e)!=="__virtual__")throw new Error('Assertion failed: Virtual folders must be named "__virtual__"');if(!j.basename(r).match(Qg))throw new Error("Assertion failed: Virtual components must be ended by an hexadecimal hash");let o=j.relative(j.dirname(e),n).split("/"),s=0;for(;s<o.length&&o[s]==="..";)s+=1;let a=o.slice(s);return j.join(e,r,String(s),...a)}static resolveVirtual(e){let r=e.match(Zi);if(!r||!r[3]&&r[5])return e;let n=j.dirname(r[1]);if(!r[3]||!r[4])return n;if(!Xg.test(r[4]))return e;let o=Number(r[4]),s="../".repeat(o),a=r[5]||".";return De.resolveVirtual(j.join(n,s,a))}getExtractHint(e){return this.baseFs.getExtractHint(e)}getRealPath(){return this.baseFs.getRealPath()}realpathSync(e){let r=e.match(Zi);if(!r)return this.baseFs.realpathSync(e);if(!r[5])return e;let n=this.baseFs.realpathSync(this.mapToBase(e));return De.makeVirtualPath(r[1],r[3],n)}async realpathPromise(e){let r=e.match(Zi);if(!r)return await this.baseFs.realpathPromise(e);if(!r[5])return e;let n=await this.baseFs.realpathPromise(this.mapToBase(e));return De.makeVirtualPath(r[1],r[3],n)}mapToBase(e){if(e==="")return e;if(this.pathUtils.isAbsolute(e))return De.resolveVirtual(e);let r=De.resolveVirtual(this.baseFs.resolve($i.dot)),n=De.resolveVirtual(this.baseFs.resolve(e));return j.relative(r,n)||$i.dot}mapFromBase(e){return e}},cc={DEFAULT:{collapsed:!1,next:{["*"]:"DEFAULT"}},TOP_LEVEL:{collapsed:!1,next:{fallbackExclusionList:"FALLBACK_EXCLUSION_LIST",packageRegistryData:"PACKAGE_REGISTRY_DATA",["*"]:"DEFAULT"}},FALLBACK_EXCLUSION_LIST:{collapsed:!1,next:{["*"]:"FALLBACK_EXCLUSION_ENTRIES"}},FALLBACK_EXCLUSION_ENTRIES:{collapsed:!0,next:{["*"]:"FALLBACK_EXCLUSION_DATA"}},FALLBACK_EXCLUSION_DATA:{collapsed:!0,next:{["*"]:"DEFAULT"}},PACKAGE_REGISTRY_DATA:{collapsed:!1,next:{["*"]:"PACKAGE_REGISTRY_ENTRIES"}},PACKAGE_REGISTRY_ENTRIES:{collapsed:!0,next:{["*"]:"PACKAGE_STORE_DATA"}},PACKAGE_STORE_DATA:{collapsed:!1,next:{["*"]:"PACKAGE_STORE_ENTRIES"}},PACKAGE_STORE_ENTRIES:{collapsed:!0,next:{["*"]:"PACKAGE_INFORMATION_DATA"}},PACKAGE_INFORMATION_DATA:{collapsed:!1,next:{packageDependencies:"PACKAGE_DEPENDENCIES",["*"]:"DEFAULT"}},PACKAGE_DEPENDENCIES:{collapsed:!1,next:{["*"]:"PACKAGE_DEPENDENCY"}},PACKAGE_DEPENDENCY:{collapsed:!0,next:{["*"]:"DEFAULT"}}};function _g(t,e,r){let n="";n+="[";for(let i=0,o=t.length;i<o;++i)n+=an(String(i),t[i],e,r).replace(/^ +/g,""),i+1<o&&(n+=", ");return n+="]",n}function $g(t,e,r){let n=`${r}  `,i="";i+=r,i+=`[
`;for(let o=0,s=t.length;o<s;++o)i+=n+an(String(o),t[o],e,n).replace(/^ +/,""),o+1<s&&(i+=","),i+=`
`;return i+=r,i+="]",i}function ey(t,e,r){let n=Object.keys(t),i="";i+="{";for(let o=0,s=n.length,a=0;o<s;++o){let c=n[o],l=t[c];typeof l>"u"||(a!==0&&(i+=", "),i+=JSON.stringify(c),i+=": ",i+=an(c,l,e,r).replace(/^ +/g,""),a+=1)}return i+="}",i}function ty(t,e,r){let n=Object.keys(t),i=`${r}  `,o="";o+=r,o+=`{
`;let s=0;for(let a=0,c=n.length;a<c;++a){let l=n[a],f=t[l];typeof f>"u"||(s!==0&&(o+=",",o+=`
`),o+=i,o+=JSON.stringify(l),o+=": ",o+=an(l,f,e,i).replace(/^ +/g,""),s+=1)}return s!==0&&(o+=`
`),o+=r,o+="}",o}function an(t,e,r,n){let{next:i}=cc[r],o=i[t]||i["*"];return lc(e,o,n)}function lc(t,e,r){let{collapsed:n}=cc[e];return Array.isArray(t)?n?_g(t,e,r):$g(t,e,r):typeof t=="object"&&t!==null?n?ey(t,e,r):ty(t,e,r):JSON.stringify(t)}function uc(t){return lc(t,"TOP_LEVEL","")}function yr(t,e){let r=Array.from(t);Array.isArray(e)||(e=[e]);let n=[];for(let o of e)n.push(r.map(s=>o(s)));let i=r.map((o,s)=>s);return i.sort((o,s)=>{for(let a of n){let c=a[o]<a[s]?-1:a[o]>a[s]?1:0;if(c!==0)return c}return 0}),i.map(o=>r[o])}function ry(t){let e=new Map,r=yr(t.fallbackExclusionList||[],[({name:n,reference:i})=>n,({name:n,reference:i})=>i]);for(let{name:n,reference:i}of r){let o=e.get(n);typeof o>"u"&&e.set(n,o=new Set),o.add(i)}return Array.from(e).map(([n,i])=>[n,Array.from(i)])}function ny(t){return yr(t.fallbackPool||[],([e])=>e)}function iy(t){let e=[];for(let[r,n]of yr(t.packageRegistry,([i])=>i===null?"0":`1${i}`)){let i=[];e.push([r,i]);for(let[o,{packageLocation:s,packageDependencies:a,packagePeers:c,linkType:l,discardFromLookup:f}]of yr(n,([u])=>u===null?"0":`1${u}`)){let u=[];r!==null&&o!==null&&!a.has(r)&&u.push([r,o]);for(let[m,g]of yr(a.entries(),([h])=>h))u.push([m,g]);let p=c&&c.size>0?Array.from(c):void 0,d=f||void 0;i.push([o,{packageLocation:s,packageDependencies:u,packagePeers:p,linkType:l,discardFromLookup:d}])}}return e}function co(t){return{__info:["This file is automatically generated. Do not touch it, or risk","your modifications being lost."],dependencyTreeRoots:t.dependencyTreeRoots,enableTopLevelFallback:t.enableTopLevelFallback||!1,ignorePatternData:t.ignorePattern||null,fallbackExclusionList:ry(t),fallbackPool:ny(t),packageRegistryData:iy(t)}}var Ji,oy=()=>(typeof Ji>"u"&&(Ji=rc.default.brotliDecompressSync(Buffer.from("","base64")).toString()),Ji);function lo(t,e){return[t?`${t}
`:"",`/* eslint-disable */
`,`// @ts-nocheck
`,`"use strict";
`,`
`,e,`
`,oy()].join("")}function sy(t){return JSON.stringify(t,null,2)}function ay(t){return`'${t.replace(/\\/g,"\\\\").replace(/'/g,"\\'").replace(/\n/g,`\\
`)}'`}function cy(t){return[`const RAW_RUNTIME_STATE =
`,`${ay(uc(t))};

`,`function $$SETUP_STATE(hydrateRuntimeState, basePath) {
`,`  return hydrateRuntimeState(JSON.parse(RAW_RUNTIME_STATE), {basePath: basePath || __dirname});
`,`}
`].join("")}function ly(){return[`function $$SETUP_STATE(hydrateRuntimeState, basePath) {
`,`  const fs = require('fs');
`,`  const path = require('path');
`,`  const pnpDataFilepath = path.resolve(__dirname, ${JSON.stringify(rn.pnpData)});
`,`  return hydrateRuntimeState(JSON.parse(fs.readFileSync(pnpDataFilepath, 'utf8')), {basePath: basePath || __dirname});
`,`}
`].join("")}function uy(t){let e=co(t),r=cy(e);return lo(t.shebang,r)}function fy(t){let e=co(t),r=ly(),n=lo(t.shebang,r);return{dataFile:sy(e),loaderFile:n}}function fc(t,{basePath:e}){let r=P.toPortablePath(e),n=j.resolve(r),i=t.ignorePatternData!==null?new RegExp(t.ignorePatternData):null,o=new Map,s=new Map(t.packageRegistryData.map(([u,p])=>[u,new Map(p.map(([d,m])=>{if(u===null!=(d===null))throw new Error("Assertion failed: The name and reference should be null, or neither should");let g=m.discardFromLookup??!1,h={name:u,reference:d},O=o.get(m.packageLocation);O?(O.discardFromLookup=O.discardFromLookup&&g,g||(O.locator=h)):o.set(m.packageLocation,{locator:h,discardFromLookup:g});let D=null;return[d,{packageDependencies:new Map(m.packageDependencies),packagePeers:new Set(m.packagePeers),linkType:m.linkType,discardFromLookup:g,get packageLocation(){return D||(D=j.join(n,m.packageLocation))}}]}))])),a=new Map(t.fallbackExclusionList.map(([u,p])=>[u,new Set(p)])),c=new Map(t.fallbackPool),l=t.dependencyTreeRoots,f=t.enableTopLevelFallback;return{basePath:r,dependencyTreeRoots:l,enableTopLevelFallback:f,fallbackExclusionList:a,fallbackPool:c,ignorePattern:i,packageLocatorsByLocations:o,packageRegistry:s}}var pc=Array.isArray,io=JSON.stringify,cn=Object.getOwnPropertyNames,ln=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),Za=(t,e)=>RegExp.prototype.exec.call(t,e),Ja=(t,...e)=>RegExp.prototype[Symbol.replace].apply(t,e),Bt=(t,...e)=>String.prototype.endsWith.apply(t,e),dc=(t,...e)=>String.prototype.includes.apply(t,e),hc=(t,...e)=>String.prototype.lastIndexOf.apply(t,e),on=(t,...e)=>String.prototype.indexOf.apply(t,e),py=(t,...e)=>String.prototype.replace.apply(t,e),yt=(t,...e)=>String.prototype.slice.apply(t,e),it=(t,...e)=>String.prototype.startsWith.apply(t,e),dy=Map,hy=JSON.parse;function br(t,e,r){return class extends r{constructor(...n){super(e(...n)),this.code=t,this.name=`${r.name} [${t}]`}}}var my=br("ERR_PACKAGE_IMPORT_NOT_DEFINED",(t,e,r)=>`Package import specifier "${t}" is not defined${e?` in package ${e}package.json`:""} imported from ${r}`,TypeError),mc=br("ERR_INVALID_MODULE_SPECIFIER",(t,e,r=void 0)=>`Invalid module "${t}" ${e}${r?` imported from ${r}`:""}`,TypeError),gy=br("ERR_INVALID_PACKAGE_TARGET",(t,e,r,n=!1,i=void 0)=>{let o=typeof r=="string"&&!n&&r.length&&!it(r,"./");return e==="."?(Cg.default(n===!1),`Invalid "exports" main target ${io(r)} defined in the package config ${t}package.json${i?` imported from ${i}`:""}${o?'; targets must start with "./"':""}`):`Invalid "${n?"imports":"exports"}" target ${io(r)} defined for '${e}' in the package config ${t}package.json${i?` imported from ${i}`:""}${o?'; targets must start with "./"':""}`},Error),uo=br("ERR_INVALID_PACKAGE_CONFIG",(t,e,r)=>`Invalid package config ${t}${e?` while importing ${e}`:""}${r?`. ${r}`:""}`,Error),yy=br("ERR_PACKAGE_PATH_NOT_EXPORTED",(t,e,r=void 0)=>e==="."?`No "exports" main defined in ${t}package.json${r?` imported from ${r}`:""}`:`Package subpath '${e}' is not defined by "exports" in ${t}package.json${r?` imported from ${r}`:""}`,Error);function Sy(t,e){let r=Object.create(null);for(let n=0;n<e.length;n++){let i=e[n];ln(t,i)&&(r[i]=t[i])}return r}var en=new dy;function by(t,e,r,n){let i=en.get(t);if(i!==void 0)return i;let o=n(t);if(o===void 0){let d={pjsonPath:t,exists:!1,main:void 0,name:void 0,type:"none",exports:void 0,imports:void 0};return en.set(t,d),d}let s;try{s=hy(o)}catch(d){throw new uo(t,(r?`"${e}" from `:"")+re.fileURLToPath(r||e),d.message)}let{imports:a,main:c,name:l,type:f}=Sy(s,["imports","main","name","type"]),u=ln(s,"exports")?s.exports:void 0;(typeof a!="object"||a===null)&&(a=void 0),typeof c!="string"&&(c=void 0),typeof l!="string"&&(l=void 0),f!=="module"&&f!=="commonjs"&&(f="none");let p={pjsonPath:t,exists:!0,main:c,name:l,type:f,exports:u,imports:a};return en.set(t,p),p}function wy(t,e){let r=new URL("./package.json",t);for(;;){let o=r.pathname;if(Bt(o,"node_modules/package.json"))break;let s=by(re.fileURLToPath(r),t,void 0,e);if(s.exists)return s;let a=r;if(r=new URL("../package.json",r),r.pathname===a.pathname)break}let n=re.fileURLToPath(r),i={pjsonPath:n,exists:!1,main:void 0,name:void 0,type:"none",exports:void 0,imports:void 0};return en.set(n,i),i}function Ey(t,e,r){throw new my(t,e&&re.fileURLToPath(new URL(".",e)),re.fileURLToPath(r))}function Py(t,e,r,n){let i=`request is not a valid subpath for the "${r?"imports":"exports"}" resolution of ${re.fileURLToPath(e)}`;throw new mc(t,i,n&&re.fileURLToPath(n))}function gr(t,e,r,n,i){throw typeof e=="object"&&e!==null?e=io(e,null,""):e=`${e}`,new gy(re.fileURLToPath(new URL(".",r)),t,e,n,i&&re.fileURLToPath(i))}var Xa=/(^|\\|\/)((\.|%2e)(\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))(\\|\/|$)/i,Qa=/\*/g;function xy(t,e,r,n,i,o,s,a){if(e!==""&&!o&&t[t.length-1]!=="/"&&gr(r,t,n,s,i),!it(t,"./")){if(s&&!it(t,"../")&&!it(t,"/")){let u=!1;try{new URL(t),u=!0}catch{}if(!u)return o?Ja(Qa,t,()=>e):t+e}gr(r,t,n,s,i)}Za(Xa,yt(t,2))!==null&&gr(r,t,n,s,i);let c=new URL(t,n),l=c.pathname,f=new URL(".",n).pathname;if(it(l,f)||gr(r,t,n,s,i),e==="")return c;if(Za(Xa,e)!==null){let u=o?py(r,"*",()=>e):r+e;Py(u,n,s,i)}return o?new URL(Ja(Qa,c.href,()=>e)):new URL(e,c)}function Ry(t){let e=+t;return`${e}`!==t?!1:e>=0&&e<4294967295}function Ht(t,e,r,n,i,o,s,a){if(typeof e=="string")return xy(e,r,n,t,i,o,s);if(pc(e)){if(e.length===0)return null;let c;for(let l=0;l<e.length;l++){let f=e[l],u;try{u=Ht(t,f,r,n,i,o,s,a)}catch(p){if(c=p,p.code==="ERR_INVALID_PACKAGE_TARGET")continue;throw p}if(u!==void 0){if(u===null){c=null;continue}return u}}if(c==null)return c;throw c}else if(typeof e=="object"&&e!==null){let c=cn(e);for(let l=0;l<c.length;l++){let f=c[l];if(Ry(f))throw new uo(re.fileURLToPath(t),i,'"exports" cannot contain numeric property keys.')}for(let l=0;l<c.length;l++){let f=c[l];if(f==="default"||a.has(f)){let u=e[f],p=Ht(t,u,r,n,i,o,s,a);if(p===void 0)continue;return p}}return}else if(e===null)return null;gr(n,e,t,s,i)}function gc(t,e){let r=on(t,"*"),n=on(e,"*"),i=r===-1?t.length:r+1,o=n===-1?e.length:n+1;return i>o?-1:o>i||r===-1?1:n===-1||t.length>e.length?-1:e.length>t.length?1:0}function Ty(t,e,r){if(typeof t=="string"||pc(t))return!0;if(typeof t!="object"||t===null)return!1;let n=cn(t),i=!1,o=0;for(let s=0;s<n.length;s++){let a=n[s],c=a===""||a[0]!==".";if(o++===0)i=c;else if(i!==c)throw new uo(re.fileURLToPath(e),r,`"exports" cannot contain some keys starting with '.' and some not. The exports object must either be an object of package subpath keys or an object of main entry condition name keys only.`)}return i}function Xi(t,e,r){throw new yy(re.fileURLToPath(new URL(".",e)),t,r&&re.fileURLToPath(r))}var _a=new Set;function Ay(t,e,r){let n=re.fileURLToPath(e);_a.has(n+"|"+t)||(_a.add(n+"|"+t),process.emitWarning(`Use of deprecated trailing slash pattern mapping "${t}" in the "exports" field module resolution of the package at ${n}${r?` imported from ${re.fileURLToPath(r)}`:""}. Mapping specifiers ending in "/" is no longer supported.`,"DeprecationWarning","DEP0155"))}function ky({packageJSONUrl:t,packageSubpath:e,exports:r,base:n,conditions:i}){if(Ty(r,t,n)&&(r={".":r}),ln(r,e)&&!dc(e,"*")&&!Bt(e,"/")){let c=r[e],l=Ht(t,c,"",e,n,!1,!1,i);return l==null&&Xi(e,t,n),l}let o="",s,a=cn(r);for(let c=0;c<a.length;c++){let l=a[c],f=on(l,"*");if(f!==-1&&it(e,yt(l,0,f))){Bt(e,"/")&&Ay(e,t,n);let u=yt(l,f+1);e.length>=l.length&&Bt(e,u)&&gc(o,l)===1&&hc(l,"*")===f&&(o=l,s=yt(e,f,e.length-u.length))}}if(o){let c=r[o],l=Ht(t,c,s,o,n,!0,!1,i);return l==null&&Xi(e,t,n),l}Xi(e,t,n)}function Ly({name:t,base:e,conditions:r,readFileSyncFn:n}){if(t==="#"||it(t,"#/")||Bt(t,"/")){let s="is not a valid internal imports specifier name";throw new mc(t,s,re.fileURLToPath(e))}let i,o=wy(e,n);if(o.exists){i=re.pathToFileURL(o.pjsonPath);let s=o.imports;if(s)if(ln(s,t)&&!dc(t,"*")){let a=Ht(i,s[t],"",t,e,!1,!0,r);if(a!=null)return a}else{let a="",c,l=cn(s);for(let f=0;f<l.length;f++){let u=l[f],p=on(u,"*");if(p!==-1&&it(t,yt(u,0,p))){let d=yt(u,p+1);t.length>=u.length&&Bt(t,d)&&gc(a,u)===1&&hc(u,"*")===p&&(a=u,c=yt(t,p,t.length-d.length))}}if(a){let f=s[a],u=Ht(i,f,c,a,e,!0,!0,r);if(u!=null)return u}}}Ey(t,i,e)}var se=(t=>(t.API_ERROR="API_ERROR",t.BUILTIN_NODE_RESOLUTION_FAILED="BUILTIN_NODE_RESOLUTION_FAILED",t.EXPORTS_RESOLUTION_FAILED="EXPORTS_RESOLUTION_FAILED",t.MISSING_DEPENDENCY="MISSING_DEPENDENCY",t.MISSING_PEER_DEPENDENCY="MISSING_PEER_DEPENDENCY",t.QUALIFIED_PATH_RESOLUTION_FAILED="QUALIFIED_PATH_RESOLUTION_FAILED",t.INTERNAL="INTERNAL",t.UNDECLARED_DEPENDENCY="UNDECLARED_DEPENDENCY",t.UNSUPPORTED="UNSUPPORTED",t))(se||{}),Oy=new Set(["BUILTIN_NODE_RESOLUTION_FAILED","MISSING_DEPENDENCY","MISSING_PEER_DEPENDENCY","QUALIFIED_PATH_RESOLUTION_FAILED","UNDECLARED_DEPENDENCY"]);function fe(t,e,r={},n){n??=Oy.has(t)?"MODULE_NOT_FOUND":t;let i={configurable:!0,writable:!0,enumerable:!1};return Object.defineProperties(new Error(e),{code:{...i,value:n},pnpCode:{...i,value:t},data:{...i,value:r}})}function ze(t){return P.normalize(P.fromPortablePath(t))}var oo=Symbol("arg flag"),Ee=class extends Error{constructor(e,r){super(e),this.name="ArgError",this.code=r,Object.setPrototypeOf(this,Ee.prototype)}};function Sr(t,{argv:e=process.argv.slice(2),permissive:r=!1,stopAtPositional:n=!1}={}){if(!t)throw new Ee("argument specification object is required","ARG_CONFIG_NO_SPEC");let i={_:[]},o={},s={};for(let a of Object.keys(t)){if(!a)throw new Ee("argument key cannot be an empty string","ARG_CONFIG_EMPTY_KEY");if(a[0]!=="-")throw new Ee(`argument key must start with '-' but found: '${a}'`,"ARG_CONFIG_NONOPT_KEY");if(a.length===1)throw new Ee(`argument key must have a name; singular '-' keys are not allowed: ${a}`,"ARG_CONFIG_NONAME_KEY");if(typeof t[a]=="string"){o[a]=t[a];continue}let c=t[a],l=!1;if(Array.isArray(c)&&c.length===1&&typeof c[0]=="function"){let[f]=c;c=(u,p,d=[])=>(d.push(f(u,p,d[d.length-1])),d),l=f===Boolean||f[oo]===!0}else if(typeof c=="function")l=c===Boolean||c[oo]===!0;else throw new Ee(`type missing or not a function or valid array type: ${a}`,"ARG_CONFIG_VAD_TYPE");if(a[1]!=="-"&&a.length>2)throw new Ee(`short argument keys (with a single hyphen) must have only one character: ${a}`,"ARG_CONFIG_SHORTOPT_TOOLONG");s[a]=[c,l]}for(let a=0,c=e.length;a<c;a++){let l=e[a];if(n&&i._.length>0){i._=i._.concat(e.slice(a));break}if(l==="--"){i._=i._.concat(e.slice(a+1));break}if(l.length>1&&l[0]==="-"){let f=l[1]==="-"||l.length===2?[l]:l.slice(1).split("").map(u=>`-${u}`);for(let u=0;u<f.length;u++){let p=f[u],[d,m]=p[1]==="-"?p.split(/=(.*)/,2):[p,void 0],g=d;for(;g in o;)g=o[g];if(!(g in s))if(r){i._.push(p);continue}else throw new Ee(`unknown or unexpected option: ${d}`,"ARG_UNKNOWN_OPTION");let[h,O]=s[g];if(!O&&u+1<f.length)throw new Ee(`option requires argument (but was followed by another short argument): ${d}`,"ARG_MISSING_REQUIRED_SHORTARG");if(O)i[g]=h(!0,g,i[g]);else if(m===void 0){if(e.length<a+2||e[a+1].length>1&&e[a+1][0]==="-"&&!(e[a+1].match(/^-?\d*(\.(?=\d))?\d*$/)&&(h===Number||typeof BigInt<"u"&&h===BigInt))){let D=d===g?"":` (alias for ${g})`;throw new Ee(`option requires argument: ${d}${D}`,"ARG_MISSING_REQUIRED_LONGARG")}i[g]=h(e[a+1],g,i[g]),++a}else i[g]=h(m,g,i[g])}}else i._.push(l)}return i}Sr.flag=t=>(t[oo]=!0,t);Sr.COUNT=Sr.flag((t,e,r)=>(r||0)+1);Sr.ArgError=Ee;var Iy=Sr;function Ny(t){return Dy(),so[t]}var so;function Dy(){so||(so={"--conditions":[],...$a(Cy()),...$a(process.execArgv)})}function $a(t){return Iy({"--conditions":[String],"-C":"--conditions"},{argv:t,permissive:!0})}function Cy(){let t=[],e=vy(process.env.NODE_OPTIONS||"",t);return t.length,e}function vy(t,e){let r=[],n=!1,i=!0;for(let o=0;o<t.length;++o){let s=t[o];if(s==="\\"&&n){if(o+1===t.length)return e.push(`invalid value for NODE_OPTIONS (invalid escape)
`),r;s=t[++o]}else if(s===" "&&!n){i=!0;continue}else if(s==='"'){n=!n;continue}i?(r.push(s),i=!1):r[r.length-1]+=s}return n&&e.push(`invalid value for NODE_OPTIONS (unterminated string)
`),r}var[Qi,ec]=process.versions.node.split(".").map(t=>parseInt(t,10)),Fy=Qi>19||Qi===19&&ec>=2||Qi===18&&ec>=13;function My(t){if(process.env.WATCH_REPORT_DEPENDENCIES&&process.send)if(t=t.map(e=>P.fromPortablePath(De.resolveVirtual(P.toPortablePath(e)))),Fy)process.send({"watch:require":t});else for(let e of t)process.send({"watch:require":e})}function yc(t,e){let r=Number(process.env.PNP_ALWAYS_WARN_ON_FALLBACK)>0,n=Number(process.env.PNP_DEBUG_LEVEL),i=/^(?![a-zA-Z]:[\\/]|\\\\|\.{0,2}(?:\/|$))((?:node:)?(?:@[^/]+\/)?[^/]+)\/*(.*|)$/,o=/^(\/|\.{1,2}(\/|$))/,s=/\/$/,a=/^\.{0,2}\//,c={name:null,reference:null},l=[],f=new Set;if(t.enableTopLevelFallback===!0&&l.push(c),e.compatibilityMode!==!1)for(let k of["react-scripts","gatsby"]){let A=t.packageRegistry.get(k);if(A)for(let L of A.keys()){if(L===null)throw new Error("Assertion failed: This reference shouldn't be null");l.push({name:k,reference:L})}}let{ignorePattern:u,packageRegistry:p,packageLocatorsByLocations:d}=t;function m(k,A){return{fn:k,args:A,error:null,result:null}}function g(k){let A=process.stderr?.hasColors?.()??process.stdout.isTTY,L=(C,F)=>`\x1B[${C}m${F}\x1B[0m`,y=k.error;console.error(y?L("31;1",`\u2716 ${k.error?.message.replace(/\n.*/s,"")}`):L("33;1","\u203C Resolution")),k.args.length>0&&console.error();for(let C of k.args)console.error(`  ${L("37;1","In \u2190")} ${Ya.inspect(C,{colors:A,compact:!0})}`);k.result&&(console.error(),console.error(`  ${L("37;1","Out \u2192")} ${Ya.inspect(k.result,{colors:A,compact:!0})}`));let b=new Error().stack.match(/(?<=^ +)at.*/gm)?.slice(2)??[];if(b.length>0){console.error();for(let C of b)console.error(`  ${L("38;5;244",C)}`)}console.error()}function h(k,A){if(e.allowDebug===!1)return A;if(Number.isFinite(n)){if(n>=2)return(...L)=>{let y=m(k,L);try{return y.result=A(...L)}catch(b){throw y.error=b}finally{g(y)}};if(n>=1)return(...L)=>{try{return A(...L)}catch(y){let b=m(k,L);throw b.error=y,g(b),y}}}return A}function O(k){let A=x(k);if(!A)throw fe(se.INTERNAL,"Couldn't find a matching entry in the dependency tree for the specified parent (this is probably an internal error)");return A}function D(k){if(k.name===null)return!0;for(let A of t.dependencyTreeRoots)if(A.name===k.name&&A.reference===k.reference)return!0;return!1}let N=new Set(["node","require",...Ny("--conditions")]);function H(k,A=N,L){let y=le(j.join(k,"internal.js"),{resolveIgnored:!0,includeDiscardFromLookup:!0});if(y===null)throw fe(se.INTERNAL,`The locator that owns the "${k}" path can't be found inside the dependency tree (this is probably an internal error)`);let{packageLocation:b}=O(y),C=j.join(b,rn.manifest);if(!e.fakeFs.existsSync(C))return null;let F=JSON.parse(e.fakeFs.readFileSync(C,"utf8"));if(F.exports==null)return null;let S=j.contains(b,k);if(S===null)throw fe(se.INTERNAL,"unqualifiedPath doesn't contain the packageLocation (this is probably an internal error)");S!=="."&&!a.test(S)&&(S=`./${S}`);try{let B=ky({packageJSONUrl:re.pathToFileURL(P.fromPortablePath(C)),packageSubpath:S,exports:F.exports,base:L?re.pathToFileURL(P.fromPortablePath(L)):null,conditions:A});return P.toPortablePath(re.fileURLToPath(B))}catch(B){throw fe(se.EXPORTS_RESOLUTION_FAILED,B.message,{unqualifiedPath:ze(k),locator:y,pkgJson:F,subpath:ze(S),conditions:A},B.code)}}function G(k,A,{extensions:L}){let y;try{A.push(k),y=e.fakeFs.statSync(k)}catch{}if(y&&!y.isDirectory())return e.fakeFs.realpathSync(k);if(y&&y.isDirectory()){let b;try{b=JSON.parse(e.fakeFs.readFileSync(j.join(k,rn.manifest),"utf8"))}catch{}let C;if(b&&b.main&&(C=j.resolve(k,b.main)),C&&C!==k){let F=G(C,A,{extensions:L});if(F!==null)return F}}for(let b=0,C=L.length;b<C;b++){let F=`${k}${L[b]}`;if(A.push(F),e.fakeFs.existsSync(F))return F}if(y&&y.isDirectory())for(let b=0,C=L.length;b<C;b++){let F=j.format({dir:k,name:"index",ext:L[b]});if(A.push(F),e.fakeFs.existsSync(F))return F}return null}function $(k){let A=new gt.Module(k,null);return A.filename=k,A.paths=gt.Module._nodeModulePaths(k),A}function Z(k,A){return A.endsWith("/")&&(A=j.join(A,"internal.js")),gt.Module._resolveFilename(P.fromPortablePath(k),$(P.fromPortablePath(A)),!1,{plugnplay:!1})}function v(k){if(u===null)return!1;let A=j.contains(t.basePath,k);return A===null?!1:!!u.test(A.replace(/\/$/,""))}let U={std:3,resolveVirtual:1,getAllLocators:1},_=c;function x({name:k,reference:A}){let L=p.get(k);if(!L)return null;let y=L.get(A);return y||null}function X({name:k,reference:A}){let L=[];for(let[y,b]of p)if(y!==null)for(let[C,F]of b)C===null||F.packageDependencies.get(k)!==A||y===k&&C===A||L.push({name:y,reference:C});return L}function K(k,A){let L=new Map,y=new Set,b=F=>{let S=JSON.stringify(F.name);if(y.has(S))return;y.add(S);let B=X(F);for(let T of B)if(O(T).packagePeers.has(k))b(T);else{let V=L.get(T.name);typeof V>"u"&&L.set(T.name,V=new Set),V.add(T.reference)}};b(A);let C=[];for(let F of[...L.keys()].sort())for(let S of[...L.get(F)].sort())C.push({name:F,reference:S});return C}function le(k,{resolveIgnored:A=!1,includeDiscardFromLookup:L=!1}={}){if(v(k)&&!A)return null;let y=j.relative(t.basePath,k);y.match(o)||(y=`./${y}`),y.endsWith("/")||(y=`${y}/`);do{let b=d.get(y);if(typeof b>"u"||b.discardFromLookup&&!L){y=y.substring(0,y.lastIndexOf("/",y.length-2)+1);continue}return b.locator}while(y!=="");return null}function R(k){try{return e.fakeFs.readFileSync(P.toPortablePath(k),"utf8")}catch(A){if(A.code==="ENOENT")return;throw A}}function E(k,A,{considerBuiltins:L=!0}={}){if(k.startsWith("#"))throw new Error("resolveToUnqualified can not handle private import mappings");if(k==="pnpapi")return P.toPortablePath(e.pnpapiResolution);if(L&&gt.isBuiltin(k))return null;let y=ze(k),b=A&&ze(A);if(A&&v(A)&&(!j.isAbsolute(k)||le(k)===null)){let S=Z(k,A);if(S===!1)throw fe(se.BUILTIN_NODE_RESOLUTION_FAILED,`The builtin node resolution algorithm was unable to resolve the requested module (it didn't go through the pnp resolver because the issuer was explicitely ignored by the regexp)

Require request: "${y}"
Required by: ${b}
`,{request:y,issuer:b});return P.toPortablePath(S)}let C,F=k.match(i);if(F){if(!A)throw fe(se.API_ERROR,"The resolveToUnqualified function must be called with a valid issuer when the path isn't a builtin nor absolute",{request:y,issuer:b});let[,S,B]=F,T=le(A);if(!T){let Se=Z(k,A);if(Se===!1)throw fe(se.BUILTIN_NODE_RESOLUTION_FAILED,`The builtin node resolution algorithm was unable to resolve the requested module (it didn't go through the pnp resolver because the issuer doesn't seem to be part of the Yarn-managed dependency tree).

Require path: "${y}"
Required by: ${b}
`,{request:y,issuer:b});return P.toPortablePath(Se)}let V=O(T).packageDependencies.get(S),ne=null;if(V==null&&T.name!==null){let Se=t.fallbackExclusionList.get(T.name);if(!Se||!Se.has(T.reference)){for(let Ut=0,wg=l.length;Ut<wg;++Ut){let Ki=O(l[Ut]).packageDependencies.get(S);if(Ki!=null){r?ne=Ki:V=Ki;break}}if(t.enableTopLevelFallback&&V==null&&ne===null){let Ut=t.fallbackPool.get(S);Ut!=null&&(ne=Ut)}}}let Q=null;if(V===null)if(D(T))Q=fe(se.MISSING_PEER_DEPENDENCY,`Your application tried to access ${S} (a peer dependency); this isn't allowed as there is no ancestor to satisfy the requirement. Use a devDependency if needed.

Required package: ${S}${S!==y?` (via "${y}")`:""}
Required by: ${b}
`,{request:y,issuer:b,dependencyName:S});else{let Se=K(S,T);Se.every(nt=>D(nt))?Q=fe(se.MISSING_PEER_DEPENDENCY,`${T.name} tried to access ${S} (a peer dependency) but it isn't provided by your application; this makes the require call ambiguous and unsound.

Required package: ${S}${S!==y?` (via "${y}")`:""}
Required by: ${T.name}@${T.reference} (via ${b})
${Se.map(nt=>`Ancestor breaking the chain: ${nt.name}@${nt.reference}
`).join("")}
`,{request:y,issuer:b,issuerLocator:Object.assign({},T),dependencyName:S,brokenAncestors:Se}):Q=fe(se.MISSING_PEER_DEPENDENCY,`${T.name} tried to access ${S} (a peer dependency) but it isn't provided by its ancestors; this makes the require call ambiguous and unsound.

Required package: ${S}${S!==y?` (via "${y}")`:""}
Required by: ${T.name}@${T.reference} (via ${b})

${Se.map(nt=>`Ancestor breaking the chain: ${nt.name}@${nt.reference}
`).join("")}
`,{request:y,issuer:b,issuerLocator:Object.assign({},T),dependencyName:S,brokenAncestors:Se})}else V===void 0&&(!L&&gt.isBuiltin(k)?D(T)?Q=fe(se.UNDECLARED_DEPENDENCY,`Your application tried to access ${S}. While this module is usually interpreted as a Node builtin, your resolver is running inside a non-Node resolution context where such builtins are ignored. Since ${S} isn't otherwise declared in your dependencies, this makes the require call ambiguous and unsound.

Required package: ${S}${S!==y?` (via "${y}")`:""}
Required by: ${b}
`,{request:y,issuer:b,dependencyName:S}):Q=fe(se.UNDECLARED_DEPENDENCY,`${T.name} tried to access ${S}. While this module is usually interpreted as a Node builtin, your resolver is running inside a non-Node resolution context where such builtins are ignored. Since ${S} isn't otherwise declared in ${T.name}'s dependencies, this makes the require call ambiguous and unsound.

Required package: ${S}${S!==y?` (via "${y}")`:""}
Required by: ${b}
`,{request:y,issuer:b,issuerLocator:Object.assign({},T),dependencyName:S}):D(T)?Q=fe(se.UNDECLARED_DEPENDENCY,`Your application tried to access ${S}, but it isn't declared in your dependencies; this makes the require call ambiguous and unsound.

Required package: ${S}${S!==y?` (via "${y}")`:""}
Required by: ${b}
`,{request:y,issuer:b,dependencyName:S}):Q=fe(se.UNDECLARED_DEPENDENCY,`${T.name} tried to access ${S}, but it isn't declared in its dependencies; this makes the require call ambiguous and unsound.

Required package: ${S}${S!==y?` (via "${y}")`:""}
Required by: ${T.name}@${T.reference} (via ${b})
`,{request:y,issuer:b,issuerLocator:Object.assign({},T),dependencyName:S}));if(V==null){if(ne===null||Q===null)throw Q||new Error("Assertion failed: Expected an error to have been set");V=ne;let Se=Q.message.replace(/\n.*/g,"");Q.message=Se,!f.has(Se)&&n!==0&&(f.add(Se),process.emitWarning(Q))}let Xe=Array.isArray(V)?{name:V[0],reference:V[1]}:{name:S,reference:V},mt=O(Xe);if(!mt.packageLocation)throw fe(se.MISSING_DEPENDENCY,`A dependency seems valid but didn't get installed for some reason. This might be caused by a partial install, such as dev vs prod.

Required package: ${Xe.name}@${Xe.reference}${Xe.name!==y?` (via "${y}")`:""}
Required by: ${T.name}@${T.reference} (via ${b})
`,{request:y,issuer:b,dependencyLocator:Object.assign({},Xe)});let ja=mt.packageLocation;B?C=j.join(ja,B):C=ja}else if(j.isAbsolute(k))C=j.normalize(k);else{if(!A)throw fe(se.API_ERROR,"The resolveToUnqualified function must be called with a valid issuer when the path isn't a builtin nor absolute",{request:y,issuer:b});let S=j.resolve(A);A.match(s)?C=j.normalize(j.join(S,k)):C=j.normalize(j.join(j.dirname(S),k))}return j.normalize(C)}function ue(k,A,L=N,y){if(o.test(k))return A;let b=H(A,L,y);return b?j.normalize(b):A}function Y(k,{extensions:A=Object.keys(gt.Module._extensions)}={}){let L=[],y=G(k,L,{extensions:A});if(y)return j.normalize(y);{My(L.map(F=>P.fromPortablePath(F)));let b=ze(k),C=le(k);if(C){let{packageLocation:F}=O(C),S=!0;try{e.fakeFs.accessSync(F)}catch(B){if(B?.code==="ENOENT")S=!1;else{let T=(B?.message??B??"empty exception thrown").replace(/^[A-Z]/,z=>z.toLowerCase());throw fe(se.QUALIFIED_PATH_RESOLUTION_FAILED,`Required package exists but could not be accessed (${T}).

Missing package: ${C.name}@${C.reference}
Expected package location: ${ze(F)}
`,{unqualifiedPath:b,extensions:A})}}if(!S){let B=F.includes("/unplugged/")?"Required unplugged package missing from disk. This may happen when switching branches without running installs (unplugged packages must be fully materialized on disk to work).":"Required package missing from disk. If you keep your packages inside your repository then restarting the Node process may be enough. Otherwise, try to run an install first.";throw fe(se.QUALIFIED_PATH_RESOLUTION_FAILED,`${B}

Missing package: ${C.name}@${C.reference}
Expected package location: ${ze(F)}
`,{unqualifiedPath:b,extensions:A})}}throw fe(se.QUALIFIED_PATH_RESOLUTION_FAILED,`Qualified path resolution failed: we looked for the following paths, but none could be accessed.

Source path: ${b}
${L.map(F=>`Not found: ${ze(F)}
`).join("")}`,{unqualifiedPath:b,extensions:A})}}function we(k,A,L){if(!A)throw new Error("Assertion failed: An issuer is required to resolve private import mappings");let y=Ly({name:k,base:re.pathToFileURL(P.fromPortablePath(A)),conditions:L.conditions??N,readFileSyncFn:R});if(y instanceof URL)return Y(P.toPortablePath(re.fileURLToPath(y)),{extensions:L.extensions});if(y.startsWith("#"))throw new Error("Mapping from one private import to another isn't allowed");return te(y,A,L)}function te(k,A,L={}){try{if(k.startsWith("#"))return we(k,A,L);let{considerBuiltins:y,extensions:b,conditions:C}=L,F=E(k,A,{considerBuiltins:y});if(k==="pnpapi")return F;if(F===null)return null;let S=()=>A!==null?v(A):!1,B=(!y||!gt.isBuiltin(k))&&!S()?ue(k,F,C,A):F;return Y(B,{extensions:b})}catch(y){throw Object.hasOwn(y,"pnpCode")&&Object.assign(y.data,{request:ze(k),issuer:A&&ze(A)}),y}}function de(k){let A=j.normalize(k),L=De.resolveVirtual(A);return L!==A?L:null}return{VERSIONS:U,topLevel:_,getLocator:(k,A)=>Array.isArray(A)?{name:A[0],reference:A[1]}:{name:k,reference:A},getDependencyTreeRoots:()=>[...t.dependencyTreeRoots],getAllLocators(){let k=[];for(let[A,L]of p)for(let y of L.keys())A!==null&&y!==null&&k.push({name:A,reference:y});return k},getPackageInformation:k=>{let A=x(k);if(A===null)return null;let L=P.fromPortablePath(A.packageLocation);return{...A,packageLocation:L}},findPackageLocator:k=>le(P.toPortablePath(k)),resolveToUnqualified:h("resolveToUnqualified",(k,A,L)=>{let y=A!==null?P.toPortablePath(A):null,b=E(P.toPortablePath(k),y,L);return b===null?null:P.fromPortablePath(b)}),resolveUnqualified:h("resolveUnqualified",(k,A)=>P.fromPortablePath(Y(P.toPortablePath(k),A))),resolveRequest:h("resolveRequest",(k,A,L)=>{let y=A!==null?P.toPortablePath(A):null,b=te(P.toPortablePath(k),y,L);return b===null?null:P.fromPortablePath(b)}),resolveVirtual:h("resolveVirtual",k=>{let A=de(P.toPortablePath(k));return A!==null?P.fromPortablePath(A):null})}}async function Uy(t,{fakeFs:e,pnpapiResolution:r}){let n=await e.readFilePromise(t,"utf8");return Sc(n,{basePath:tc.dirname(t),fakeFs:e,pnpapiResolution:r})}function Sc(t,{basePath:e,fakeFs:r,pnpapiResolution:n}){let i=JSON.parse(t),o=fc(i,{basePath:e});return yc(o,{compatibilityMode:!0,fakeFs:r,pnpapiResolution:n})}var By=(t,e,r)=>{let n=co(t),i=fc(n,{basePath:e}),o=P.join(e,rn.pnpCjs);return yc(i,{fakeFs:r,pnpapiResolution:o})},_i,Hy=()=>(typeof _i>"u"&&(_i=rc.default.brotliDecompressSync(Buffer.from("","base64")).toString()),_i);Ce.LinkType=nc;Ce.generateInlinedScript=uy;Ce.generateLoader=lo;Ce.generatePrettyJson=uc;Ce.generateSplitScript=fy;Ce.getESMLoaderTemplate=Hy;Ce.hydratePnpFile=Uy;Ce.hydratePnpSource=Sc;Ce.makeRuntimeApi=By});var il=W((Yk,nl)=>{nl.exports=rl;rl.sync=NS;var el=w("fs");function IS(t,e){var r=e.pathExt!==void 0?e.pathExt:process.env.PATHEXT;if(!r||(r=r.split(";"),r.indexOf("")!==-1))return!0;for(var n=0;n<r.length;n++){var i=r[n].toLowerCase();if(i&&t.substr(-i.length).toLowerCase()===i)return!0}return!1}function tl(t,e,r){return!t.isSymbolicLink()&&!t.isFile()?!1:IS(e,r)}function rl(t,e,r){el.stat(t,function(n,i){r(n,n?!1:tl(i,t,e))})}function NS(t,e){return tl(el.statSync(t),t,e)}});var ll=W((Vk,cl)=>{cl.exports=sl;sl.sync=DS;var ol=w("fs");function sl(t,e,r){ol.stat(t,function(n,i){r(n,n?!1:al(i,e))})}function DS(t,e){return al(ol.statSync(t),e)}function al(t,e){return t.isFile()&&CS(t,e)}function CS(t,e){var r=t.mode,n=t.uid,i=t.gid,o=e.uid!==void 0?e.uid:process.getuid&&process.getuid(),s=e.gid!==void 0?e.gid:process.getgid&&process.getgid(),a=parseInt("100",8),c=parseInt("010",8),l=parseInt("001",8),f=a|c,u=r&l||r&c&&i===s||r&a&&n===o||r&f&&o===0;return u}});var fl=W((Zk,ul)=>{var Kk=w("fs"),xn;process.platform==="win32"||global.TESTING_WINDOWS?xn=il():xn=ll();ul.exports=Eo;Eo.sync=vS;function Eo(t,e,r){if(typeof e=="function"&&(r=e,e={}),!r){if(typeof Promise!="function")throw new TypeError("callback not provided");return new Promise(function(n,i){Eo(t,e||{},function(o,s){o?i(o):n(s)})})}xn(t,e||{},function(n,i){n&&(n.code==="EACCES"||e&&e.ignoreErrors)&&(n=null,i=!1),r(n,i)})}function vS(t,e){try{return xn.sync(t,e||{})}catch(r){if(e&&e.ignoreErrors||r.code==="EACCES")return!1;throw r}}});var Sl=W((Jk,yl)=>{var jt=process.platform==="win32"||process.env.OSTYPE==="cygwin"||process.env.OSTYPE==="msys",pl=w("path"),FS=jt?";":":",dl=fl(),hl=t=>Object.assign(new Error(`not found: ${t}`),{code:"ENOENT"}),ml=(t,e)=>{let r=e.colon||FS,n=t.match(/\//)||jt&&t.match(/\\/)?[""]:[...jt?[process.cwd()]:[],...(e.path||process.env.PATH||"").split(r)],i=jt?e.pathExt||process.env.PATHEXT||".EXE;.CMD;.BAT;.COM":"",o=jt?i.split(r):[""];return jt&&t.indexOf(".")!==-1&&o[0]!==""&&o.unshift(""),{pathEnv:n,pathExt:o,pathExtExe:i}},gl=(t,e,r)=>{typeof e=="function"&&(r=e,e={}),e||(e={});let{pathEnv:n,pathExt:i,pathExtExe:o}=ml(t,e),s=[],a=l=>new Promise((f,u)=>{if(l===n.length)return e.all&&s.length?f(s):u(hl(t));let p=n[l],d=/^".*"$/.test(p)?p.slice(1,-1):p,m=pl.join(d,t),g=!d&&/^\.[\\\/]/.test(t)?t.slice(0,2)+m:m;f(c(g,l,0))}),c=(l,f,u)=>new Promise((p,d)=>{if(u===i.length)return p(a(f+1));let m=i[u];dl(l+m,{pathExt:o},(g,h)=>{if(!g&&h)if(e.all)s.push(l+m);else return p(l+m);return p(c(l,f,u+1))})});return r?a(0).then(l=>r(null,l),r):a(0)},MS=(t,e)=>{e=e||{};let{pathEnv:r,pathExt:n,pathExtExe:i}=ml(t,e),o=[];for(let s=0;s<r.length;s++){let a=r[s],c=/^".*"$/.test(a)?a.slice(1,-1):a,l=pl.join(c,t),f=!c&&/^\.[\\\/]/.test(t)?t.slice(0,2)+l:l;for(let u=0;u<n.length;u++){let p=f+n[u];try{if(dl.sync(p,{pathExt:i}))if(e.all)o.push(p);else return p}catch{}}}if(e.all&&o.length)return o;if(e.nothrow)return null;throw hl(t)};yl.exports=gl;gl.sync=MS});var wl=W((Xk,Po)=>{"use strict";var bl=(t={})=>{let e=t.env||process.env;return(t.platform||process.platform)!=="win32"?"PATH":Object.keys(e).reverse().find(n=>n.toUpperCase()==="PATH")||"Path"};Po.exports=bl;Po.exports.default=bl});var Rl=W((Qk,xl)=>{"use strict";var El=w("path"),US=Sl(),BS=wl();function Pl(t,e){let r=t.options.env||process.env,n=process.cwd(),i=t.options.cwd!=null,o=i&&process.chdir!==void 0&&!process.chdir.disabled;if(o)try{process.chdir(t.options.cwd)}catch{}let s;try{s=US.sync(t.command,{path:r[BS({env:r})],pathExt:e?El.delimiter:void 0})}catch{}finally{o&&process.chdir(n)}return s&&(s=El.resolve(i?t.options.cwd:"",s)),s}function HS(t){return Pl(t)||Pl(t,!0)}xl.exports=HS});var Tl=W((_k,Ro)=>{"use strict";var xo=/([()\][%!^"`<>&|;, *?])/g;function GS(t){return t=t.replace(xo,"^$1"),t}function zS(t,e){return t=`${t}`,t=t.replace(/(\\*)"/g,'$1$1\\"'),t=t.replace(/(\\*)$/,"$1$1"),t=`"${t}"`,t=t.replace(xo,"^$1"),e&&(t=t.replace(xo,"^$1")),t}Ro.exports.command=GS;Ro.exports.argument=zS});var kl=W(($k,Al)=>{"use strict";Al.exports=/^#!(.*)/});var Ol=W((eL,Ll)=>{"use strict";var WS=kl();Ll.exports=(t="")=>{let e=t.match(WS);if(!e)return null;let[r,n]=e[0].replace(/#! ?/,"").split(" "),i=r.split("/").pop();return i==="env"?n:n?`${i} ${n}`:i}});var Nl=W((tL,Il)=>{"use strict";var To=w("fs"),jS=Ol();function qS(t){let r=Buffer.alloc(150),n;try{n=To.openSync(t,"r"),To.readSync(n,r,0,150,0),To.closeSync(n)}catch{}return jS(r.toString())}Il.exports=qS});var Fl=W((rL,vl)=>{"use strict";var YS=w("path"),Dl=Rl(),Cl=Tl(),VS=Nl(),KS=process.platform==="win32",ZS=/\.(?:com|exe)$/i,JS=/node_modules[\\/].bin[\\/][^\\/]+\.cmd$/i;function XS(t){t.file=Dl(t);let e=t.file&&VS(t.file);return e?(t.args.unshift(t.file),t.command=e,Dl(t)):t.file}function QS(t){if(!KS)return t;let e=XS(t),r=!ZS.test(e);if(t.options.forceShell||r){let n=JS.test(e);t.command=YS.normalize(t.command),t.command=Cl.command(t.command),t.args=t.args.map(o=>Cl.argument(o,n));let i=[t.command].concat(t.args).join(" ");t.args=["/d","/s","/c",`"${i}"`],t.command=process.env.comspec||"cmd.exe",t.options.windowsVerbatimArguments=!0}return t}function _S(t,e,r){e&&!Array.isArray(e)&&(r=e,e=null),e=e?e.slice(0):[],r=Object.assign({},r);let n={command:t,args:e,options:r,file:void 0,original:{command:t,args:e}};return r.shell?n:QS(n)}vl.exports=_S});var Bl=W((nL,Ul)=>{"use strict";var Ao=process.platform==="win32";function ko(t,e){return Object.assign(new Error(`${e} ${t.command} ENOENT`),{code:"ENOENT",errno:"ENOENT",syscall:`${e} ${t.command}`,path:t.command,spawnargs:t.args})}function $S(t,e){if(!Ao)return;let r=t.emit;t.emit=function(n,i){if(n==="exit"){let o=Ml(i,e,"spawn");if(o)return r.call(t,"error",o)}return r.apply(t,arguments)}}function Ml(t,e){return Ao&&t===1&&!e.file?ko(e.original,"spawn"):null}function eb(t,e){return Ao&&t===1&&!e.file?ko(e.original,"spawnSync"):null}Ul.exports={hookChildProcess:$S,verifyENOENT:Ml,verifyENOENTSync:eb,notFoundError:ko}});var zl=W((iL,qt)=>{"use strict";var Hl=w("child_process"),Lo=Fl(),Oo=Bl();function Gl(t,e,r){let n=Lo(t,e,r),i=Hl.spawn(n.command,n.args,n.options);return Oo.hookChildProcess(i,n),i}function tb(t,e,r){let n=Lo(t,e,r),i=Hl.spawnSync(n.command,n.args,n.options);return i.error=i.error||Oo.verifyENOENTSync(i.status,n),i}qt.exports=Gl;qt.exports.spawn=Gl;qt.exports.sync=tb;qt.exports._parse=Lo;qt.exports._enoent=Oo});var xi=W(Ie=>{"use strict";Ie.isInteger=t=>typeof t=="number"?Number.isInteger(t):typeof t=="string"&&t.trim()!==""?Number.isInteger(Number(t)):!1;Ie.find=(t,e)=>t.nodes.find(r=>r.type===e);Ie.exceedsLimit=(t,e,r=1,n)=>n===!1||!Ie.isInteger(t)||!Ie.isInteger(e)?!1:(Number(e)-Number(t))/Number(r)>=n;Ie.escapeNode=(t,e=0,r)=>{let n=t.nodes[e];!n||(r&&n.type===r||n.type==="open"||n.type==="close")&&n.escaped!==!0&&(n.value="\\"+n.value,n.escaped=!0)};Ie.encloseBrace=t=>t.type!=="brace"?!1:t.commas>>0+t.ranges>>0===0?(t.invalid=!0,!0):!1;Ie.isInvalidBrace=t=>t.type!=="brace"?!1:t.invalid===!0||t.dollar?!0:t.commas>>0+t.ranges>>0===0||t.open!==!0||t.close!==!0?(t.invalid=!0,!0):!1;Ie.isOpenOrClose=t=>t.type==="open"||t.type==="close"?!0:t.open===!0||t.close===!0;Ie.reduce=t=>t.reduce((e,r)=>(r.type==="text"&&e.push(r.value),r.type==="range"&&(r.type="text"),e),[]);Ie.flatten=(...t)=>{let e=[],r=n=>{for(let i=0;i<n.length;i++){let o=n[i];if(Array.isArray(o)){r(o);continue}o!==void 0&&e.push(o)}return e};return r(t),e}});var Ri=W((HF,ch)=>{"use strict";var ah=xi();ch.exports=(t,e={})=>{let r=(n,i={})=>{let o=e.escapeInvalid&&ah.isInvalidBrace(i),s=n.invalid===!0&&e.escapeInvalid===!0,a="";if(n.value)return(o||s)&&ah.isOpenOrClose(n)?"\\"+n.value:n.value;if(n.value)return n.value;if(n.nodes)for(let c of n.nodes)a+=r(c);return a};return r(t)}});var uh=W((GF,lh)=>{"use strict";lh.exports=function(t){return typeof t=="number"?t-t===0:typeof t=="string"&&t.trim()!==""?Number.isFinite?Number.isFinite(+t):isFinite(+t):!1}});var bh=W((zF,Sh)=>{"use strict";var fh=uh(),Tt=(t,e,r)=>{if(fh(t)===!1)throw new TypeError("toRegexRange: expected the first argument to be a number");if(e===void 0||t===e)return String(t);if(fh(e)===!1)throw new TypeError("toRegexRange: expected the second argument to be a number.");let n={relaxZeros:!0,...r};typeof n.strictZeros=="boolean"&&(n.relaxZeros=n.strictZeros===!1);let i=String(n.relaxZeros),o=String(n.shorthand),s=String(n.capture),a=String(n.wrap),c=t+":"+e+"="+i+o+s+a;if(Tt.cache.hasOwnProperty(c))return Tt.cache[c].result;let l=Math.min(t,e),f=Math.max(t,e);if(Math.abs(l-f)===1){let g=t+"|"+e;return n.capture?`(${g})`:n.wrap===!1?g:`(?:${g})`}let u=yh(t)||yh(e),p={min:t,max:e,a:l,b:f},d=[],m=[];if(u&&(p.isPadded=u,p.maxLen=String(p.max).length),l<0){let g=f<0?Math.abs(f):1;m=ph(g,Math.abs(l),p,n),l=p.a=0}return f>=0&&(d=ph(l,f,p,n)),p.negatives=m,p.positives=d,p.result=Kx(m,d,n),n.capture===!0?p.result=`(${p.result})`:n.wrap!==!1&&d.length+m.length>1&&(p.result=`(?:${p.result})`),Tt.cache[c]=p,p.result};function Kx(t,e,r){let n=Zs(t,e,"-",!1,r)||[],i=Zs(e,t,"",!1,r)||[],o=Zs(t,e,"-?",!0,r)||[];return n.concat(o).concat(i).join("|")}function Zx(t,e){let r=1,n=1,i=hh(t,r),o=new Set([e]);for(;t<=i&&i<=e;)o.add(i),r+=1,i=hh(t,r);for(i=mh(e+1,n)-1;t<i&&i<=e;)o.add(i),n+=1,i=mh(e+1,n)-1;return o=[...o],o.sort(Qx),o}function Jx(t,e,r){if(t===e)return{pattern:t,count:[],digits:0};let n=Xx(t,e),i=n.length,o="",s=0;for(let a=0;a<i;a++){let[c,l]=n[a];c===l?o+=c:c!=="0"||l!=="9"?o+=_x(c,l,r):s++}return s&&(o+=r.shorthand===!0?"\\d":"[0-9]"),{pattern:o,count:[s],digits:i}}function ph(t,e,r,n){let i=Zx(t,e),o=[],s=t,a;for(let c=0;c<i.length;c++){let l=i[c],f=Jx(String(s),String(l),n),u="";if(!r.isPadded&&a&&a.pattern===f.pattern){a.count.length>1&&a.count.pop(),a.count.push(f.count[0]),a.string=a.pattern+gh(a.count),s=l+1;continue}r.isPadded&&(u=$x(l,r,n)),f.string=u+f.pattern+gh(f.count),o.push(f),s=l+1,a=f}return o}function Zs(t,e,r,n,i){let o=[];for(let s of t){let{string:a}=s;!n&&!dh(e,"string",a)&&o.push(r+a),n&&dh(e,"string",a)&&o.push(r+a)}return o}function Xx(t,e){let r=[];for(let n=0;n<t.length;n++)r.push([t[n],e[n]]);return r}function Qx(t,e){return t>e?1:e>t?-1:0}function dh(t,e,r){return t.some(n=>n[e]===r)}function hh(t,e){return Number(String(t).slice(0,-e)+"9".repeat(e))}function mh(t,e){return t-t%Math.pow(10,e)}function gh(t){let[e=0,r=""]=t;return r||e>1?`{${e+(r?","+r:"")}}`:""}function _x(t,e,r){return`[${t}${e-t===1?"":"-"}${e}]`}function yh(t){return/^-?(0+)\d/.test(t)}function $x(t,e,r){if(!e.isPadded)return t;let n=Math.abs(e.maxLen-String(t).length),i=r.relaxZeros!==!1;switch(n){case 0:return"";case 1:return i?"0?":"0";case 2:return i?"0{0,2}":"00";default:return i?`0{0,${n}}`:`0{${n}}`}}Tt.cache={};Tt.clearCache=()=>Tt.cache={};Sh.exports=Tt});var Qs=W((WF,Ah)=>{"use strict";var eR=w("util"),Eh=bh(),wh=t=>t!==null&&typeof t=="object"&&!Array.isArray(t),tR=t=>e=>t===!0?Number(e):String(e),Js=t=>typeof t=="number"||typeof t=="string"&&t!=="",Br=t=>Number.isInteger(+t),Xs=t=>{let e=`${t}`,r=-1;if(e[0]==="-"&&(e=e.slice(1)),e==="0")return!1;for(;e[++r]==="0";);return r>0},rR=(t,e,r)=>typeof t=="string"||typeof e=="string"?!0:r.stringify===!0,nR=(t,e,r)=>{if(e>0){let n=t[0]==="-"?"-":"";n&&(t=t.slice(1)),t=n+t.padStart(n?e-1:e,"0")}return r===!1?String(t):t},Ai=(t,e)=>{let r=t[0]==="-"?"-":"";for(r&&(t=t.slice(1),e--);t.length<e;)t="0"+t;return r?"-"+t:t},iR=(t,e,r)=>{t.negatives.sort((a,c)=>a<c?-1:a>c?1:0),t.positives.sort((a,c)=>a<c?-1:a>c?1:0);let n=e.capture?"":"?:",i="",o="",s;return t.positives.length&&(i=t.positives.map(a=>Ai(String(a),r)).join("|")),t.negatives.length&&(o=`-(${n}${t.negatives.map(a=>Ai(String(a),r)).join("|")})`),i&&o?s=`${i}|${o}`:s=i||o,e.wrap?`(${n}${s})`:s},Ph=(t,e,r,n)=>{if(r)return Eh(t,e,{wrap:!1,...n});let i=String.fromCharCode(t);if(t===e)return i;let o=String.fromCharCode(e);return`[${i}-${o}]`},xh=(t,e,r)=>{if(Array.isArray(t)){let n=r.wrap===!0,i=r.capture?"":"?:";return n?`(${i}${t.join("|")})`:t.join("|")}return Eh(t,e,r)},Rh=(...t)=>new RangeError("Invalid range arguments: "+eR.inspect(...t)),Th=(t,e,r)=>{if(r.strictRanges===!0)throw Rh([t,e]);return[]},oR=(t,e)=>{if(e.strictRanges===!0)throw new TypeError(`Expected step "${t}" to be a number`);return[]},sR=(t,e,r=1,n={})=>{let i=Number(t),o=Number(e);if(!Number.isInteger(i)||!Number.isInteger(o)){if(n.strictRanges===!0)throw Rh([t,e]);return[]}i===0&&(i=0),o===0&&(o=0);let s=i>o,a=String(t),c=String(e),l=String(r);r=Math.max(Math.abs(r),1);let f=Xs(a)||Xs(c)||Xs(l),u=f?Math.max(a.length,c.length,l.length):0,p=f===!1&&rR(t,e,n)===!1,d=n.transform||tR(p);if(n.toRegex&&r===1)return Ph(Ai(t,u),Ai(e,u),!0,n);let m={negatives:[],positives:[]},g=D=>m[D<0?"negatives":"positives"].push(Math.abs(D)),h=[],O=0;for(;s?i>=o:i<=o;)n.toRegex===!0&&r>1?g(i):h.push(nR(d(i,O),u,p)),i=s?i-r:i+r,O++;return n.toRegex===!0?r>1?iR(m,n,u):xh(h,null,{wrap:!1,...n}):h},aR=(t,e,r=1,n={})=>{if(!Br(t)&&t.length>1||!Br(e)&&e.length>1)return Th(t,e,n);let i=n.transform||(p=>String.fromCharCode(p)),o=`${t}`.charCodeAt(0),s=`${e}`.charCodeAt(0),a=o>s,c=Math.min(o,s),l=Math.max(o,s);if(n.toRegex&&r===1)return Ph(c,l,!1,n);let f=[],u=0;for(;a?o>=s:o<=s;)f.push(i(o,u)),o=a?o-r:o+r,u++;return n.toRegex===!0?xh(f,null,{wrap:!1,options:n}):f},Ti=(t,e,r,n={})=>{if(e==null&&Js(t))return[t];if(!Js(t)||!Js(e))return Th(t,e,n);if(typeof r=="function")return Ti(t,e,1,{transform:r});if(wh(r))return Ti(t,e,0,r);let i={...n};return i.capture===!0&&(i.wrap=!0),r=r||i.step||1,Br(r)?Br(t)&&Br(e)?sR(t,e,r,i):aR(t,e,Math.max(Math.abs(r),1),i):r!=null&&!wh(r)?oR(r,i):Ti(t,e,1,r)};Ah.exports=Ti});var Oh=W((jF,Lh)=>{"use strict";var cR=Qs(),kh=xi(),lR=(t,e={})=>{let r=(n,i={})=>{let o=kh.isInvalidBrace(i),s=n.invalid===!0&&e.escapeInvalid===!0,a=o===!0||s===!0,c=e.escapeInvalid===!0?"\\":"",l="";if(n.isOpen===!0)return c+n.value;if(n.isClose===!0)return console.log("node.isClose",c,n.value),c+n.value;if(n.type==="open")return a?c+n.value:"(";if(n.type==="close")return a?c+n.value:")";if(n.type==="comma")return n.prev.type==="comma"?"":a?n.value:"|";if(n.value)return n.value;if(n.nodes&&n.ranges>0){let f=kh.reduce(n.nodes),u=cR(...f,{...e,wrap:!1,toRegex:!0,strictZeros:!0});if(u.length!==0)return f.length>1&&u.length>1?`(${u})`:u}if(n.nodes)for(let f of n.nodes)l+=r(f,n);return l};return r(t)};Lh.exports=lR});var Dh=W((qF,Nh)=>{"use strict";var uR=Qs(),Ih=Ri(),or=xi(),At=(t="",e="",r=!1)=>{let n=[];if(t=[].concat(t),e=[].concat(e),!e.length)return t;if(!t.length)return r?or.flatten(e).map(i=>`{${i}}`):e;for(let i of t)if(Array.isArray(i))for(let o of i)n.push(At(o,e,r));else for(let o of e)r===!0&&typeof o=="string"&&(o=`{${o}}`),n.push(Array.isArray(o)?At(i,o,r):i+o);return or.flatten(n)},fR=(t,e={})=>{let r=e.rangeLimit===void 0?1e3:e.rangeLimit,n=(i,o={})=>{i.queue=[];let s=o,a=o.queue;for(;s.type!=="brace"&&s.type!=="root"&&s.parent;)s=s.parent,a=s.queue;if(i.invalid||i.dollar){a.push(At(a.pop(),Ih(i,e)));return}if(i.type==="brace"&&i.invalid!==!0&&i.nodes.length===2){a.push(At(a.pop(),["{}"]));return}if(i.nodes&&i.ranges>0){let u=or.reduce(i.nodes);if(or.exceedsLimit(...u,e.step,r))throw new RangeError("expanded array length exceeds range limit. Use options.rangeLimit to increase or disable the limit.");let p=uR(...u,e);p.length===0&&(p=Ih(i,e)),a.push(At(a.pop(),p)),i.nodes=[];return}let c=or.encloseBrace(i),l=i.queue,f=i;for(;f.type!=="brace"&&f.type!=="root"&&f.parent;)f=f.parent,l=f.queue;for(let u=0;u<i.nodes.length;u++){let p=i.nodes[u];if(p.type==="comma"&&i.type==="brace"){u===1&&l.push(""),l.push("");continue}if(p.type==="close"){a.push(At(a.pop(),l,c));continue}if(p.value&&p.type!=="open"){l.push(At(l.pop(),p.value));continue}p.nodes&&n(p,i)}return l};return or.flatten(n(t))};Nh.exports=fR});var vh=W((YF,Ch)=>{"use strict";Ch.exports={MAX_LENGTH:1e4,CHAR_0:"0",CHAR_9:"9",CHAR_UPPERCASE_A:"A",CHAR_LOWERCASE_A:"a",CHAR_UPPERCASE_Z:"Z",CHAR_LOWERCASE_Z:"z",CHAR_LEFT_PARENTHESES:"(",CHAR_RIGHT_PARENTHESES:")",CHAR_ASTERISK:"*",CHAR_AMPERSAND:"&",CHAR_AT:"@",CHAR_BACKSLASH:"\\",CHAR_BACKTICK:"`",CHAR_CARRIAGE_RETURN:"\r",CHAR_CIRCUMFLEX_ACCENT:"^",CHAR_COLON:":",CHAR_COMMA:",",CHAR_DOLLAR:"$",CHAR_DOT:".",CHAR_DOUBLE_QUOTE:'"',CHAR_EQUAL:"=",CHAR_EXCLAMATION_MARK:"!",CHAR_FORM_FEED:"\f",CHAR_FORWARD_SLASH:"/",CHAR_HASH:"#",CHAR_HYPHEN_MINUS:"-",CHAR_LEFT_ANGLE_BRACKET:"<",CHAR_LEFT_CURLY_BRACE:"{",CHAR_LEFT_SQUARE_BRACKET:"[",CHAR_LINE_FEED:`
`,CHAR_NO_BREAK_SPACE:"\xA0",CHAR_PERCENT:"%",CHAR_PLUS:"+",CHAR_QUESTION_MARK:"?",CHAR_RIGHT_ANGLE_BRACKET:">",CHAR_RIGHT_CURLY_BRACE:"}",CHAR_RIGHT_SQUARE_BRACKET:"]",CHAR_SEMICOLON:";",CHAR_SINGLE_QUOTE:"'",CHAR_SPACE:" ",CHAR_TAB:"	",CHAR_UNDERSCORE:"_",CHAR_VERTICAL_LINE:"|",CHAR_ZERO_WIDTH_NOBREAK_SPACE:"\uFEFF"}});var Hh=W((VF,Bh)=>{"use strict";var pR=Ri(),{MAX_LENGTH:Fh,CHAR_BACKSLASH:_s,CHAR_BACKTICK:dR,CHAR_COMMA:hR,CHAR_DOT:mR,CHAR_LEFT_PARENTHESES:gR,CHAR_RIGHT_PARENTHESES:yR,CHAR_LEFT_CURLY_BRACE:SR,CHAR_RIGHT_CURLY_BRACE:bR,CHAR_LEFT_SQUARE_BRACKET:Mh,CHAR_RIGHT_SQUARE_BRACKET:Uh,CHAR_DOUBLE_QUOTE:wR,CHAR_SINGLE_QUOTE:ER,CHAR_NO_BREAK_SPACE:PR,CHAR_ZERO_WIDTH_NOBREAK_SPACE:xR}=vh(),RR=(t,e={})=>{if(typeof t!="string")throw new TypeError("Expected a string");let r=e||{},n=typeof r.maxLength=="number"?Math.min(Fh,r.maxLength):Fh;if(t.length>n)throw new SyntaxError(`Input length (${t.length}), exceeds max characters (${n})`);let i={type:"root",input:t,nodes:[]},o=[i],s=i,a=i,c=0,l=t.length,f=0,u=0,p,d=()=>t[f++],m=g=>{if(g.type==="text"&&a.type==="dot"&&(a.type="text"),a&&a.type==="text"&&g.type==="text"){a.value+=g.value;return}return s.nodes.push(g),g.parent=s,g.prev=a,a=g,g};for(m({type:"bos"});f<l;)if(s=o[o.length-1],p=d(),!(p===xR||p===PR)){if(p===_s){m({type:"text",value:(e.keepEscaping?p:"")+d()});continue}if(p===Uh){m({type:"text",value:"\\"+p});continue}if(p===Mh){c++;let g;for(;f<l&&(g=d());){if(p+=g,g===Mh){c++;continue}if(g===_s){p+=d();continue}if(g===Uh&&(c--,c===0))break}m({type:"text",value:p});continue}if(p===gR){s=m({type:"paren",nodes:[]}),o.push(s),m({type:"text",value:p});continue}if(p===yR){if(s.type!=="paren"){m({type:"text",value:p});continue}s=o.pop(),m({type:"text",value:p}),s=o[o.length-1];continue}if(p===wR||p===ER||p===dR){let g=p,h;for(e.keepQuotes!==!0&&(p="");f<l&&(h=d());){if(h===_s){p+=h+d();continue}if(h===g){e.keepQuotes===!0&&(p+=h);break}p+=h}m({type:"text",value:p});continue}if(p===SR){u++;let h={type:"brace",open:!0,close:!1,dollar:a.value&&a.value.slice(-1)==="$"||s.dollar===!0,depth:u,commas:0,ranges:0,nodes:[]};s=m(h),o.push(s),m({type:"open",value:p});continue}if(p===bR){if(s.type!=="brace"){m({type:"text",value:p});continue}let g="close";s=o.pop(),s.close=!0,m({type:g,value:p}),u--,s=o[o.length-1];continue}if(p===hR&&u>0){if(s.ranges>0){s.ranges=0;let g=s.nodes.shift();s.nodes=[g,{type:"text",value:pR(s)}]}m({type:"comma",value:p}),s.commas++;continue}if(p===mR&&u>0&&s.commas===0){let g=s.nodes;if(u===0||g.length===0){m({type:"text",value:p});continue}if(a.type==="dot"){if(s.range=[],a.value+=p,a.type="range",s.nodes.length!==3&&s.nodes.length!==5){s.invalid=!0,s.ranges=0,a.type="text";continue}s.ranges++,s.args=[];continue}if(a.type==="range"){g.pop();let h=g[g.length-1];h.value+=a.value+p,a=h,s.ranges--;continue}m({type:"dot",value:p});continue}m({type:"text",value:p})}do if(s=o.pop(),s.type!=="root"){s.nodes.forEach(O=>{O.nodes||(O.type==="open"&&(O.isOpen=!0),O.type==="close"&&(O.isClose=!0),O.nodes||(O.type="text"),O.invalid=!0)});let g=o[o.length-1],h=g.nodes.indexOf(s);g.nodes.splice(h,1,...s.nodes)}while(o.length>0);return m({type:"eos"}),i};Bh.exports=RR});var Wh=W((KF,zh)=>{"use strict";var Gh=Ri(),TR=Oh(),AR=Dh(),kR=Hh(),Re=(t,e={})=>{let r=[];if(Array.isArray(t))for(let n of t){let i=Re.create(n,e);Array.isArray(i)?r.push(...i):r.push(i)}else r=[].concat(Re.create(t,e));return e&&e.expand===!0&&e.nodupes===!0&&(r=[...new Set(r)]),r};Re.parse=(t,e={})=>kR(t,e);Re.stringify=(t,e={})=>Gh(typeof t=="string"?Re.parse(t,e):t,e);Re.compile=(t,e={})=>(typeof t=="string"&&(t=Re.parse(t,e)),TR(t,e));Re.expand=(t,e={})=>{typeof t=="string"&&(t=Re.parse(t,e));let r=AR(t,e);return e.noempty===!0&&(r=r.filter(Boolean)),e.nodupes===!0&&(r=[...new Set(r)]),r};Re.create=(t,e={})=>t===""||t.length<3?[t]:e.expand!==!0?Re.compile(t,e):Re.expand(t,e);zh.exports=Re});var Hr=W((ZF,Kh)=>{"use strict";var LR=w("path"),Ze="\\\\/",jh=`[^${Ze}]`,tt="\\.",OR="\\+",IR="\\?",ki="\\/",NR="(?=.)",qh="[^/]",$s=`(?:${ki}|$)`,Yh=`(?:^|${ki})`,ea=`${tt}{1,2}${$s}`,DR=`(?!${tt})`,CR=`(?!${Yh}${ea})`,vR=`(?!${tt}{0,1}${$s})`,FR=`(?!${ea})`,MR=`[^.${ki}]`,UR=`${qh}*?`,Vh={DOT_LITERAL:tt,PLUS_LITERAL:OR,QMARK_LITERAL:IR,SLASH_LITERAL:ki,ONE_CHAR:NR,QMARK:qh,END_ANCHOR:$s,DOTS_SLASH:ea,NO_DOT:DR,NO_DOTS:CR,NO_DOT_SLASH:vR,NO_DOTS_SLASH:FR,QMARK_NO_DOT:MR,STAR:UR,START_ANCHOR:Yh},BR={...Vh,SLASH_LITERAL:`[${Ze}]`,QMARK:jh,STAR:`${jh}*?`,DOTS_SLASH:`${tt}{1,2}(?:[${Ze}]|$)`,NO_DOT:`(?!${tt})`,NO_DOTS:`(?!(?:^|[${Ze}])${tt}{1,2}(?:[${Ze}]|$))`,NO_DOT_SLASH:`(?!${tt}{0,1}(?:[${Ze}]|$))`,NO_DOTS_SLASH:`(?!${tt}{1,2}(?:[${Ze}]|$))`,QMARK_NO_DOT:`[^.${Ze}]`,START_ANCHOR:`(?:^|[${Ze}])`,END_ANCHOR:`(?:[${Ze}]|$)`},HR={alnum:"a-zA-Z0-9",alpha:"a-zA-Z",ascii:"\\x00-\\x7F",blank:" \\t",cntrl:"\\x00-\\x1F\\x7F",digit:"0-9",graph:"\\x21-\\x7E",lower:"a-z",print:"\\x20-\\x7E ",punct:"\\-!\"#$%&'()\\*+,./:;<=>?@[\\]^_`{|}~",space:" \\t\\r\\n\\v\\f",upper:"A-Z",word:"A-Za-z0-9_",xdigit:"A-Fa-f0-9"};Kh.exports={MAX_LENGTH:1024*64,POSIX_REGEX_SOURCE:HR,REGEX_BACKSLASH:/\\(?![*+?^${}(|)[\]])/g,REGEX_NON_SPECIAL_CHARS:/^[^@![\].,$*+?^{}()|\\/]+/,REGEX_SPECIAL_CHARS:/[-*+?.^${}(|)[\]]/,REGEX_SPECIAL_CHARS_BACKREF:/(\\?)((\W)(\3*))/g,REGEX_SPECIAL_CHARS_GLOBAL:/([-*+?.^${}(|)[\]])/g,REGEX_REMOVE_BACKSLASH:/(?:\[.*?[^\\]\]|\\(?=.))/g,REPLACEMENTS:{"***":"*","**/**":"**","**/**/**":"**"},CHAR_0:48,CHAR_9:57,CHAR_UPPERCASE_A:65,CHAR_LOWERCASE_A:97,CHAR_UPPERCASE_Z:90,CHAR_LOWERCASE_Z:122,CHAR_LEFT_PARENTHESES:40,CHAR_RIGHT_PARENTHESES:41,CHAR_ASTERISK:42,CHAR_AMPERSAND:38,CHAR_AT:64,CHAR_BACKWARD_SLASH:92,CHAR_CARRIAGE_RETURN:13,CHAR_CIRCUMFLEX_ACCENT:94,CHAR_COLON:58,CHAR_COMMA:44,CHAR_DOT:46,CHAR_DOUBLE_QUOTE:34,CHAR_EQUAL:61,CHAR_EXCLAMATION_MARK:33,CHAR_FORM_FEED:12,CHAR_FORWARD_SLASH:47,CHAR_GRAVE_ACCENT:96,CHAR_HASH:35,CHAR_HYPHEN_MINUS:45,CHAR_LEFT_ANGLE_BRACKET:60,CHAR_LEFT_CURLY_BRACE:123,CHAR_LEFT_SQUARE_BRACKET:91,CHAR_LINE_FEED:10,CHAR_NO_BREAK_SPACE:160,CHAR_PERCENT:37,CHAR_PLUS:43,CHAR_QUESTION_MARK:63,CHAR_RIGHT_ANGLE_BRACKET:62,CHAR_RIGHT_CURLY_BRACE:125,CHAR_RIGHT_SQUARE_BRACKET:93,CHAR_SEMICOLON:59,CHAR_SINGLE_QUOTE:39,CHAR_SPACE:32,CHAR_TAB:9,CHAR_UNDERSCORE:95,CHAR_VERTICAL_LINE:124,CHAR_ZERO_WIDTH_NOBREAK_SPACE:65279,SEP:LR.sep,extglobChars(t){return{"!":{type:"negate",open:"(?:(?!(?:",close:`))${t.STAR})`},"?":{type:"qmark",open:"(?:",close:")?"},"+":{type:"plus",open:"(?:",close:")+"},"*":{type:"star",open:"(?:",close:")*"},"@":{type:"at",open:"(?:",close:")"}}},globChars(t){return t===!0?BR:Vh}}});var Gr=W(Pe=>{"use strict";var GR=w("path"),zR=process.platform==="win32",{REGEX_BACKSLASH:WR,REGEX_REMOVE_BACKSLASH:jR,REGEX_SPECIAL_CHARS:qR,REGEX_SPECIAL_CHARS_GLOBAL:YR}=Hr();Pe.isObject=t=>t!==null&&typeof t=="object"&&!Array.isArray(t);Pe.hasRegexChars=t=>qR.test(t);Pe.isRegexChar=t=>t.length===1&&Pe.hasRegexChars(t);Pe.escapeRegex=t=>t.replace(YR,"\\$1");Pe.toPosixSlashes=t=>t.replace(WR,"/");Pe.removeBackslashes=t=>t.replace(jR,e=>e==="\\"?"":e);Pe.supportsLookbehinds=()=>{let t=process.version.slice(1).split(".").map(Number);return t.length===3&&t[0]>=9||t[0]===8&&t[1]>=10};Pe.isWindows=t=>t&&typeof t.windows=="boolean"?t.windows:zR===!0||GR.sep==="\\";Pe.escapeLast=(t,e,r)=>{let n=t.lastIndexOf(e,r);return n===-1?t:t[n-1]==="\\"?Pe.escapeLast(t,e,n-1):`${t.slice(0,n)}\\${t.slice(n)}`};Pe.removePrefix=(t,e={})=>{let r=t;return r.startsWith("./")&&(r=r.slice(2),e.prefix="./"),r};Pe.wrapOutput=(t,e={},r={})=>{let n=r.contains?"":"^",i=r.contains?"":"$",o=`${n}(?:${t})${i}`;return e.negated===!0&&(o=`(?:^(?!${o}).*$)`),o}});var tm=W((XF,em)=>{"use strict";var Zh=Gr(),{CHAR_ASTERISK:ta,CHAR_AT:VR,CHAR_BACKWARD_SLASH:zr,CHAR_COMMA:KR,CHAR_DOT:ra,CHAR_EXCLAMATION_MARK:na,CHAR_FORWARD_SLASH:$h,CHAR_LEFT_CURLY_BRACE:ia,CHAR_LEFT_PARENTHESES:oa,CHAR_LEFT_SQUARE_BRACKET:ZR,CHAR_PLUS:JR,CHAR_QUESTION_MARK:Jh,CHAR_RIGHT_CURLY_BRACE:XR,CHAR_RIGHT_PARENTHESES:Xh,CHAR_RIGHT_SQUARE_BRACKET:QR}=Hr(),Qh=t=>t===$h||t===zr,_h=t=>{t.isPrefix!==!0&&(t.depth=t.isGlobstar?1/0:1)},_R=(t,e)=>{let r=e||{},n=t.length-1,i=r.parts===!0||r.scanToEnd===!0,o=[],s=[],a=[],c=t,l=-1,f=0,u=0,p=!1,d=!1,m=!1,g=!1,h=!1,O=!1,D=!1,N=!1,H=!1,G=!1,$=0,Z,v,U={value:"",depth:0,isGlob:!1},_=()=>l>=n,x=()=>c.charCodeAt(l+1),X=()=>(Z=v,c.charCodeAt(++l));for(;l<n;){v=X();let ue;if(v===zr){D=U.backslashes=!0,v=X(),v===ia&&(O=!0);continue}if(O===!0||v===ia){for($++;_()!==!0&&(v=X());){if(v===zr){D=U.backslashes=!0,X();continue}if(v===ia){$++;continue}if(O!==!0&&v===ra&&(v=X())===ra){if(p=U.isBrace=!0,m=U.isGlob=!0,G=!0,i===!0)continue;break}if(O!==!0&&v===KR){if(p=U.isBrace=!0,m=U.isGlob=!0,G=!0,i===!0)continue;break}if(v===XR&&($--,$===0)){O=!1,p=U.isBrace=!0,G=!0;break}}if(i===!0)continue;break}if(v===$h){if(o.push(l),s.push(U),U={value:"",depth:0,isGlob:!1},G===!0)continue;if(Z===ra&&l===f+1){f+=2;continue}u=l+1;continue}if(r.noext!==!0&&(v===JR||v===VR||v===ta||v===Jh||v===na)===!0&&x()===oa){if(m=U.isGlob=!0,g=U.isExtglob=!0,G=!0,v===na&&l===f&&(H=!0),i===!0){for(;_()!==!0&&(v=X());){if(v===zr){D=U.backslashes=!0,v=X();continue}if(v===Xh){m=U.isGlob=!0,G=!0;break}}continue}break}if(v===ta){if(Z===ta&&(h=U.isGlobstar=!0),m=U.isGlob=!0,G=!0,i===!0)continue;break}if(v===Jh){if(m=U.isGlob=!0,G=!0,i===!0)continue;break}if(v===ZR){for(;_()!==!0&&(ue=X());){if(ue===zr){D=U.backslashes=!0,X();continue}if(ue===QR){d=U.isBracket=!0,m=U.isGlob=!0,G=!0;break}}if(i===!0)continue;break}if(r.nonegate!==!0&&v===na&&l===f){N=U.negated=!0,f++;continue}if(r.noparen!==!0&&v===oa){if(m=U.isGlob=!0,i===!0){for(;_()!==!0&&(v=X());){if(v===oa){D=U.backslashes=!0,v=X();continue}if(v===Xh){G=!0;break}}continue}break}if(m===!0){if(G=!0,i===!0)continue;break}}r.noext===!0&&(g=!1,m=!1);let K=c,le="",R="";f>0&&(le=c.slice(0,f),c=c.slice(f),u-=f),K&&m===!0&&u>0?(K=c.slice(0,u),R=c.slice(u)):m===!0?(K="",R=c):K=c,K&&K!==""&&K!=="/"&&K!==c&&Qh(K.charCodeAt(K.length-1))&&(K=K.slice(0,-1)),r.unescape===!0&&(R&&(R=Zh.removeBackslashes(R)),K&&D===!0&&(K=Zh.removeBackslashes(K)));let E={prefix:le,input:t,start:f,base:K,glob:R,isBrace:p,isBracket:d,isGlob:m,isExtglob:g,isGlobstar:h,negated:N,negatedExtglob:H};if(r.tokens===!0&&(E.maxDepth=0,Qh(v)||s.push(U),E.tokens=s),r.parts===!0||r.tokens===!0){let ue;for(let Y=0;Y<o.length;Y++){let we=ue?ue+1:f,te=o[Y],de=t.slice(we,te);r.tokens&&(Y===0&&f!==0?(s[Y].isPrefix=!0,s[Y].value=le):s[Y].value=de,_h(s[Y]),E.maxDepth+=s[Y].depth),(Y!==0||de!=="")&&a.push(de),ue=te}if(ue&&ue+1<t.length){let Y=t.slice(ue+1);a.push(Y),r.tokens&&(s[s.length-1].value=Y,_h(s[s.length-1]),E.maxDepth+=s[s.length-1].depth)}E.slashes=o,E.parts=a}return E};em.exports=_R});var im=W((QF,nm)=>{"use strict";var Li=Hr(),Te=Gr(),{MAX_LENGTH:Oi,POSIX_REGEX_SOURCE:$R,REGEX_NON_SPECIAL_CHARS:eT,REGEX_SPECIAL_CHARS_BACKREF:tT,REPLACEMENTS:rm}=Li,rT=(t,e)=>{if(typeof e.expandRange=="function")return e.expandRange(...t,e);t.sort();let r=`[${t.join("-")}]`;try{new RegExp(r)}catch{return t.map(i=>Te.escapeRegex(i)).join("..")}return r},sr=(t,e)=>`Missing ${t}: "${e}" - use "\\\\${e}" to match literal characters`,sa=(t,e)=>{if(typeof t!="string")throw new TypeError("Expected a string");t=rm[t]||t;let r={...e},n=typeof r.maxLength=="number"?Math.min(Oi,r.maxLength):Oi,i=t.length;if(i>n)throw new SyntaxError(`Input length: ${i}, exceeds maximum allowed length: ${n}`);let o={type:"bos",value:"",output:r.prepend||""},s=[o],a=r.capture?"":"?:",c=Te.isWindows(e),l=Li.globChars(c),f=Li.extglobChars(l),{DOT_LITERAL:u,PLUS_LITERAL:p,SLASH_LITERAL:d,ONE_CHAR:m,DOTS_SLASH:g,NO_DOT:h,NO_DOT_SLASH:O,NO_DOTS_SLASH:D,QMARK:N,QMARK_NO_DOT:H,STAR:G,START_ANCHOR:$}=l,Z=S=>`(${a}(?:(?!${$}${S.dot?g:u}).)*?)`,v=r.dot?"":h,U=r.dot?N:H,_=r.bash===!0?Z(r):G;r.capture&&(_=`(${_})`),typeof r.noext=="boolean"&&(r.noextglob=r.noext);let x={input:t,index:-1,start:0,dot:r.dot===!0,consumed:"",output:"",prefix:"",backtrack:!1,negated:!1,brackets:0,braces:0,parens:0,quotes:0,globstar:!1,tokens:s};t=Te.removePrefix(t,x),i=t.length;let X=[],K=[],le=[],R=o,E,ue=()=>x.index===i-1,Y=x.peek=(S=1)=>t[x.index+S],we=x.advance=()=>t[++x.index]||"",te=()=>t.slice(x.index+1),de=(S="",B=0)=>{x.consumed+=S,x.index+=B},k=S=>{x.output+=S.output!=null?S.output:S.value,de(S.value)},A=()=>{let S=1;for(;Y()==="!"&&(Y(2)!=="("||Y(3)==="?");)we(),x.start++,S++;return S%2===0?!1:(x.negated=!0,x.start++,!0)},L=S=>{x[S]++,le.push(S)},y=S=>{x[S]--,le.pop()},b=S=>{if(R.type==="globstar"){let B=x.braces>0&&(S.type==="comma"||S.type==="brace"),T=S.extglob===!0||X.length&&(S.type==="pipe"||S.type==="paren");S.type!=="slash"&&S.type!=="paren"&&!B&&!T&&(x.output=x.output.slice(0,-R.output.length),R.type="star",R.value="*",R.output=_,x.output+=R.output)}if(X.length&&S.type!=="paren"&&(X[X.length-1].inner+=S.value),(S.value||S.output)&&k(S),R&&R.type==="text"&&S.type==="text"){R.value+=S.value,R.output=(R.output||"")+S.value;return}S.prev=R,s.push(S),R=S},C=(S,B)=>{let T={...f[B],conditions:1,inner:""};T.prev=R,T.parens=x.parens,T.output=x.output;let z=(r.capture?"(":"")+T.open;L("parens"),b({type:S,value:B,output:x.output?"":m}),b({type:"paren",extglob:!0,value:we(),output:z}),X.push(T)},F=S=>{let B=S.close+(r.capture?")":""),T;if(S.type==="negate"){let z=_;if(S.inner&&S.inner.length>1&&S.inner.includes("/")&&(z=Z(r)),(z!==_||ue()||/^\)+$/.test(te()))&&(B=S.close=`)$))${z}`),S.inner.includes("*")&&(T=te())&&/^\.[^\\/.]+$/.test(T)){let V=sa(T,{...e,fastpaths:!1}).output;B=S.close=`)${V})${z})`}S.prev.type==="bos"&&(x.negatedExtglob=!0)}b({type:"paren",extglob:!0,value:E,output:B}),y("parens")};if(r.fastpaths!==!1&&!/(^[*!]|[/()[\]{}"])/.test(t)){let S=!1,B=t.replace(tT,(T,z,V,ne,Q,Xe)=>ne==="\\"?(S=!0,T):ne==="?"?z?z+ne+(Q?N.repeat(Q.length):""):Xe===0?U+(Q?N.repeat(Q.length):""):N.repeat(V.length):ne==="."?u.repeat(V.length):ne==="*"?z?z+ne+(Q?_:""):_:z?T:`\\${T}`);return S===!0&&(r.unescape===!0?B=B.replace(/\\/g,""):B=B.replace(/\\+/g,T=>T.length%2===0?"\\\\":T?"\\":"")),B===t&&r.contains===!0?(x.output=t,x):(x.output=Te.wrapOutput(B,x,e),x)}for(;!ue();){if(E=we(),E==="\0")continue;if(E==="\\"){let T=Y();if(T==="/"&&r.bash!==!0||T==="."||T===";")continue;if(!T){E+="\\",b({type:"text",value:E});continue}let z=/^\\+/.exec(te()),V=0;if(z&&z[0].length>2&&(V=z[0].length,x.index+=V,V%2!==0&&(E+="\\")),r.unescape===!0?E=we():E+=we(),x.brackets===0){b({type:"text",value:E});continue}}if(x.brackets>0&&(E!=="]"||R.value==="["||R.value==="[^")){if(r.posix!==!1&&E===":"){let T=R.value.slice(1);if(T.includes("[")&&(R.posix=!0,T.includes(":"))){let z=R.value.lastIndexOf("["),V=R.value.slice(0,z),ne=R.value.slice(z+2),Q=$R[ne];if(Q){R.value=V+Q,x.backtrack=!0,we(),!o.output&&s.indexOf(R)===1&&(o.output=m);continue}}}(E==="["&&Y()!==":"||E==="-"&&Y()==="]")&&(E=`\\${E}`),E==="]"&&(R.value==="["||R.value==="[^")&&(E=`\\${E}`),r.posix===!0&&E==="!"&&R.value==="["&&(E="^"),R.value+=E,k({value:E});continue}if(x.quotes===1&&E!=='"'){E=Te.escapeRegex(E),R.value+=E,k({value:E});continue}if(E==='"'){x.quotes=x.quotes===1?0:1,r.keepQuotes===!0&&b({type:"text",value:E});continue}if(E==="("){L("parens"),b({type:"paren",value:E});continue}if(E===")"){if(x.parens===0&&r.strictBrackets===!0)throw new SyntaxError(sr("opening","("));let T=X[X.length-1];if(T&&x.parens===T.parens+1){F(X.pop());continue}b({type:"paren",value:E,output:x.parens?")":"\\)"}),y("parens");continue}if(E==="["){if(r.nobracket===!0||!te().includes("]")){if(r.nobracket!==!0&&r.strictBrackets===!0)throw new SyntaxError(sr("closing","]"));E=`\\${E}`}else L("brackets");b({type:"bracket",value:E});continue}if(E==="]"){if(r.nobracket===!0||R&&R.type==="bracket"&&R.value.length===1){b({type:"text",value:E,output:`\\${E}`});continue}if(x.brackets===0){if(r.strictBrackets===!0)throw new SyntaxError(sr("opening","["));b({type:"text",value:E,output:`\\${E}`});continue}y("brackets");let T=R.value.slice(1);if(R.posix!==!0&&T[0]==="^"&&!T.includes("/")&&(E=`/${E}`),R.value+=E,k({value:E}),r.literalBrackets===!1||Te.hasRegexChars(T))continue;let z=Te.escapeRegex(R.value);if(x.output=x.output.slice(0,-R.value.length),r.literalBrackets===!0){x.output+=z,R.value=z;continue}R.value=`(${a}${z}|${R.value})`,x.output+=R.value;continue}if(E==="{"&&r.nobrace!==!0){L("braces");let T={type:"brace",value:E,output:"(",outputIndex:x.output.length,tokensIndex:x.tokens.length};K.push(T),b(T);continue}if(E==="}"){let T=K[K.length-1];if(r.nobrace===!0||!T){b({type:"text",value:E,output:E});continue}let z=")";if(T.dots===!0){let V=s.slice(),ne=[];for(let Q=V.length-1;Q>=0&&(s.pop(),V[Q].type!=="brace");Q--)V[Q].type!=="dots"&&ne.unshift(V[Q].value);z=rT(ne,r),x.backtrack=!0}if(T.comma!==!0&&T.dots!==!0){let V=x.output.slice(0,T.outputIndex),ne=x.tokens.slice(T.tokensIndex);T.value=T.output="\\{",E=z="\\}",x.output=V;for(let Q of ne)x.output+=Q.output||Q.value}b({type:"brace",value:E,output:z}),y("braces"),K.pop();continue}if(E==="|"){X.length>0&&X[X.length-1].conditions++,b({type:"text",value:E});continue}if(E===","){let T=E,z=K[K.length-1];z&&le[le.length-1]==="braces"&&(z.comma=!0,T="|"),b({type:"comma",value:E,output:T});continue}if(E==="/"){if(R.type==="dot"&&x.index===x.start+1){x.start=x.index+1,x.consumed="",x.output="",s.pop(),R=o;continue}b({type:"slash",value:E,output:d});continue}if(E==="."){if(x.braces>0&&R.type==="dot"){R.value==="."&&(R.output=u);let T=K[K.length-1];R.type="dots",R.output+=E,R.value+=E,T.dots=!0;continue}if(x.braces+x.parens===0&&R.type!=="bos"&&R.type!=="slash"){b({type:"text",value:E,output:u});continue}b({type:"dot",value:E,output:u});continue}if(E==="?"){if(!(R&&R.value==="(")&&r.noextglob!==!0&&Y()==="("&&Y(2)!=="?"){C("qmark",E);continue}if(R&&R.type==="paren"){let z=Y(),V=E;if(z==="<"&&!Te.supportsLookbehinds())throw new Error("Node.js v10 or higher is required for regex lookbehinds");(R.value==="("&&!/[!=<:]/.test(z)||z==="<"&&!/<([!=]|\w+>)/.test(te()))&&(V=`\\${E}`),b({type:"text",value:E,output:V});continue}if(r.dot!==!0&&(R.type==="slash"||R.type==="bos")){b({type:"qmark",value:E,output:H});continue}b({type:"qmark",value:E,output:N});continue}if(E==="!"){if(r.noextglob!==!0&&Y()==="("&&(Y(2)!=="?"||!/[!=<:]/.test(Y(3)))){C("negate",E);continue}if(r.nonegate!==!0&&x.index===0){A();continue}}if(E==="+"){if(r.noextglob!==!0&&Y()==="("&&Y(2)!=="?"){C("plus",E);continue}if(R&&R.value==="("||r.regex===!1){b({type:"plus",value:E,output:p});continue}if(R&&(R.type==="bracket"||R.type==="paren"||R.type==="brace")||x.parens>0){b({type:"plus",value:E});continue}b({type:"plus",value:p});continue}if(E==="@"){if(r.noextglob!==!0&&Y()==="("&&Y(2)!=="?"){b({type:"at",extglob:!0,value:E,output:""});continue}b({type:"text",value:E});continue}if(E!=="*"){(E==="$"||E==="^")&&(E=`\\${E}`);let T=eT.exec(te());T&&(E+=T[0],x.index+=T[0].length),b({type:"text",value:E});continue}if(R&&(R.type==="globstar"||R.star===!0)){R.type="star",R.star=!0,R.value+=E,R.output=_,x.backtrack=!0,x.globstar=!0,de(E);continue}let S=te();if(r.noextglob!==!0&&/^\([^?]/.test(S)){C("star",E);continue}if(R.type==="star"){if(r.noglobstar===!0){de(E);continue}let T=R.prev,z=T.prev,V=T.type==="slash"||T.type==="bos",ne=z&&(z.type==="star"||z.type==="globstar");if(r.bash===!0&&(!V||S[0]&&S[0]!=="/")){b({type:"star",value:E,output:""});continue}let Q=x.braces>0&&(T.type==="comma"||T.type==="brace"),Xe=X.length&&(T.type==="pipe"||T.type==="paren");if(!V&&T.type!=="paren"&&!Q&&!Xe){b({type:"star",value:E,output:""});continue}for(;S.slice(0,3)==="/**";){let mt=t[x.index+4];if(mt&&mt!=="/")break;S=S.slice(3),de("/**",3)}if(T.type==="bos"&&ue()){R.type="globstar",R.value+=E,R.output=Z(r),x.output=R.output,x.globstar=!0,de(E);continue}if(T.type==="slash"&&T.prev.type!=="bos"&&!ne&&ue()){x.output=x.output.slice(0,-(T.output+R.output).length),T.output=`(?:${T.output}`,R.type="globstar",R.output=Z(r)+(r.strictSlashes?")":"|$)"),R.value+=E,x.globstar=!0,x.output+=T.output+R.output,de(E);continue}if(T.type==="slash"&&T.prev.type!=="bos"&&S[0]==="/"){let mt=S[1]!==void 0?"|$":"";x.output=x.output.slice(0,-(T.output+R.output).length),T.output=`(?:${T.output}`,R.type="globstar",R.output=`${Z(r)}${d}|${d}${mt})`,R.value+=E,x.output+=T.output+R.output,x.globstar=!0,de(E+we()),b({type:"slash",value:"/",output:""});continue}if(T.type==="bos"&&S[0]==="/"){R.type="globstar",R.value+=E,R.output=`(?:^|${d}|${Z(r)}${d})`,x.output=R.output,x.globstar=!0,de(E+we()),b({type:"slash",value:"/",output:""});continue}x.output=x.output.slice(0,-R.output.length),R.type="globstar",R.output=Z(r),R.value+=E,x.output+=R.output,x.globstar=!0,de(E);continue}let B={type:"star",value:E,output:_};if(r.bash===!0){B.output=".*?",(R.type==="bos"||R.type==="slash")&&(B.output=v+B.output),b(B);continue}if(R&&(R.type==="bracket"||R.type==="paren")&&r.regex===!0){B.output=E,b(B);continue}(x.index===x.start||R.type==="slash"||R.type==="dot")&&(R.type==="dot"?(x.output+=O,R.output+=O):r.dot===!0?(x.output+=D,R.output+=D):(x.output+=v,R.output+=v),Y()!=="*"&&(x.output+=m,R.output+=m)),b(B)}for(;x.brackets>0;){if(r.strictBrackets===!0)throw new SyntaxError(sr("closing","]"));x.output=Te.escapeLast(x.output,"["),y("brackets")}for(;x.parens>0;){if(r.strictBrackets===!0)throw new SyntaxError(sr("closing",")"));x.output=Te.escapeLast(x.output,"("),y("parens")}for(;x.braces>0;){if(r.strictBrackets===!0)throw new SyntaxError(sr("closing","}"));x.output=Te.escapeLast(x.output,"{"),y("braces")}if(r.strictSlashes!==!0&&(R.type==="star"||R.type==="bracket")&&b({type:"maybe_slash",value:"",output:`${d}?`}),x.backtrack===!0){x.output="";for(let S of x.tokens)x.output+=S.output!=null?S.output:S.value,S.suffix&&(x.output+=S.suffix)}return x};sa.fastpaths=(t,e)=>{let r={...e},n=typeof r.maxLength=="number"?Math.min(Oi,r.maxLength):Oi,i=t.length;if(i>n)throw new SyntaxError(`Input length: ${i}, exceeds maximum allowed length: ${n}`);t=rm[t]||t;let o=Te.isWindows(e),{DOT_LITERAL:s,SLASH_LITERAL:a,ONE_CHAR:c,DOTS_SLASH:l,NO_DOT:f,NO_DOTS:u,NO_DOTS_SLASH:p,STAR:d,START_ANCHOR:m}=Li.globChars(o),g=r.dot?u:f,h=r.dot?p:f,O=r.capture?"":"?:",D={negated:!1,prefix:""},N=r.bash===!0?".*?":d;r.capture&&(N=`(${N})`);let H=v=>v.noglobstar===!0?N:`(${O}(?:(?!${m}${v.dot?l:s}).)*?)`,G=v=>{switch(v){case"*":return`${g}${c}${N}`;case".*":return`${s}${c}${N}`;case"*.*":return`${g}${N}${s}${c}${N}`;case"*/*":return`${g}${N}${a}${c}${h}${N}`;case"**":return g+H(r);case"**/*":return`(?:${g}${H(r)}${a})?${h}${c}${N}`;case"**/*.*":return`(?:${g}${H(r)}${a})?${h}${N}${s}${c}${N}`;case"**/.*":return`(?:${g}${H(r)}${a})?${s}${c}${N}`;default:{let U=/^(.*?)\.(\w+)$/.exec(v);if(!U)return;let _=G(U[1]);return _?_+s+U[2]:void 0}}},$=Te.removePrefix(t,D),Z=G($);return Z&&r.strictSlashes!==!0&&(Z+=`${a}?`),Z};nm.exports=sa});var sm=W((_F,om)=>{"use strict";var nT=w("path"),iT=tm(),aa=im(),ca=Gr(),oT=Hr(),sT=t=>t&&typeof t=="object"&&!Array.isArray(t),oe=(t,e,r=!1)=>{if(Array.isArray(t)){let f=t.map(p=>oe(p,e,r));return p=>{for(let d of f){let m=d(p);if(m)return m}return!1}}let n=sT(t)&&t.tokens&&t.input;if(t===""||typeof t!="string"&&!n)throw new TypeError("Expected pattern to be a non-empty string");let i=e||{},o=ca.isWindows(e),s=n?oe.compileRe(t,e):oe.makeRe(t,e,!1,!0),a=s.state;delete s.state;let c=()=>!1;if(i.ignore){let f={...e,ignore:null,onMatch:null,onResult:null};c=oe(i.ignore,f,r)}let l=(f,u=!1)=>{let{isMatch:p,match:d,output:m}=oe.test(f,s,e,{glob:t,posix:o}),g={glob:t,state:a,regex:s,posix:o,input:f,output:m,match:d,isMatch:p};return typeof i.onResult=="function"&&i.onResult(g),p===!1?(g.isMatch=!1,u?g:!1):c(f)?(typeof i.onIgnore=="function"&&i.onIgnore(g),g.isMatch=!1,u?g:!1):(typeof i.onMatch=="function"&&i.onMatch(g),u?g:!0)};return r&&(l.state=a),l};oe.test=(t,e,r,{glob:n,posix:i}={})=>{if(typeof t!="string")throw new TypeError("Expected input to be a string");if(t==="")return{isMatch:!1,output:""};let o=r||{},s=o.format||(i?ca.toPosixSlashes:null),a=t===n,c=a&&s?s(t):t;return a===!1&&(c=s?s(t):t,a=c===n),(a===!1||o.capture===!0)&&(o.matchBase===!0||o.basename===!0?a=oe.matchBase(t,e,r,i):a=e.exec(c)),{isMatch:Boolean(a),match:a,output:c}};oe.matchBase=(t,e,r,n=ca.isWindows(r))=>(e instanceof RegExp?e:oe.makeRe(e,r)).test(nT.basename(t));oe.isMatch=(t,e,r)=>oe(e,r)(t);oe.parse=(t,e)=>Array.isArray(t)?t.map(r=>oe.parse(r,e)):aa(t,{...e,fastpaths:!1});oe.scan=(t,e)=>iT(t,e);oe.compileRe=(t,e,r=!1,n=!1)=>{if(r===!0)return t.output;let i=e||{},o=i.contains?"":"^",s=i.contains?"":"$",a=`${o}(?:${t.output})${s}`;t&&t.negated===!0&&(a=`^(?!${a}).*$`);let c=oe.toRegex(a,e);return n===!0&&(c.state=t),c};oe.makeRe=(t,e={},r=!1,n=!1)=>{if(!t||typeof t!="string")throw new TypeError("Expected a non-empty string");let i={negated:!1,fastpaths:!0};return e.fastpaths!==!1&&(t[0]==="."||t[0]==="*")&&(i.output=aa.fastpaths(t,e)),i.output||(i=aa(t,e)),oe.compileRe(i,e,r,n)};oe.toRegex=(t,e)=>{try{let r=e||{};return new RegExp(t,r.flags||(r.nocase?"i":""))}catch(r){if(e&&e.debug===!0)throw r;return/$^/}};oe.constants=oT;om.exports=oe});var cm=W(($F,am)=>{"use strict";am.exports=sm()});var dm=W((eM,pm)=>{"use strict";var um=w("util"),fm=Wh(),Je=cm(),la=Gr(),lm=t=>t===""||t==="./",ee=(t,e,r)=>{e=[].concat(e),t=[].concat(t);let n=new Set,i=new Set,o=new Set,s=0,a=f=>{o.add(f.output),r&&r.onResult&&r.onResult(f)};for(let f=0;f<e.length;f++){let u=Je(String(e[f]),{...r,onResult:a},!0),p=u.state.negated||u.state.negatedExtglob;p&&s++;for(let d of t){let m=u(d,!0);!(p?!m.isMatch:m.isMatch)||(p?n.add(m.output):(n.delete(m.output),i.add(m.output)))}}let l=(s===e.length?[...o]:[...i]).filter(f=>!n.has(f));if(r&&l.length===0){if(r.failglob===!0)throw new Error(`No matches found for "${e.join(", ")}"`);if(r.nonull===!0||r.nullglob===!0)return r.unescape?e.map(f=>f.replace(/\\/g,"")):e}return l};ee.match=ee;ee.matcher=(t,e)=>Je(t,e);ee.isMatch=(t,e,r)=>Je(e,r)(t);ee.any=ee.isMatch;ee.not=(t,e,r={})=>{e=[].concat(e).map(String);let n=new Set,i=[],o=a=>{r.onResult&&r.onResult(a),i.push(a.output)},s=new Set(ee(t,e,{...r,onResult:o}));for(let a of i)s.has(a)||n.add(a);return[...n]};ee.contains=(t,e,r)=>{if(typeof t!="string")throw new TypeError(`Expected a string: "${um.inspect(t)}"`);if(Array.isArray(e))return e.some(n=>ee.contains(t,n,r));if(typeof e=="string"){if(lm(t)||lm(e))return!1;if(t.includes(e)||t.startsWith("./")&&t.slice(2).includes(e))return!0}return ee.isMatch(t,e,{...r,contains:!0})};ee.matchKeys=(t,e,r)=>{if(!la.isObject(t))throw new TypeError("Expected the first argument to be an object");let n=ee(Object.keys(t),e,r),i={};for(let o of n)i[o]=t[o];return i};ee.some=(t,e,r)=>{let n=[].concat(t);for(let i of[].concat(e)){let o=Je(String(i),r);if(n.some(s=>o(s)))return!0}return!1};ee.every=(t,e,r)=>{let n=[].concat(t);for(let i of[].concat(e)){let o=Je(String(i),r);if(!n.every(s=>o(s)))return!1}return!0};ee.all=(t,e,r)=>{if(typeof t!="string")throw new TypeError(`Expected a string: "${um.inspect(t)}"`);return[].concat(e).every(n=>Je(n,r)(t))};ee.capture=(t,e,r)=>{let n=la.isWindows(r),o=Je.makeRe(String(t),{...r,capture:!0}).exec(n?la.toPosixSlashes(e):e);if(o)return o.slice(1).map(s=>s===void 0?"":s)};ee.makeRe=(...t)=>Je.makeRe(...t);ee.scan=(...t)=>Je.scan(...t);ee.parse=(t,e)=>{let r=[];for(let n of[].concat(t||[]))for(let i of fm(String(n),e))r.push(Je.parse(i,e));return r};ee.braces=(t,e)=>{if(typeof t!="string")throw new TypeError("Expected a string");return e&&e.nobrace===!0||!/\{.*\}/.test(t)?[t]:fm(t,e)};ee.braceExpand=(t,e)=>{if(typeof t!="string")throw new TypeError("Expected a string");return ee.braces(t,{...e,expand:!0})};pm.exports=ee});var mm=W((tM,hm)=>{hm.exports=typeof queueMicrotask=="function"?queueMicrotask:t=>Promise.resolve().then(t)});var ym=W((rM,gm)=>{gm.exports=typeof process<"u"&&typeof process.nextTick=="function"?process.nextTick.bind(process):mm()});var bm=W((iM,Sm)=>{Sm.exports=class{constructor(e){if(!(e>0)||(e-1&e)!==0)throw new Error("Max size for a FixedFIFO should be a power of two");this.buffer=new Array(e),this.mask=e-1,this.top=0,this.btm=0,this.next=null}clear(){this.top=this.btm=0,this.next=null,this.buffer.fill(void 0)}push(e){return this.buffer[this.top]!==void 0?!1:(this.buffer[this.top]=e,this.top=this.top+1&this.mask,!0)}shift(){let e=this.buffer[this.btm];if(e!==void 0)return this.buffer[this.btm]=void 0,this.btm=this.btm+1&this.mask,e}peek(){return this.buffer[this.btm]}isEmpty(){return this.buffer[this.btm]===void 0}}});var ua=W((sM,Em)=>{var wm=bm();Em.exports=class{constructor(e){this.hwm=e||16,this.head=new wm(this.hwm),this.tail=this.head,this.length=0}clear(){this.head=this.tail,this.head.clear(),this.length=0}push(e){if(this.length++,!this.head.push(e)){let r=this.head;this.head=r.next=new wm(2*this.head.buffer.length),this.head.push(e)}}shift(){this.length!==0&&this.length--;let e=this.tail.shift();if(e===void 0&&this.tail.next){let r=this.tail.next;return this.tail.next=null,this.tail=r,this.tail.shift()}return e}peek(){let e=this.tail.peek();return e===void 0&&this.tail.next?this.tail.next.peek():e}isEmpty(){return this.length===0}}});var Ta=W((aM,jm)=>{var{EventEmitter:aT}=w("events"),vi=new Error("Stream was destroyed"),fa=new Error("Premature close"),Am=ym(),km=ua(),ae=(1<<27)-1,Nt=1,Sa=2,kt=4,Wr=8,Lm=ae^Nt,cT=ae^Sa,Jr=1<<4,jr=2<<4,fr=4<<4,ut=8<<4,qr=16<<4,ba=32<<4,Lt=64<<4,pa=128<<4,wa=256<<4,Ea=512<<4,He=1024<<4,ar=2048<<4,Fi=4096<<4,Om=qr|ba,lT=Jr|Fi,uT=fr|Jr,fT=wa|ut,pT=ae^Jr,dT=ae^fr,hT=ae^(fr|Fi),mT=ae^Fi,gT=ae^qr,yT=ae^(ut|Ea),ST=ae^Lt,Pm=ae^Om,Im=ae^ar,bT=ae^jr,ft=1<<17,lr=2<<17,Xr=4<<17,Ot=8<<17,Qr=16<<17,Dt=32<<17,da=64<<17,cr=128<<17,Pa=256<<17,ur=512<<17,Nm=ae^(ft|Pa),Dm=ae^Xr,wT=ae^ur,ET=ae^Qr,PT=ae^Ot,Cm=ae^cr,xT=ae^lr,Yr=Jr|ft,vm=ae^Yr,xa=He|Dt,rt=kt|Wr|Sa,Ae=rt|Nt,Fm=rt|xa,RT=Dm&dT,Ra=cr|ar,TT=Ra&vm,Mm=Ae|TT,AT=Ae|Lt|He,xm=Ae|He|ut,kT=Ae|Lt|ut,LT=Ae|wa|ut|Ea,OT=Ae|Jr|Lt|He|Fi,IT=rt|Lt|He,NT=jr|Ae|ar|fr,DT=Ae|ur|Dt,CT=Ot|Qr,Um=Ot|ft,vT=Ot|Qr|Ae|ft,Rm=Ae|ft|Ot,FT=Xr|ft,MT=ft|Pa,UT=Ae|ur|Um|Dt,BT=Qr|rt|ur|Dt,HT=lr|Ae|cr|Xr,Ii=Symbol.asyncIterator||Symbol("asyncIterator"),Ni=class{constructor(e,{highWaterMark:r=16384,map:n=null,mapWritable:i,byteLength:o,byteLengthWritable:s}={}){this.stream=e,this.queue=new km,this.highWaterMark=r,this.buffered=0,this.error=null,this.pipeline=null,this.drains=null,this.byteLength=s||o||Wm,this.map=i||n,this.afterWrite=WT.bind(this),this.afterUpdateNextTick=YT.bind(this)}get ended(){return(this.stream._duplexState&Dt)!==0}push(e){return this.map!==null&&(e=this.map(e)),this.buffered+=this.byteLength(e),this.queue.push(e),this.buffered<this.highWaterMark?(this.stream._duplexState|=Ot,!0):(this.stream._duplexState|=CT,!1)}shift(){let e=this.queue.shift();return this.buffered-=this.byteLength(e),this.buffered===0&&(this.stream._duplexState&=PT),e}end(e){typeof e=="function"?this.stream.once("finish",e):e!=null&&this.push(e),this.stream._duplexState=(this.stream._duplexState|ur)&Dm}autoBatch(e,r){let n=[],i=this.stream;for(n.push(e);(i._duplexState&Rm)===Um;)n.push(i._writableState.shift());if((i._duplexState&Ae)!==0)return r(null);i._writev(n,r)}update(){let e=this.stream;e._duplexState|=lr;do{for(;(e._duplexState&Rm)===Ot;){let r=this.shift();e._duplexState|=MT,e._write(r,this.afterWrite)}(e._duplexState&FT)===0&&this.updateNonPrimary()}while(this.continueUpdate()===!0);e._duplexState&=xT}updateNonPrimary(){let e=this.stream;if((e._duplexState&UT)===ur){e._duplexState=(e._duplexState|ft)&wT,e._final(zT.bind(this));return}if((e._duplexState&rt)===kt){(e._duplexState&Ra)===0&&(e._duplexState|=Yr,e._destroy(Bm.bind(this)));return}(e._duplexState&Mm)===Nt&&(e._duplexState=(e._duplexState|Yr)&Lm,e._open(Hm.bind(this)))}continueUpdate(){return(this.stream._duplexState&cr)===0?!1:(this.stream._duplexState&=Cm,!0)}updateCallback(){(this.stream._duplexState&HT)===Xr?this.update():this.updateNextTick()}updateNextTick(){(this.stream._duplexState&cr)===0&&(this.stream._duplexState|=cr,(this.stream._duplexState&lr)===0&&Am(this.afterUpdateNextTick))}},ha=class{constructor(e,{highWaterMark:r=16384,map:n=null,mapReadable:i,byteLength:o,byteLengthReadable:s}={}){this.stream=e,this.queue=new km,this.highWaterMark=r,this.buffered=0,this.error=null,this.pipeline=null,this.byteLength=s||o||Wm,this.map=i||n,this.pipeTo=null,this.afterRead=jT.bind(this),this.afterUpdateNextTick=qT.bind(this)}get ended(){return(this.stream._duplexState&He)!==0}pipe(e,r){if(this.pipeTo!==null)throw new Error("Can only pipe to one destination");if(typeof r!="function"&&(r=null),this.stream._duplexState|=ba,this.pipeTo=e,this.pipeline=new ga(this.stream,e,r),r&&this.stream.on("error",Tm),Zr(e))e._writableState.pipeline=this.pipeline,r&&e.on("error",Tm),e.on("finish",this.pipeline.finished.bind(this.pipeline));else{let n=this.pipeline.done.bind(this.pipeline,e),i=this.pipeline.done.bind(this.pipeline,e,null);e.on("error",n),e.on("close",i),e.on("finish",this.pipeline.finished.bind(this.pipeline))}e.on("drain",GT.bind(this)),this.stream.emit("piping",e),e.emit("pipe",this.stream)}push(e){let r=this.stream;return e===null?(this.highWaterMark=0,r._duplexState=(r._duplexState|Lt)&hT,!1):(this.map!==null&&(e=this.map(e)),this.buffered+=this.byteLength(e),this.queue.push(e),r._duplexState=(r._duplexState|ut)&mT,this.buffered<this.highWaterMark)}shift(){let e=this.queue.shift();return this.buffered-=this.byteLength(e),this.buffered===0&&(this.stream._duplexState&=yT),e}unshift(e){let r=[this.map!==null?this.map(e):e];for(;this.buffered>0;)r.push(this.shift());for(let n=0;n<r.length-1;n++){let i=r[n];this.buffered+=this.byteLength(i),this.queue.push(i)}this.push(r[r.length-1])}read(){let e=this.stream;if((e._duplexState&xm)===ut){let r=this.shift();return this.pipeTo!==null&&this.pipeTo.write(r)===!1&&(e._duplexState&=Pm),(e._duplexState&pa)!==0&&e.emit("data",r),r}return null}drain(){let e=this.stream;for(;(e._duplexState&xm)===ut&&(e._duplexState&Om)!==0;){let r=this.shift();this.pipeTo!==null&&this.pipeTo.write(r)===!1&&(e._duplexState&=Pm),(e._duplexState&pa)!==0&&e.emit("data",r)}}update(){let e=this.stream;e._duplexState|=jr;do{for(this.drain();this.buffered<this.highWaterMark&&(e._duplexState&OT)===0;)e._duplexState|=lT,e._read(this.afterRead),this.drain();(e._duplexState&LT)===fT&&(e._duplexState|=Ea,e.emit("readable")),(e._duplexState&uT)===0&&this.updateNonPrimary()}while(this.continueUpdate()===!0);e._duplexState&=bT}updateNonPrimary(){let e=this.stream;if((e._duplexState&kT)===Lt&&(e._duplexState=(e._duplexState|He)&ST,e.emit("end"),(e._duplexState&Fm)===xa&&(e._duplexState|=kt),this.pipeTo!==null&&this.pipeTo.end()),(e._duplexState&rt)===kt){(e._duplexState&Ra)===0&&(e._duplexState|=Yr,e._destroy(Bm.bind(this)));return}(e._duplexState&Mm)===Nt&&(e._duplexState=(e._duplexState|Yr)&Lm,e._open(Hm.bind(this)))}continueUpdate(){return(this.stream._duplexState&ar)===0?!1:(this.stream._duplexState&=Im,!0)}updateCallback(){(this.stream._duplexState&NT)===fr?this.update():this.updateNextTick()}updateNextTick(){(this.stream._duplexState&ar)===0&&(this.stream._duplexState|=ar,(this.stream._duplexState&jr)===0&&Am(this.afterUpdateNextTick))}},ma=class{constructor(e){this.data=null,this.afterTransform=KT.bind(e),this.afterFinal=null}},ga=class{constructor(e,r,n){this.from=e,this.to=r,this.afterPipe=n,this.error=null,this.pipeToFinished=!1}finished(){this.pipeToFinished=!0}done(e,r){if(r&&(this.error=r),e===this.to&&(this.to=null,this.from!==null)){((this.from._duplexState&He)===0||!this.pipeToFinished)&&this.from.destroy(this.error||new Error("Writable stream closed prematurely"));return}if(e===this.from&&(this.from=null,this.to!==null)){(e._duplexState&He)===0&&this.to.destroy(this.error||new Error("Readable stream closed before ending"));return}this.afterPipe!==null&&this.afterPipe(this.error),this.to=this.from=this.afterPipe=null}};function GT(){this.stream._duplexState|=ba,this.updateCallback()}function zT(t){let e=this.stream;t&&e.destroy(t),(e._duplexState&rt)===0&&(e._duplexState|=Dt,e.emit("finish")),(e._duplexState&Fm)===xa&&(e._duplexState|=kt),e._duplexState&=Nm,(e._duplexState&lr)===0?this.update():this.updateNextTick()}function Bm(t){let e=this.stream;!t&&this.error!==vi&&(t=this.error),t&&e.emit("error",t),e._duplexState|=Wr,e.emit("close");let r=e._readableState,n=e._writableState;if(r!==null&&r.pipeline!==null&&r.pipeline.done(e,t),n!==null){for(;n.drains!==null&&n.drains.length>0;)n.drains.shift().resolve(!1);n.pipeline!==null&&n.pipeline.done(e,t)}}function WT(t){let e=this.stream;t&&e.destroy(t),e._duplexState&=Nm,this.drains!==null&&VT(this.drains),(e._duplexState&vT)===Qr&&(e._duplexState&=ET,(e._duplexState&da)===da&&e.emit("drain")),this.updateCallback()}function jT(t){t&&this.stream.destroy(t),this.stream._duplexState&=pT,this.updateCallback()}function qT(){(this.stream._duplexState&jr)===0&&(this.stream._duplexState&=Im,this.update())}function YT(){(this.stream._duplexState&lr)===0&&(this.stream._duplexState&=Cm,this.update())}function VT(t){for(let e=0;e<t.length;e++)--t[e].writes===0&&(t.shift().resolve(!0),e--)}function Hm(t){let e=this.stream;t&&e.destroy(t),(e._duplexState&kt)===0&&((e._duplexState&AT)===0&&(e._duplexState|=fr),(e._duplexState&DT)===0&&(e._duplexState|=Xr),e.emit("open")),e._duplexState&=vm,e._writableState!==null&&e._writableState.updateCallback(),e._readableState!==null&&e._readableState.updateCallback()}function KT(t,e){e!=null&&this.push(e),this._writableState.afterWrite(t)}function ZT(t){this._readableState!==null&&(t==="data"&&(this._duplexState|=pa|qr,this._readableState.updateNextTick()),t==="readable"&&(this._duplexState|=wa,this._readableState.updateNextTick())),this._writableState!==null&&t==="drain"&&(this._duplexState|=da,this._writableState.updateNextTick())}var Vr=class extends aT{constructor(e){super(),this._duplexState=0,this._readableState=null,this._writableState=null,e&&(e.open&&(this._open=e.open),e.destroy&&(this._destroy=e.destroy),e.predestroy&&(this._predestroy=e.predestroy),e.signal&&e.signal.addEventListener("abort",e0.bind(this))),this.on("newListener",ZT)}_open(e){e(null)}_destroy(e){e(null)}_predestroy(){}get readable(){return this._readableState!==null?!0:void 0}get writable(){return this._writableState!==null?!0:void 0}get destroyed(){return(this._duplexState&Wr)!==0}get destroying(){return(this._duplexState&rt)!==0}destroy(e){(this._duplexState&rt)===0&&(e||(e=vi),this._duplexState=(this._duplexState|kt)&RT,this._readableState!==null&&(this._readableState.highWaterMark=0,this._readableState.error=e),this._writableState!==null&&(this._writableState.highWaterMark=0,this._writableState.error=e),this._duplexState|=Sa,this._predestroy(),this._duplexState&=cT,this._readableState!==null&&this._readableState.updateNextTick(),this._writableState!==null&&this._writableState.updateNextTick())}},It=class extends Vr{constructor(e){super(e),this._duplexState|=Nt|Dt,this._readableState=new ha(this,e),e&&(e.read&&(this._read=e.read),e.eagerOpen&&this._readableState.updateNextTick())}_read(e){e(null)}pipe(e,r){return this._readableState.updateNextTick(),this._readableState.pipe(e,r),e}read(){return this._readableState.updateNextTick(),this._readableState.read()}push(e){return this._readableState.updateNextTick(),this._readableState.push(e)}unshift(e){return this._readableState.updateNextTick(),this._readableState.unshift(e)}resume(){return this._duplexState|=qr,this._readableState.updateNextTick(),this}pause(){return this._duplexState&=gT,this}static _fromAsyncIterator(e,r){let n,i=new It({...r,read(s){e.next().then(o).then(s.bind(null,null)).catch(s)},predestroy(){n=e.return()},destroy(s){if(!n)return s(null);n.then(s.bind(null,null)).catch(s)}});return i;function o(s){s.done?i.push(null):i.push(s.value)}}static from(e,r){if(_T(e))return e;if(e[Ii])return this._fromAsyncIterator(e[Ii](),r);Array.isArray(e)||(e=e===void 0?[]:[e]);let n=0;return new It({...r,read(i){this.push(n===e.length?null:e[n++]),i(null)}})}static isBackpressured(e){return(e._duplexState&IT)!==0||e._readableState.buffered>=e._readableState.highWaterMark}static isPaused(e){return(e._duplexState&qr)===0}[Ii](){let e=this,r=null,n=null,i=null;return this.on("error",l=>{r=l}),this.on("readable",o),this.on("close",s),{[Ii](){return this},next(){return new Promise(function(l,f){n=l,i=f;let u=e.read();u!==null?a(u):(e._duplexState&Wr)!==0&&a(null)})},return(){return c(null)},throw(l){return c(l)}};function o(){n!==null&&a(e.read())}function s(){n!==null&&a(null)}function a(l){i!==null&&(r?i(r):l===null&&(e._duplexState&He)===0?i(vi):n({value:l,done:l===null}),i=n=null)}function c(l){return e.destroy(l),new Promise((f,u)=>{if(e._duplexState&Wr)return f({value:void 0,done:!0});e.once("close",function(){l?u(l):f({value:void 0,done:!0})})})}}},Di=class extends Vr{constructor(e){super(e),this._duplexState|=Nt|He,this._writableState=new Ni(this,e),e&&(e.writev&&(this._writev=e.writev),e.write&&(this._write=e.write),e.final&&(this._final=e.final),e.eagerOpen&&this._writableState.updateNextTick())}_writev(e,r){r(null)}_write(e,r){this._writableState.autoBatch(e,r)}_final(e){e(null)}static isBackpressured(e){return(e._duplexState&BT)!==0}static drained(e){if(e.destroyed)return Promise.resolve(!1);let r=e._writableState,i=(t0(e)?Math.min(1,r.queue.length):r.queue.length)+(e._duplexState&Pa?1:0);return i===0?Promise.resolve(!0):(r.drains===null&&(r.drains=[]),new Promise(o=>{r.drains.push({writes:i,resolve:o})}))}write(e){return this._writableState.updateNextTick(),this._writableState.push(e)}end(e){return this._writableState.updateNextTick(),this._writableState.end(e),this}},Kr=class extends It{constructor(e){super(e),this._duplexState=Nt,this._writableState=new Ni(this,e),e&&(e.writev&&(this._writev=e.writev),e.write&&(this._write=e.write),e.final&&(this._final=e.final))}_writev(e,r){r(null)}_write(e,r){this._writableState.autoBatch(e,r)}_final(e){e(null)}write(e){return this._writableState.updateNextTick(),this._writableState.push(e)}end(e){return this._writableState.updateNextTick(),this._writableState.end(e),this}},Ci=class extends Kr{constructor(e){super(e),this._transformState=new ma(this),e&&(e.transform&&(this._transform=e.transform),e.flush&&(this._flush=e.flush))}_write(e,r){this._readableState.buffered>=this._readableState.highWaterMark?this._transformState.data=e:this._transform(e,this._transformState.afterTransform)}_read(e){if(this._transformState.data!==null){let r=this._transformState.data;this._transformState.data=null,e(null),this._transform(r,this._transformState.afterTransform)}else e(null)}destroy(e){super.destroy(e),this._transformState.data!==null&&(this._transformState.data=null,this._transformState.afterTransform())}_transform(e,r){r(null,e)}_flush(e){e(null)}_final(e){this._transformState.afterFinal=e,this._flush(JT.bind(this))}},ya=class extends Ci{};function JT(t,e){let r=this._transformState.afterFinal;if(t)return r(t);e!=null&&this.push(e),this.push(null),r(null)}function XT(...t){return new Promise((e,r)=>Gm(...t,n=>{if(n)return r(n);e()}))}function Gm(t,...e){let r=Array.isArray(t)?[...t,...e]:[t,...e],n=r.length&&typeof r[r.length-1]=="function"?r.pop():null;if(r.length<2)throw new Error("Pipeline requires at least 2 streams");let i=r[0],o=null,s=null;for(let l=1;l<r.length;l++)o=r[l],Zr(i)?i.pipe(o,c):(a(i,!0,l>1,c),i.pipe(o)),i=o;if(n){let l=!1,f=Zr(o)||!!(o._writableState&&o._writableState.autoDestroy);o.on("error",u=>{s===null&&(s=u)}),o.on("finish",()=>{l=!0,f||n(s)}),f&&o.on("close",()=>n(s||(l?null:fa)))}return o;function a(l,f,u,p){l.on("error",p),l.on("close",d);function d(){if(f&&l._readableState&&!l._readableState.ended||u&&l._writableState&&!l._writableState.ended)return p(fa)}}function c(l){if(!(!l||s)){s=l;for(let f of r)f.destroy(l)}}}function zm(t){return!!t._readableState||!!t._writableState}function Zr(t){return typeof t._duplexState=="number"&&zm(t)}function QT(t){let e=t._readableState&&t._readableState.error||t._writableState&&t._writableState.error;return e===vi?null:e}function _T(t){return Zr(t)&&t.readable}function $T(t){return typeof t=="object"&&t!==null&&typeof t.byteLength=="number"}function Wm(t){return $T(t)?t.byteLength:1024}function Tm(){}function e0(){this.destroy(new Error("Stream aborted."))}function t0(t){return t._writev!==Di.prototype._writev&&t._writev!==Kr.prototype._writev}jm.exports={pipeline:Gm,pipelinePromise:XT,isStream:zm,isStreamx:Zr,getStreamError:QT,Stream:Vr,Writable:Di,Readable:It,Duplex:Kr,Transform:Ci,PassThrough:ya}});var Mi=W((cM,qm)=>{function r0(t){return Buffer.isBuffer(t)||t instanceof Uint8Array}function n0(t){return Buffer.isEncoding(t)}function i0(t,e,r){return Buffer.alloc(t,e,r)}function o0(t){return Buffer.allocUnsafe(t)}function s0(t){return Buffer.allocUnsafeSlow(t)}function a0(t,e){return Buffer.byteLength(t,e)}function c0(t,e){return Buffer.compare(t,e)}function l0(t,e){return Buffer.concat(t,e)}function u0(t,e,r,n,i){return ce(t).copy(e,r,n,i)}function f0(t,e){return ce(t).equals(e)}function p0(t,e,r,n,i){return ce(t).fill(e,r,n,i)}function d0(t,e,r){return Buffer.from(t,e,r)}function h0(t,e,r,n){return ce(t).includes(e,r,n)}function m0(t,e,r,n){return ce(t).indexOf(e,r,n)}function g0(t,e,r,n){return ce(t).lastIndexOf(e,r,n)}function y0(t){return ce(t).swap16()}function S0(t){return ce(t).swap32()}function b0(t){return ce(t).swap64()}function ce(t){return Buffer.isBuffer(t)?t:Buffer.from(t.buffer,t.byteOffset,t.byteLength)}function w0(t,e,r,n){return ce(t).toString(e,r,n)}function E0(t,e,r,n,i){return ce(t).write(e,r,n,i)}function P0(t,e,r){return ce(t).writeDoubleLE(e,r)}function x0(t,e,r){return ce(t).writeFloatLE(e,r)}function R0(t,e,r){return ce(t).writeUInt32LE(e,r)}function T0(t,e,r){return ce(t).writeInt32LE(e,r)}function A0(t,e){return ce(t).readDoubleLE(e)}function k0(t,e){return ce(t).readFloatLE(e)}function L0(t,e){return ce(t).readUInt32LE(e)}function O0(t,e){return ce(t).readInt32LE(e)}qm.exports={isBuffer:r0,isEncoding:n0,alloc:i0,allocUnsafe:o0,allocUnsafeSlow:s0,byteLength:a0,compare:c0,concat:l0,copy:u0,equals:f0,fill:p0,from:d0,includes:h0,indexOf:m0,lastIndexOf:g0,swap16:y0,swap32:S0,swap64:b0,toBuffer:ce,toString:w0,write:E0,writeDoubleLE:P0,writeFloatLE:x0,writeUInt32LE:R0,writeInt32LE:T0,readDoubleLE:A0,readFloatLE:k0,readUInt32LE:L0,readInt32LE:O0}});var La=W(dr=>{var J=Mi(),I0="0000000000000000000",N0="7777777777777777777",Ui="0".charCodeAt(0),Ym=J.from([117,115,116,97,114,0]),D0=J.from([Ui,Ui]),C0=J.from([117,115,116,97,114,32]),v0=J.from([32,0]),F0=4095,_r=257,ka=263;dr.decodeLongPath=function(e,r){return pr(e,0,e.length,r)};dr.encodePax=function(e){let r="";e.name&&(r+=Aa(" path="+e.name+`
`)),e.linkname&&(r+=Aa(" linkpath="+e.linkname+`
`));let n=e.pax;if(n)for(let i in n)r+=Aa(" "+i+"="+n[i]+`
`);return J.from(r)};dr.decodePax=function(e){let r={};for(;e.length;){let n=0;for(;n<e.length&&e[n]!==32;)n++;let i=parseInt(J.toString(e.subarray(0,n)),10);if(!i)return r;let o=J.toString(e.subarray(n+1,i-1)),s=o.indexOf("=");if(s===-1)return r;r[o.slice(0,s)]=o.slice(s+1),e=e.subarray(i)}return r};dr.encode=function(e){let r=J.alloc(512),n=e.name,i="";if(e.typeflag===5&&n[n.length-1]!=="/"&&(n+="/"),J.byteLength(n)!==n.length)return null;for(;J.byteLength(n)>100;){let o=n.indexOf("/");if(o===-1)return null;i+=i?"/"+n.slice(0,o):n.slice(0,o),n=n.slice(o+1)}return J.byteLength(n)>100||J.byteLength(i)>155||e.linkname&&J.byteLength(e.linkname)>100?null:(J.write(r,n),J.write(r,dt(e.mode&F0,6),100),J.write(r,dt(e.uid,6),108),J.write(r,dt(e.gid,6),116),W0(e.size,r,124),J.write(r,dt(e.mtime.getTime()/1e3|0,11),136),r[156]=Ui+G0(e.type),e.linkname&&J.write(r,e.linkname,157),J.copy(Ym,r,_r),J.copy(D0,r,ka),e.uname&&J.write(r,e.uname,265),e.gname&&J.write(r,e.gname,297),J.write(r,dt(e.devmajor||0,6),329),J.write(r,dt(e.devminor||0,6),337),i&&J.write(r,i,345),J.write(r,dt(Km(r),6),148),r)};dr.decode=function(e,r,n){let i=e[156]===0?0:e[156]-Ui,o=pr(e,0,100,r),s=pt(e,100,8),a=pt(e,108,8),c=pt(e,116,8),l=pt(e,124,12),f=pt(e,136,12),u=H0(i),p=e[157]===0?null:pr(e,157,100,r),d=pr(e,265,32),m=pr(e,297,32),g=pt(e,329,8),h=pt(e,337,8),O=Km(e);if(O===8*32)return null;if(O!==pt(e,148,8))throw new Error("Invalid tar header. Maybe the tar is corrupted or it needs to be gunzipped?");if(M0(e))e[345]&&(o=pr(e,345,155,r)+"/"+o);else if(!U0(e)){if(!n)throw new Error("Invalid tar header: unknown format.")}return i===0&&o&&o[o.length-1]==="/"&&(i=5),{name:o,mode:s,uid:a,gid:c,size:l,mtime:new Date(1e3*f),type:u,linkname:p,uname:d,gname:m,devmajor:g,devminor:h,pax:null}};function M0(t){return J.equals(Ym,t.subarray(_r,_r+6))}function U0(t){return J.equals(C0,t.subarray(_r,_r+6))&&J.equals(v0,t.subarray(ka,ka+2))}function B0(t,e,r){return typeof t!="number"?r:(t=~~t,t>=e?e:t>=0||(t+=e,t>=0)?t:0)}function H0(t){switch(t){case 0:return"file";case 1:return"link";case 2:return"symlink";case 3:return"character-device";case 4:return"block-device";case 5:return"directory";case 6:return"fifo";case 7:return"contiguous-file";case 72:return"pax-header";case 55:return"pax-global-header";case 27:return"gnu-long-link-path";case 28:case 30:return"gnu-long-path"}return null}function G0(t){switch(t){case"file":return 0;case"link":return 1;case"symlink":return 2;case"character-device":return 3;case"block-device":return 4;case"directory":return 5;case"fifo":return 6;case"contiguous-file":return 7;case"pax-header":return 72}return 0}function Vm(t,e,r,n){for(;r<n;r++)if(t[r]===e)return r;return n}function Km(t){let e=256;for(let r=0;r<148;r++)e+=t[r];for(let r=156;r<512;r++)e+=t[r];return e}function dt(t,e){return t=t.toString(8),t.length>e?N0.slice(0,e)+" ":I0.slice(0,e-t.length)+t+" "}function z0(t,e,r){e[r]=128;for(let n=11;n>0;n--)e[r+n]=t&255,t=Math.floor(t/256)}function W0(t,e,r){t.toString(8).length>11?z0(t,e,r):J.write(e,dt(t,11),r)}function j0(t){let e;if(t[0]===128)e=!0;else if(t[0]===255)e=!1;else return null;let r=[],n;for(n=t.length-1;n>0;n--){let s=t[n];e?r.push(s):r.push(255-s)}let i=0,o=r.length;for(n=0;n<o;n++)i+=r[n]*Math.pow(256,n);return e?i:-1*i}function pt(t,e,r){if(t=t.subarray(e,e+r),e=0,t[e]&128)return j0(t);{for(;e<t.length&&t[e]===32;)e++;let n=B0(Vm(t,32,e,t.length),t.length,t.length);for(;e<n&&t[e]===0;)e++;return n===e?0:parseInt(J.toString(t.subarray(e,n)),8)}}function pr(t,e,r,n){return J.toString(t.subarray(e,Vm(t,0,e,e+r)),n)}function Aa(t){let e=J.byteLength(t),r=Math.floor(Math.log(e)/Math.log(10))+1;return e+r>=Math.pow(10,r)&&r++,e+r+t}});var _m=W((uM,Qm)=>{var{Writable:q0,Readable:Y0,getStreamError:Zm}=Ta(),V0=ua(),Jm=Mi(),hr=La(),K0=Jm.alloc(0),Ia=class{constructor(){this.buffered=0,this.shifted=0,this.queue=new V0,this._offset=0}push(e){this.buffered+=e.byteLength,this.queue.push(e)}shiftFirst(e){return this._buffered===0?null:this._next(e)}shift(e){if(e>this.buffered)return null;if(e===0)return K0;let r=this._next(e);if(e===r.byteLength)return r;let n=[r];for(;(e-=r.byteLength)>0;)r=this._next(e),n.push(r);return Jm.concat(n)}_next(e){let r=this.queue.peek(),n=r.byteLength-this._offset;if(e>=n){let i=this._offset?r.subarray(this._offset,r.byteLength):r;return this.queue.shift(),this._offset=0,this.buffered-=n,this.shifted+=n,i}return this.buffered-=e,this.shifted+=e,r.subarray(this._offset,this._offset+=e)}},Na=class extends Y0{constructor(e,r,n){super(),this.header=r,this.offset=n,this._parent=e}_read(e){this.header.size===0&&this.push(null),this._parent._stream===this&&this._parent._update(),e(null)}_predestroy(){this._parent.destroy(Zm(this))}_detach(){this._parent._stream===this&&(this._parent._stream=null,this._parent._missing=Xm(this.header.size),this._parent._update())}_destroy(e){this._detach(),e(null)}},Da=class extends q0{constructor(e){super(e),e||(e={}),this._buffer=new Ia,this._offset=0,this._header=null,this._stream=null,this._missing=0,this._longHeader=!1,this._callback=Oa,this._locked=!1,this._finished=!1,this._pax=null,this._paxGlobal=null,this._gnuLongPath=null,this._gnuLongLinkPath=null,this._filenameEncoding=e.filenameEncoding||"utf-8",this._allowUnknownFormat=!!e.allowUnknownFormat,this._unlockBound=this._unlock.bind(this)}_unlock(e){if(this._locked=!1,e){this.destroy(e),this._continueWrite(e);return}this._update()}_consumeHeader(){if(this._locked)return!1;this._offset=this._buffer.shifted;try{this._header=hr.decode(this._buffer.shift(512),this._filenameEncoding,this._allowUnknownFormat)}catch(e){return this._continueWrite(e),!1}if(!this._header)return!0;switch(this._header.type){case"gnu-long-path":case"gnu-long-link-path":case"pax-global-header":case"pax-header":return this._longHeader=!0,this._missing=this._header.size,!0}return this._locked=!0,this._applyLongHeaders(),this._header.size===0||this._header.type==="directory"?(this.emit("entry",this._header,this._createStream(),this._unlockBound),!0):(this._stream=this._createStream(),this._missing=this._header.size,this.emit("entry",this._header,this._stream,this._unlockBound),!0)}_applyLongHeaders(){this._gnuLongPath&&(this._header.name=this._gnuLongPath,this._gnuLongPath=null),this._gnuLongLinkPath&&(this._header.linkname=this._gnuLongLinkPath,this._gnuLongLinkPath=null),this._pax&&(this._pax.path&&(this._header.name=this._pax.path),this._pax.linkpath&&(this._header.linkname=this._pax.linkpath),this._pax.size&&(this._header.size=parseInt(this._pax.size,10)),this._header.pax=this._pax,this._pax=null)}_decodeLongHeader(e){switch(this._header.type){case"gnu-long-path":this._gnuLongPath=hr.decodeLongPath(e,this._filenameEncoding);break;case"gnu-long-link-path":this._gnuLongLinkPath=hr.decodeLongPath(e,this._filenameEncoding);break;case"pax-global-header":this._paxGlobal=hr.decodePax(e);break;case"pax-header":this._pax=this._paxGlobal===null?hr.decodePax(e):Object.assign({},this._paxGlobal,hr.decodePax(e));break}}_consumeLongHeader(){this._longHeader=!1,this._missing=Xm(this._header.size);let e=this._buffer.shift(this._header.size);try{this._decodeLongHeader(e)}catch(r){return this._continueWrite(r),!1}return!0}_consumeStream(){let e=this._buffer.shiftFirst(this._missing);if(e===null)return!1;this._missing-=e.byteLength;let r=this._stream.push(e);return this._missing===0?(this._stream.push(null),r&&this._stream._detach(),r&&this._locked===!1):r}_createStream(){return new Na(this,this._header,this._offset)}_update(){for(;this._buffer.buffered>0&&!this.destroying;){if(this._missing>0){if(this._stream!==null){if(this._consumeStream()===!1)return;continue}if(this._longHeader===!0){if(this._missing>this._buffer.buffered)break;if(this._consumeLongHeader()===!1)return!1;continue}let e=this._buffer.shiftFirst(this._missing);e!==null&&(this._missing-=e.byteLength);continue}if(this._buffer.buffered<512)break;if(this._stream!==null||this._consumeHeader()===!1)return}this._continueWrite(null)}_continueWrite(e){let r=this._callback;this._callback=Oa,r(e)}_write(e,r){this._callback=r,this._buffer.push(e),this._update()}_final(e){this._finished=this._missing===0&&this._buffer.buffered===0,e(this._finished?null:new Error("Unexpected end of data"))}_predestroy(){this._continueWrite(null)}_destroy(e){this._stream&&this._stream.destroy(Zm(this)),e(null)}[Symbol.asyncIterator](){let e=null,r=null,n=null,i=null,o=null,s=this;return this.on("entry",l),this.on("error",p=>{e=p}),this.on("close",f),{[Symbol.asyncIterator](){return this},next(){return new Promise(c)},return(){return u(null)},throw(p){return u(p)}};function a(p){if(!o)return;let d=o;o=null,d(p)}function c(p,d){if(e)return d(e);if(i){p({value:i,done:!1}),i=null;return}r=p,n=d,a(null),s._finished&&r&&(r({value:void 0,done:!0}),r=n=null)}function l(p,d,m){o=m,d.on("error",Oa),r?(r({value:d,done:!1}),r=n=null):i=d}function f(){a(e),r&&(e?n(e):r({value:void 0,done:!0}),r=n=null)}function u(p){return s.destroy(p),a(p),new Promise((d,m)=>{if(s.destroyed)return d({value:void 0,done:!0});s.once("close",function(){p?m(p):d({value:void 0,done:!0})})})}}};Qm.exports=function(e){return new Da(e)};function Oa(){}function Xm(t){return t&=511,t&&512-t}});var eg=W((fM,Ca)=>{var $m={S_IFMT:61440,S_IFDIR:16384,S_IFCHR:8192,S_IFBLK:24576,S_IFIFO:4096,S_IFLNK:40960};try{Ca.exports=w("fs").constants||$m}catch{Ca.exports=$m}});var og=W((pM,ig)=>{var{Readable:Z0,Writable:J0,getStreamError:tg}=Ta(),Ct=Mi(),mr=eg(),Bi=La(),X0=493,Q0=420,rg=Ct.alloc(1024),Fa=class extends J0{constructor(e,r,n){super({mapWritable:$0,eagerOpen:!0}),this.written=0,this.header=r,this._callback=n,this._linkname=null,this._isLinkname=r.type==="symlink"&&!r.linkname,this._isVoid=r.type!=="file"&&r.type!=="contiguous-file",this._finished=!1,this._pack=e,this._openCallback=null,this._pack._stream===null?this._pack._stream=this:this._pack._pending.push(this)}_open(e){this._openCallback=e,this._pack._stream===this&&this._continueOpen()}_continuePack(e){if(this._callback===null)return;let r=this._callback;this._callback=null,r(e)}_continueOpen(){this._pack._stream===null&&(this._pack._stream=this);let e=this._openCallback;if(this._openCallback=null,e!==null){if(this._pack.destroying)return e(new Error("pack stream destroyed"));if(this._pack._finalized)return e(new Error("pack stream is already finalized"));this._pack._stream=this,this._isLinkname||this._pack._encode(this.header),this._isVoid&&(this._finish(),this._continuePack(null)),e(null)}}_write(e,r){if(this._isLinkname)return this._linkname=this._linkname?Ct.concat([this._linkname,e]):e,r(null);if(this._isVoid)return e.byteLength>0?r(new Error("No body allowed for this entry")):r();if(this.written+=e.byteLength,this._pack.push(e))return r();this._pack._drain=r}_finish(){this._finished||(this._finished=!0,this._isLinkname&&(this.header.linkname=this._linkname?Ct.toString(this._linkname,"utf-8"):"",this._pack._encode(this.header)),ng(this._pack,this.header.size),this._pack._done(this))}_final(e){if(this.written!==this.header.size)return e(new Error("Size mismatch"));this._finish(),e(null)}_getError(){return tg(this)||new Error("tar entry destroyed")}_predestroy(){this._pack.destroy(this._getError())}_destroy(e){this._pack._done(this),this._continuePack(this._finished?null:this._getError()),e()}},Ma=class extends Z0{constructor(e){super(e),this._drain=va,this._finalized=!1,this._finalizing=!1,this._pending=[],this._stream=null}entry(e,r,n){if(this._finalized||this.destroying)throw new Error("already finalized or destroyed");typeof r=="function"&&(n=r,r=null),n||(n=va),(!e.size||e.type==="symlink")&&(e.size=0),e.type||(e.type=_0(e.mode)),e.mode||(e.mode=e.type==="directory"?X0:Q0),e.uid||(e.uid=0),e.gid||(e.gid=0),e.mtime||(e.mtime=new Date),typeof r=="string"&&(r=Ct.from(r));let i=new Fa(this,e,n);return Ct.isBuffer(r)?(e.size=r.byteLength,i.write(r),i.end(),i):(i._isVoid,i)}finalize(){if(this._stream||this._pending.length>0){this._finalizing=!0;return}this._finalized||(this._finalized=!0,this.push(rg),this.push(null))}_done(e){e===this._stream&&(this._stream=null,this._finalizing&&this.finalize(),this._pending.length&&this._pending.shift()._continueOpen())}_encode(e){if(!e.pax){let r=Bi.encode(e);if(r){this.push(r);return}}this._encodePax(e)}_encodePax(e){let r=Bi.encodePax({name:e.name,linkname:e.linkname,pax:e.pax}),n={name:"PaxHeader",mode:e.mode,uid:e.uid,gid:e.gid,size:r.byteLength,mtime:e.mtime,type:"pax-header",linkname:e.linkname&&"PaxHeader",uname:e.uname,gname:e.gname,devmajor:e.devmajor,devminor:e.devminor};this.push(Bi.encode(n)),this.push(r),ng(this,r.byteLength),n.size=e.size,n.type=e.type,this.push(Bi.encode(n))}_doDrain(){let e=this._drain;this._drain=va,e()}_predestroy(){let e=tg(this);for(this._stream&&this._stream.destroy(e);this._pending.length;){let r=this._pending.shift();r.destroy(e),r._continueOpen()}this._doDrain()}_read(e){this._doDrain(),e()}};ig.exports=function(e){return new Ma(e)};function _0(t){switch(t&mr.S_IFMT){case mr.S_IFBLK:return"block-device";case mr.S_IFCHR:return"character-device";case mr.S_IFDIR:return"directory";case mr.S_IFIFO:return"fifo";case mr.S_IFLNK:return"symlink"}return"file"}function va(){}function ng(t,e){e&=511,e&&t.push(rg.subarray(0,512-e))}function $0(t){return Ct.isBuffer(t)?t:Ct.from(t)}});var sg=W(Ua=>{Ua.extract=_m();Ua.pack=og()});var gg=W((wM,lA)=>{lA.exports=`# This file can't import anything as we include the contents of this file
# directly in nix eval --apply arguments (see how this file is included in runner/src/common.ts)

with builtins;

let
  nameValuePair = name: value: { inherit name value; };

  filterAttrs = pred: set:
    listToAttrs (concatMap (name: let v = set.\${name}; in if pred name v then [(nameValuePair name v)] else []) (attrNames set));

  ##

  getPackages = manifest:
    mapAttrs (name: pkg:
      filterAttrs (key: b: (builtins.elem key [
        "name"
        "outputHash"
        "outputHashByPlatform"
      ])) pkg
    ) manifest;
in
`});var mA={};Ag(mA,{default:()=>hA,getExistingYarnManifest:()=>dA,nixCurrentSystem:()=>pA});var be=he(w("fs")),ke=he(w("path")),za=w("stream"),Mt=w("@yarnpkg/cli"),I=w("@yarnpkg/core"),Ne=w("@yarnpkg/fslib"),Wa=w("@yarnpkg/libzip"),yg=w("@yarnpkg/plugin-pnp"),Sg=w("@yarnpkg/plugin-file"),bg=he(bc()),ge=w("clipanion");function ie(t){if(typeof t!="object"||t===null)return!1;let e=Object.getPrototypeOf(t);return(e===null||e===Object.prototype||Object.getPrototypeOf(e)===null)&&!(Symbol.toStringTag in t)&&!(Symbol.iterator in t)}var wc=w("url"),Gt=(t,e)=>{let r=fo(t);if(typeof r!="string")throw new TypeError(`${e} must be a string or a file URL: ${r}.`);return r},fo=t=>t instanceof URL?(0,wc.fileURLToPath)(t):t;var un=(t,e=[],r={})=>{let n=Gt(t,"First argument"),[i,o]=ie(e)?[[],e]:[e,r];if(!Array.isArray(i))throw new TypeError(`Second argument must be either an array of arguments or an options object: ${i}`);if(i.some(c=>typeof c=="object"&&c!==null))throw new TypeError(`Second argument must be an array of strings: ${i}`);let s=i.map(String),a=s.find(c=>c.includes("\0"));if(a!==void 0)throw new TypeError(`Arguments cannot contain null bytes ("\\0"): ${a}`);if(!ie(o))throw new TypeError(`Last argument must be an options object: ${o}`);return[n,s,o]};var Oc=w("child_process");var Ec=w("string_decoder"),{toString:Pc}=Object.prototype,xc=t=>Pc.call(t)==="[object ArrayBuffer]",pe=t=>Pc.call(t)==="[object Uint8Array]",Qe=t=>new Uint8Array(t.buffer,t.byteOffset,t.byteLength),Gy=new TextEncoder,Rc=t=>Gy.encode(t),zy=new TextDecoder,fn=t=>zy.decode(t),Tc=(t,e)=>Wy(t,e).join(""),Wy=(t,e)=>{if(e==="utf8"&&t.every(o=>typeof o=="string"))return t;let r=new Ec.StringDecoder(e),n=t.map(o=>typeof o=="string"?Rc(o):o).map(o=>r.write(o)),i=r.end();return i===""?n:[...n,i]},wr=t=>t.length===1&&pe(t[0])?t[0]:po(jy(t)),jy=t=>t.map(e=>typeof e=="string"?Rc(e):e),po=t=>{let e=new Uint8Array(qy(t)),r=0;for(let n of t)e.set(n,r),r+=n.length;return e},qy=t=>{let e=0;for(let r of t)e+=r.length;return e};var Ic=t=>Array.isArray(t)&&Array.isArray(t.raw),Nc=(t,e)=>{let r=[];for(let[o,s]of t.entries())r=Yy({templates:t,expressions:e,tokens:r,index:o,template:s});if(r.length===0)throw new TypeError("Template script must not be empty");let[n,...i]=r;return[n,i,{}]},Yy=({templates:t,expressions:e,tokens:r,index:n,template:i})=>{if(i===void 0)throw new TypeError(`Invalid backslash sequence: ${t.raw[n]}`);let{nextTokens:o,leadingWhitespaces:s,trailingWhitespaces:a}=Vy(i,t.raw[n]),c=kc(r,o,s);if(n===e.length)return c;let l=e[n],f=Array.isArray(l)?l.map(u=>Lc(u)):[Lc(l)];return kc(c,f,a)},Vy=(t,e)=>{if(e.length===0)return{nextTokens:[],leadingWhitespaces:!1,trailingWhitespaces:!1};let r=[],n=0,i=Ac.has(e[0]);for(let s=0,a=0;s<t.length;s+=1,a+=1){let c=e[a];if(Ac.has(c))n!==s&&r.push(t.slice(n,s)),n=s+1;else if(c==="\\"){let l=e[a+1];l==="u"&&e[a+2]==="{"?a=e.indexOf("}",a+3):a+=Ky[l]??1}}let o=n===t.length;return o||r.push(t.slice(n)),{nextTokens:r,leadingWhitespaces:i,trailingWhitespaces:o}},Ac=new Set([" ","	","\r",`
`]),Ky={x:3,u:5},kc=(t,e,r)=>r||t.length===0||e.length===0?[...t,...e]:[...t.slice(0,-1),`${t.at(-1)}${e[0]}`,...e.slice(1)],Lc=t=>{let e=typeof t;if(e==="string")return t;if(e==="number")return String(t);if(ie(t)&&("stdout"in t||"isMaxBuffer"in t))return Zy(t);throw t instanceof Oc.ChildProcess||Object.prototype.toString.call(t)==="[object Promise]"?new TypeError("Unexpected subprocess in template expression. Please use ${await subprocess} instead of ${subprocess}."):new TypeError(`Unexpected "${e}" in template expression`)},Zy=({stdout:t})=>{if(typeof t=="string")return t;if(pe(t))return fn(t);throw t===void 0?new TypeError(`Missing result.stdout in template expression. This is probably due to the previous subprocess' "stdout" option.`):new TypeError(`Unexpected "${typeof t}" stdout in template expression`)};var Gp=w("child_process");var Cc=w("util");var pn=he(w("process"),1),ve=t=>dn.includes(t),dn=[pn.default.stdin,pn.default.stdout,pn.default.stderr],Le=["stdin","stdout","stderr"],hn=t=>Le[t]??`stdio[${t}]`;var vc=t=>{let e={...t};for(let r of go)e[r]=ho(t,r);return e},ho=(t,e)=>{let r=Array.from({length:Jy(t)+1}),n=Xy(t[e],r,e);return tS(n,e)},Jy=({stdio:t})=>Array.isArray(t)?Math.max(t.length,Le.length):Le.length,Xy=(t,e,r)=>ie(t)?Qy(t,e,r):e.fill(t),Qy=(t,e,r)=>{for(let n of Object.keys(t).sort(_y))for(let i of $y(n,r,e))e[i]=t[n];return e},_y=(t,e)=>Dc(t)<Dc(e)?1:-1,Dc=t=>t==="stdout"||t==="stderr"?0:t==="all"?2:1,$y=(t,e,r)=>{if(t==="ipc")return[r.length-1];let n=mo(t);if(n===void 0||n===0)throw new TypeError(`"${e}.${t}" is invalid.
It must be "${e}.stdout", "${e}.stderr", "${e}.all", "${e}.ipc", or "${e}.fd3", "${e}.fd4" (and so on).`);if(n>=r.length)throw new TypeError(`"${e}.${t}" is invalid: that file descriptor does not exist.
Please set the "stdio" option to ensure that file descriptor exists.`);return n==="all"?[1,2]:[n]},mo=t=>{if(t==="all")return t;if(Le.includes(t))return Le.indexOf(t);let e=eS.exec(t);if(e!==null)return Number(e[1])},eS=/^fd(\d+)$/,tS=(t,e)=>t.map(r=>r===void 0?nS[e]:r),rS=(0,Cc.debuglog)("execa").enabled?"full":"none",nS={lines:!1,buffer:!0,maxBuffer:1e3*1e3*100,verbose:rS,stripFinalNewline:!0},go=["lines","buffer","maxBuffer","verbose","stripFinalNewline"],_e=(t,e)=>e==="ipc"?t.at(-1):t[e];var zt=({verbose:t},e)=>yo(t,e)!=="none",Wt=({verbose:t},e)=>!["none","short"].includes(yo(t,e)),Fc=({verbose:t},e)=>{let r=yo(t,e);return mn(r)?r:void 0},yo=(t,e)=>e===void 0?iS(t):_e(t,e),iS=t=>t.find(e=>mn(e))??gn.findLast(e=>t.includes(e)),mn=t=>typeof t=="function",gn=["none","short","full"];var Xc=w("fs"),Qc=w("util");var Mc=w("process"),Uc=w("util"),Bc=(t,e)=>{let r=[t,...e],n=r.join(" "),i=r.map(o=>lS(Hc(o))).join(" ");return{command:n,escapedCommand:i}},Er=t=>(0,Uc.stripVTControlCharacters)(t).split(`
`).map(e=>Hc(e)).join(`
`),Hc=t=>t.replaceAll(sS,e=>oS(e)),oS=t=>{let e=aS[t];if(e!==void 0)return e;let r=t.codePointAt(0),n=r.toString(16);return r<=cS?`\\u${n.padStart(4,"0")}`:`\\U${n}`},sS=/\p{Separator}|\p{Other}/gu,aS={" ":" ","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","	":"\\t"},cS=65535,lS=t=>uS.test(t)?t:Mc.platform==="win32"?`"${t.replaceAll('"','""')}"`:`'${t.replaceAll("'","'\\''")}'`,uS=/^[\w./-]+$/;var Fe=he(w("process"),1);function So(){return Fe.default.platform!=="win32"?Fe.default.env.TERM!=="linux":Boolean(Fe.default.env.WT_SESSION)||Boolean(Fe.default.env.TERMINUS_SUBLIME)||Fe.default.env.ConEmuTask==="{cmd::Cmder}"||Fe.default.env.TERM_PROGRAM==="Terminus-Sublime"||Fe.default.env.TERM_PROGRAM==="vscode"||Fe.default.env.TERM==="xterm-256color"||Fe.default.env.TERM==="alacritty"||Fe.default.env.TERMINAL_EMULATOR==="JetBrains-JediTerm"}var Gc={circleQuestionMark:"(?)",questionMarkPrefix:"(?)",square:"\u2588",squareDarkShade:"\u2593",squareMediumShade:"\u2592",squareLightShade:"\u2591",squareTop:"\u2580",squareBottom:"\u2584",squareLeft:"\u258C",squareRight:"\u2590",squareCenter:"\u25A0",bullet:"\u25CF",dot:"\u2024",ellipsis:"\u2026",pointerSmall:"\u203A",triangleUp:"\u25B2",triangleUpSmall:"\u25B4",triangleDown:"\u25BC",triangleDownSmall:"\u25BE",triangleLeftSmall:"\u25C2",triangleRightSmall:"\u25B8",home:"\u2302",heart:"\u2665",musicNote:"\u266A",musicNoteBeamed:"\u266B",arrowUp:"\u2191",arrowDown:"\u2193",arrowLeft:"\u2190",arrowRight:"\u2192",arrowLeftRight:"\u2194",arrowUpDown:"\u2195",almostEqual:"\u2248",notEqual:"\u2260",lessOrEqual:"\u2264",greaterOrEqual:"\u2265",identical:"\u2261",infinity:"\u221E",subscriptZero:"\u2080",subscriptOne:"\u2081",subscriptTwo:"\u2082",subscriptThree:"\u2083",subscriptFour:"\u2084",subscriptFive:"\u2085",subscriptSix:"\u2086",subscriptSeven:"\u2087",subscriptEight:"\u2088",subscriptNine:"\u2089",oneHalf:"\xBD",oneThird:"\u2153",oneQuarter:"\xBC",oneFifth:"\u2155",oneSixth:"\u2159",oneEighth:"\u215B",twoThirds:"\u2154",twoFifths:"\u2156",threeQuarters:"\xBE",threeFifths:"\u2157",threeEighths:"\u215C",fourFifths:"\u2158",fiveSixths:"\u215A",fiveEighths:"\u215D",sevenEighths:"\u215E",line:"\u2500",lineBold:"\u2501",lineDouble:"\u2550",lineDashed0:"\u2504",lineDashed1:"\u2505",lineDashed2:"\u2508",lineDashed3:"\u2509",lineDashed4:"\u254C",lineDashed5:"\u254D",lineDashed6:"\u2574",lineDashed7:"\u2576",lineDashed8:"\u2578",lineDashed9:"\u257A",lineDashed10:"\u257C",lineDashed11:"\u257E",lineDashed12:"\u2212",lineDashed13:"\u2013",lineDashed14:"\u2010",lineDashed15:"\u2043",lineVertical:"\u2502",lineVerticalBold:"\u2503",lineVerticalDouble:"\u2551",lineVerticalDashed0:"\u2506",lineVerticalDashed1:"\u2507",lineVerticalDashed2:"\u250A",lineVerticalDashed3:"\u250B",lineVerticalDashed4:"\u254E",lineVerticalDashed5:"\u254F",lineVerticalDashed6:"\u2575",lineVerticalDashed7:"\u2577",lineVerticalDashed8:"\u2579",lineVerticalDashed9:"\u257B",lineVerticalDashed10:"\u257D",lineVerticalDashed11:"\u257F",lineDownLeft:"\u2510",lineDownLeftArc:"\u256E",lineDownBoldLeftBold:"\u2513",lineDownBoldLeft:"\u2512",lineDownLeftBold:"\u2511",lineDownDoubleLeftDouble:"\u2557",lineDownDoubleLeft:"\u2556",lineDownLeftDouble:"\u2555",lineDownRight:"\u250C",lineDownRightArc:"\u256D",lineDownBoldRightBold:"\u250F",lineDownBoldRight:"\u250E",lineDownRightBold:"\u250D",lineDownDoubleRightDouble:"\u2554",lineDownDoubleRight:"\u2553",lineDownRightDouble:"\u2552",lineUpLeft:"\u2518",lineUpLeftArc:"\u256F",lineUpBoldLeftBold:"\u251B",lineUpBoldLeft:"\u251A",lineUpLeftBold:"\u2519",lineUpDoubleLeftDouble:"\u255D",lineUpDoubleLeft:"\u255C",lineUpLeftDouble:"\u255B",lineUpRight:"\u2514",lineUpRightArc:"\u2570",lineUpBoldRightBold:"\u2517",lineUpBoldRight:"\u2516",lineUpRightBold:"\u2515",lineUpDoubleRightDouble:"\u255A",lineUpDoubleRight:"\u2559",lineUpRightDouble:"\u2558",lineUpDownLeft:"\u2524",lineUpBoldDownBoldLeftBold:"\u252B",lineUpBoldDownBoldLeft:"\u2528",lineUpDownLeftBold:"\u2525",lineUpBoldDownLeftBold:"\u2529",lineUpDownBoldLeftBold:"\u252A",lineUpDownBoldLeft:"\u2527",lineUpBoldDownLeft:"\u2526",lineUpDoubleDownDoubleLeftDouble:"\u2563",lineUpDoubleDownDoubleLeft:"\u2562",lineUpDownLeftDouble:"\u2561",lineUpDownRight:"\u251C",lineUpBoldDownBoldRightBold:"\u2523",lineUpBoldDownBoldRight:"\u2520",lineUpDownRightBold:"\u251D",lineUpBoldDownRightBold:"\u2521",lineUpDownBoldRightBold:"\u2522",lineUpDownBoldRight:"\u251F",lineUpBoldDownRight:"\u251E",lineUpDoubleDownDoubleRightDouble:"\u2560",lineUpDoubleDownDoubleRight:"\u255F",lineUpDownRightDouble:"\u255E",lineDownLeftRight:"\u252C",lineDownBoldLeftBoldRightBold:"\u2533",lineDownLeftBoldRightBold:"\u252F",lineDownBoldLeftRight:"\u2530",lineDownBoldLeftBoldRight:"\u2531",lineDownBoldLeftRightBold:"\u2532",lineDownLeftRightBold:"\u252E",lineDownLeftBoldRight:"\u252D",lineDownDoubleLeftDoubleRightDouble:"\u2566",lineDownDoubleLeftRight:"\u2565",lineDownLeftDoubleRightDouble:"\u2564",lineUpLeftRight:"\u2534",lineUpBoldLeftBoldRightBold:"\u253B",lineUpLeftBoldRightBold:"\u2537",lineUpBoldLeftRight:"\u2538",lineUpBoldLeftBoldRight:"\u2539",lineUpBoldLeftRightBold:"\u253A",lineUpLeftRightBold:"\u2536",lineUpLeftBoldRight:"\u2535",lineUpDoubleLeftDoubleRightDouble:"\u2569",lineUpDoubleLeftRight:"\u2568",lineUpLeftDoubleRightDouble:"\u2567",lineUpDownLeftRight:"\u253C",lineUpBoldDownBoldLeftBoldRightBold:"\u254B",lineUpDownBoldLeftBoldRightBold:"\u2548",lineUpBoldDownLeftBoldRightBold:"\u2547",lineUpBoldDownBoldLeftRightBold:"\u254A",lineUpBoldDownBoldLeftBoldRight:"\u2549",lineUpBoldDownLeftRight:"\u2540",lineUpDownBoldLeftRight:"\u2541",lineUpDownLeftBoldRight:"\u253D",lineUpDownLeftRightBold:"\u253E",lineUpBoldDownBoldLeftRight:"\u2542",lineUpDownLeftBoldRightBold:"\u253F",lineUpBoldDownLeftBoldRight:"\u2543",lineUpBoldDownLeftRightBold:"\u2544",lineUpDownBoldLeftBoldRight:"\u2545",lineUpDownBoldLeftRightBold:"\u2546",lineUpDoubleDownDoubleLeftDoubleRightDouble:"\u256C",lineUpDoubleDownDoubleLeftRight:"\u256B",lineUpDownLeftDoubleRightDouble:"\u256A",lineCross:"\u2573",lineBackslash:"\u2572",lineSlash:"\u2571"},zc={tick:"\u2714",info:"\u2139",warning:"\u26A0",cross:"\u2718",squareSmall:"\u25FB",squareSmallFilled:"\u25FC",circle:"\u25EF",circleFilled:"\u25C9",circleDotted:"\u25CC",circleDouble:"\u25CE",circleCircle:"\u24DE",circleCross:"\u24E7",circlePipe:"\u24BE",radioOn:"\u25C9",radioOff:"\u25EF",checkboxOn:"\u2612",checkboxOff:"\u2610",checkboxCircleOn:"\u24E7",checkboxCircleOff:"\u24BE",pointer:"\u276F",triangleUpOutline:"\u25B3",triangleLeft:"\u25C0",triangleRight:"\u25B6",lozenge:"\u25C6",lozengeOutline:"\u25C7",hamburger:"\u2630",smiley:"\u32E1",mustache:"\u0DF4",star:"\u2605",play:"\u25B6",nodejs:"\u2B22",oneSeventh:"\u2150",oneNinth:"\u2151",oneTenth:"\u2152"},fS={tick:"\u221A",info:"i",warning:"\u203C",cross:"\xD7",squareSmall:"\u25A1",squareSmallFilled:"\u25A0",circle:"( )",circleFilled:"(*)",circleDotted:"( )",circleDouble:"( )",circleCircle:"(\u25CB)",circleCross:"(\xD7)",circlePipe:"(\u2502)",radioOn:"(*)",radioOff:"( )",checkboxOn:"[\xD7]",checkboxOff:"[ ]",checkboxCircleOn:"(\xD7)",checkboxCircleOff:"( )",pointer:">",triangleUpOutline:"\u2206",triangleLeft:"\u25C4",triangleRight:"\u25BA",lozenge:"\u2666",lozengeOutline:"\u25CA",hamburger:"\u2261",smiley:"\u263A",mustache:"\u250C\u2500\u2510",star:"\u2736",play:"\u25BA",nodejs:"\u2666",oneSeventh:"1/7",oneNinth:"1/9",oneTenth:"1/10"},pS={...Gc,...zc},dS={...Gc,...fS},hS=So(),mS=hS?pS:dS,yn=mS,BA=Object.entries(zc);var Wc=he(w("tty"),1),gS=Wc.default?.WriteStream?.prototype?.hasColors?.()??!1,q=(t,e)=>{if(!gS)return i=>i;let r=`\x1B[${t}m`,n=`\x1B[${e}m`;return i=>{let o=i+"",s=o.indexOf(n);if(s===-1)return r+o+n;let a=r,c=0;for(;s!==-1;)a+=o.slice(c,s)+r,c=s+n.length,s=o.indexOf(n,c);return a+=o.slice(c)+n,a}},GA=q(0,0),jc=q(1,22),zA=q(2,22),WA=q(3,23),jA=q(4,24),qA=q(53,55),YA=q(7,27),VA=q(8,28),KA=q(9,29),ZA=q(30,39),JA=q(31,39),XA=q(32,39),QA=q(33,39),_A=q(34,39),$A=q(35,39),ek=q(36,39),tk=q(37,39),Sn=q(90,39),rk=q(40,49),nk=q(41,49),ik=q(42,49),ok=q(43,49),sk=q(44,49),ak=q(45,49),ck=q(46,49),lk=q(47,49),uk=q(100,49),qc=q(91,39),fk=q(92,39),Yc=q(93,39),pk=q(94,39),dk=q(95,39),hk=q(96,39),mk=q(97,39),gk=q(101,49),yk=q(102,49),Sk=q(103,49),bk=q(104,49),wk=q(105,49),Ek=q(106,49),Pk=q(107,49);var Zc=({type:t,message:e,timestamp:r,piped:n,commandId:i,result:{failed:o=!1}={},options:{reject:s=!0}})=>{let a=yS(r),c=SS[t]({failed:o,reject:s,piped:n}),l=bS[t]({reject:s});return`${Sn(`[${a}]`)} ${Sn(`[${i}]`)} ${l(c)} ${l(e)}`},yS=t=>`${bn(t.getHours(),2)}:${bn(t.getMinutes(),2)}:${bn(t.getSeconds(),2)}.${bn(t.getMilliseconds(),3)}`,bn=(t,e)=>String(t).padStart(e,"0"),Vc=({failed:t,reject:e})=>t?e?yn.cross:yn.warning:yn.tick,SS={command:({piped:t})=>t?"|":"$",output:()=>" ",ipc:()=>"*",error:Vc,duration:Vc},Kc=t=>t,bS={command:()=>jc,output:()=>Kc,ipc:()=>Kc,error:({reject:t})=>t?qc:Yc,duration:()=>Sn};var Jc=(t,e,r)=>{let n=Fc(e,r);return t.map(({verboseLine:i,verboseObject:o})=>wS(i,o,n)).filter(i=>i!==void 0).map(i=>ES(i)).join("")},wS=(t,e,r)=>{if(r===void 0)return t;let n=r(t,e);if(typeof n=="string")return n},ES=t=>t.endsWith(`
`)?t:`${t}
`;var We=({type:t,verboseMessage:e,fdNumber:r,verboseInfo:n,result:i})=>{let o=PS({type:t,result:i,verboseInfo:n}),s=xS(e,o),a=Jc(s,n,r);(0,Xc.writeFileSync)(TS,a)},PS=({type:t,result:e,verboseInfo:{escapedCommand:r,commandId:n,rawOptions:{piped:i=!1,...o}}})=>({type:t,escapedCommand:r,commandId:`${n}`,timestamp:new Date,piped:i,result:e,options:o}),xS=(t,e)=>t.split(`
`).map(r=>RS({...e,message:r})),RS=t=>({verboseLine:Zc(t),verboseObject:t}),TS=2,wn=t=>{let e=typeof t=="string"?t:(0,Qc.inspect)(t);return Er(e).replaceAll("	"," ".repeat(AS))},AS=2;var _c=(t,e)=>{!zt(e)||We({type:"command",verboseMessage:t,verboseInfo:e})};var $c=(t,e,r)=>{OS(t);let n=kS(t);return{verbose:t,escapedCommand:e,commandId:n,rawOptions:r}},kS=t=>zt({verbose:t})?LS++:void 0,LS=0n,OS=t=>{for(let e of t){if(e===!1)throw new TypeError(`The "verbose: false" option was renamed to "verbose: 'none'".`);if(e===!0)throw new TypeError(`The "verbose: true" option was renamed to "verbose: 'short'".`);if(!gn.includes(e)&&!mn(e)){let r=gn.map(n=>`'${n}'`).join(", ");throw new TypeError(`The "verbose" option must not be ${e}. Allowed values are: ${r} or a function.`)}}};var bo=w("process"),En=()=>bo.hrtime.bigint(),wo=t=>Number(bo.hrtime.bigint()-t)/1e6;var Pn=(t,e,r)=>{let n=En(),{command:i,escapedCommand:o}=Bc(t,e),s=ho(r,"verbose"),a=$c(s,o,{...r});return _c(o,a),{command:i,escapedCommand:o,startTime:n,verboseInfo:a}};var ff=w("path"),Wo=he(w("process"),1),pf=he(zl(),1);var Pr=he(w("process"),1),Yt=he(w("path"),1),Io=w("url");function Rn(t={}){let{env:e=process.env,platform:r=process.platform}=t;return r!=="win32"?"PATH":Object.keys(e).reverse().find(n=>n.toUpperCase()==="PATH")||"Path"}var rb=({cwd:t=Pr.default.cwd(),path:e=Pr.default.env[Rn()],preferLocal:r=!0,execPath:n=Pr.default.execPath,addExecPath:i=!0}={})=>{let o=t instanceof URL?(0,Io.fileURLToPath)(t):t,s=Yt.default.resolve(o),a=[];return r&&nb(a,s),i&&ib(a,n,s),[...a,e].join(Yt.default.delimiter)},nb=(t,e)=>{let r;for(;r!==e;)t.push(Yt.default.join(e,"node_modules/.bin")),r=e,e=Yt.default.resolve(e,"..")},ib=(t,e,r)=>{let n=e instanceof URL?(0,Io.fileURLToPath)(e):e;t.push(Yt.default.resolve(r,n,".."))},Wl=({env:t=Pr.default.env,...e}={})=>{t={...t};let r=Rn({env:t});return e.path=t[r],t[r]=rb(e),t};var iu=w("timers/promises");var jl=(t,e,r)=>{let n=r?Rr:xr,i=t instanceof Me?{}:{cause:t};return new n(e,i)},Me=class extends Error{},ql=(t,e)=>{Object.defineProperty(t.prototype,"name",{value:e,writable:!0,enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,Vl,{value:!0,writable:!1,enumerable:!1,configurable:!1})},Yl=t=>Tn(t)&&Vl in t,Vl=Symbol("isExecaError"),Tn=t=>Object.prototype.toString.call(t)==="[object Error]",xr=class extends Error{};ql(xr,xr.name);var Rr=class extends Error{};ql(Rr,Rr.name);var Vt=w("os");var _l=w("os");var Kl=()=>{let t=Jl-Zl+1;return Array.from({length:t},ob)},ob=(t,e)=>({name:`SIGRT${e+1}`,number:Zl+e,action:"terminate",description:"Application-specific signal (realtime)",standard:"posix"}),Zl=34,Jl=64;var Ql=w("os");var Xl=[{name:"SIGHUP",number:1,action:"terminate",description:"Terminal closed",standard:"posix"},{name:"SIGINT",number:2,action:"terminate",description:"User interruption with CTRL-C",standard:"ansi"},{name:"SIGQUIT",number:3,action:"core",description:"User interruption with CTRL-\\",standard:"posix"},{name:"SIGILL",number:4,action:"core",description:"Invalid machine instruction",standard:"ansi"},{name:"SIGTRAP",number:5,action:"core",description:"Debugger breakpoint",standard:"posix"},{name:"SIGABRT",number:6,action:"core",description:"Aborted",standard:"ansi"},{name:"SIGIOT",number:6,action:"core",description:"Aborted",standard:"bsd"},{name:"SIGBUS",number:7,action:"core",description:"Bus error due to misaligned, non-existing address or paging error",standard:"bsd"},{name:"SIGEMT",number:7,action:"terminate",description:"Command should be emulated but is not implemented",standard:"other"},{name:"SIGFPE",number:8,action:"core",description:"Floating point arithmetic error",standard:"ansi"},{name:"SIGKILL",number:9,action:"terminate",description:"Forced termination",standard:"posix",forced:!0},{name:"SIGUSR1",number:10,action:"terminate",description:"Application-specific signal",standard:"posix"},{name:"SIGSEGV",number:11,action:"core",description:"Segmentation fault",standard:"ansi"},{name:"SIGUSR2",number:12,action:"terminate",description:"Application-specific signal",standard:"posix"},{name:"SIGPIPE",number:13,action:"terminate",description:"Broken pipe or socket",standard:"posix"},{name:"SIGALRM",number:14,action:"terminate",description:"Timeout or timer",standard:"posix"},{name:"SIGTERM",number:15,action:"terminate",description:"Termination",standard:"ansi"},{name:"SIGSTKFLT",number:16,action:"terminate",description:"Stack is empty or overflowed",standard:"other"},{name:"SIGCHLD",number:17,action:"ignore",description:"Child process terminated, paused or unpaused",standard:"posix"},{name:"SIGCLD",number:17,action:"ignore",description:"Child process terminated, paused or unpaused",standard:"other"},{name:"SIGCONT",number:18,action:"unpause",description:"Unpaused",standard:"posix",forced:!0},{name:"SIGSTOP",number:19,action:"pause",description:"Paused",standard:"posix",forced:!0},{name:"SIGTSTP",number:20,action:"pause",description:'Paused using CTRL-Z or "suspend"',standard:"posix"},{name:"SIGTTIN",number:21,action:"pause",description:"Background process cannot read terminal input",standard:"posix"},{name:"SIGBREAK",number:21,action:"terminate",description:"User interruption with CTRL-BREAK",standard:"other"},{name:"SIGTTOU",number:22,action:"pause",description:"Background process cannot write to terminal output",standard:"posix"},{name:"SIGURG",number:23,action:"ignore",description:"Socket received out-of-band data",standard:"bsd"},{name:"SIGXCPU",number:24,action:"core",description:"Process timed out",standard:"bsd"},{name:"SIGXFSZ",number:25,action:"core",description:"File too big",standard:"bsd"},{name:"SIGVTALRM",number:26,action:"terminate",description:"Timeout or timer",standard:"bsd"},{name:"SIGPROF",number:27,action:"terminate",description:"Timeout or timer",standard:"bsd"},{name:"SIGWINCH",number:28,action:"ignore",description:"Terminal window size changed",standard:"bsd"},{name:"SIGIO",number:29,action:"terminate",description:"I/O is available",standard:"other"},{name:"SIGPOLL",number:29,action:"terminate",description:"Watched event",standard:"other"},{name:"SIGINFO",number:29,action:"ignore",description:"Request for process information",standard:"other"},{name:"SIGPWR",number:30,action:"terminate",description:"Device running out of power",standard:"systemv"},{name:"SIGSYS",number:31,action:"core",description:"Invalid system call",standard:"other"},{name:"SIGUNUSED",number:31,action:"terminate",description:"Invalid system call",standard:"other"}];var No=()=>{let t=Kl();return[...Xl,...t].map(sb)},sb=({name:t,number:e,description:r,action:n,forced:i=!1,standard:o})=>{let{signals:{[t]:s}}=Ql.constants,a=s!==void 0;return{name:t,number:a?s:e,description:r,supported:a,action:n,forced:i,standard:o}};var ab=()=>{let t=No();return Object.fromEntries(t.map(cb))},cb=({name:t,number:e,description:r,supported:n,action:i,forced:o,standard:s})=>[t,{name:t,number:e,description:r,supported:n,action:i,forced:o,standard:s}],$l=ab(),lb=()=>{let t=No(),e=64+1,r=Array.from({length:e},(n,i)=>ub(i,t));return Object.assign({},...r)},ub=(t,e)=>{let r=fb(t,e);if(r===void 0)return{};let{name:n,description:i,supported:o,action:s,forced:a,standard:c}=r;return{[t]:{name:n,number:t,description:i,supported:o,action:s,forced:a,standard:c}}},fb=(t,e)=>{let r=e.find(({name:n})=>_l.constants.signals[n]===t);return r!==void 0?r:e.find(n=>n.number===t)},mL=lb();var tu=t=>{let e="option `killSignal`";if(t===0)throw new TypeError(`Invalid ${e}: 0 cannot be used.`);return nu(t,e)},ru=t=>t===0?t:nu(t,"`subprocess.kill()`'s argument"),nu=(t,e)=>{if(Number.isInteger(t))return pb(t,e);if(typeof t=="string")return hb(t,e);throw new TypeError(`Invalid ${e} ${String(t)}: it must be a string or an integer.
${Do()}`)},pb=(t,e)=>{if(eu.has(t))return eu.get(t);throw new TypeError(`Invalid ${e} ${t}: this signal integer does not exist.
${Do()}`)},db=()=>new Map(Object.entries(Vt.constants.signals).reverse().map(([t,e])=>[e,t])),eu=db(),hb=(t,e)=>{if(t in Vt.constants.signals)return t;throw t.toUpperCase()in Vt.constants.signals?new TypeError(`Invalid ${e} '${t}': please rename it to '${t.toUpperCase()}'.`):new TypeError(`Invalid ${e} '${t}': this signal name does not exist.
${Do()}`)},Do=()=>`Available signal names: ${mb()}.
Available signal numbers: ${gb()}.`,mb=()=>Object.keys(Vt.constants.signals).sort().map(t=>`'${t}'`).join(", "),gb=()=>[...new Set(Object.values(Vt.constants.signals).sort((t,e)=>t-e))].join(", "),An=t=>$l[t].description;var ou=t=>{if(t===!1)return t;if(t===!0)return yb;if(!Number.isFinite(t)||t<0)throw new TypeError(`Expected the \`forceKillAfterDelay\` option to be a non-negative integer, got \`${t}\` (${typeof t})`);return t},yb=1e3*5,su=({kill:t,options:{forceKillAfterDelay:e,killSignal:r},onInternalError:n,context:i,controller:o},s,a)=>{let{signal:c,error:l}=Sb(s,a,r);bb(l,n);let f=t(c);return wb({kill:t,signal:c,forceKillAfterDelay:e,killSignal:r,killResult:f,context:i,controller:o}),f},Sb=(t,e,r)=>{let[n=r,i]=Tn(t)?[void 0,t]:[t,e];if(typeof n!="string"&&!Number.isInteger(n))throw new TypeError(`The first argument must be an error instance or a signal name string/integer: ${String(n)}`);if(i!==void 0&&!Tn(i))throw new TypeError(`The second argument is optional. If specified, it must be an error instance: ${i}`);return{signal:ru(n),error:i}},bb=(t,e)=>{t!==void 0&&e.reject(t)},wb=async({kill:t,signal:e,forceKillAfterDelay:r,killSignal:n,killResult:i,context:o,controller:s})=>{e===n&&i&&Co({kill:t,forceKillAfterDelay:r,context:o,controllerSignal:s.signal})},Co=async({kill:t,forceKillAfterDelay:e,context:r,controllerSignal:n})=>{if(e!==!1)try{await(0,iu.setTimeout)(e,void 0,{signal:n}),t("SIGKILL")&&(r.isForcefullyTerminated??=!0)}catch{}};var au=w("events"),kn=async(t,e)=>{t.aborted||await(0,au.once)(t,"abort",{signal:e})};var cu=({cancelSignal:t})=>{if(t!==void 0&&Object.prototype.toString.call(t)!=="[object AbortSignal]")throw new Error(`The \`cancelSignal\` option must be an AbortSignal: ${String(t)}`)},lu=({subprocess:t,cancelSignal:e,gracefulCancel:r,context:n,controller:i})=>e===void 0||r?[]:[Eb(t,e,n,i)],Eb=async(t,e,r,{signal:n})=>{throw await kn(e,n),r.terminationReason??="cancel",t.kill(),e.reason};var Wu=w("timers/promises");var Gu=w("util");var Kt=({methodName:t,isSubprocess:e,ipc:r,isConnected:n})=>{Pb(t,e,r),vo(t,e,n)},Pb=(t,e,r)=>{if(!r)throw new Error(`${Ue(t,e)} can only be used if the \`ipc\` option is \`true\`.`)},vo=(t,e,r)=>{if(!r)throw new Error(`${Ue(t,e)} cannot be used: the ${ot(e)} has already exited or disconnected.`)},uu=t=>{throw new Error(`${Ue("getOneMessage",t)} could not complete: the ${ot(t)} exited or disconnected.`)},fu=t=>{throw new Error(`${Ue("sendMessage",t)} failed: the ${ot(t)} is sending a message too, instead of listening to incoming messages.
This can be fixed by both sending a message and listening to incoming messages at the same time:

const [receivedMessage] = await Promise.all([
	${Ue("getOneMessage",t)},
	${Ue("sendMessage",t,"message, {strict: true}")},
]);`)},Ln=(t,e)=>new Error(`${Ue("sendMessage",e)} failed when sending an acknowledgment response to the ${ot(e)}.`,{cause:t}),pu=t=>{throw new Error(`${Ue("sendMessage",t)} failed: the ${ot(t)} is not listening to incoming messages.`)},du=t=>{throw new Error(`${Ue("sendMessage",t)} failed: the ${ot(t)} exited without listening to incoming messages.`)},hu=()=>new Error(`\`cancelSignal\` aborted: the ${ot(!0)} disconnected.`),mu=()=>{throw new Error("`getCancelSignal()` cannot be used without setting the `cancelSignal` subprocess option.")},gu=({error:t,methodName:e,isSubprocess:r})=>{if(t.code==="EPIPE")throw new Error(`${Ue(e,r)} cannot be used: the ${ot(r)} is disconnecting.`,{cause:t})},yu=({error:t,methodName:e,isSubprocess:r,message:n})=>{if(xb(t))throw new Error(`${Ue(e,r)}'s argument type is invalid: the message cannot be serialized: ${String(n)}.`,{cause:t})},xb=({code:t,message:e})=>Rb.has(t)||Tb.some(r=>e.includes(r)),Rb=new Set(["ERR_MISSING_ARGS","ERR_INVALID_ARG_TYPE"]),Tb=["could not be cloned","circular structure","call stack size exceeded"],Ue=(t,e,r="")=>t==="cancelSignal"?"`cancelSignal`'s `controller.abort()`":`${Ab(e)}${t}(${r})`,Ab=t=>t?"":"subprocess.",ot=t=>t?"parent process":"subprocess",Zt=t=>{t.connected&&t.disconnect()};var je=()=>{let t={},e=new Promise((r,n)=>{Object.assign(t,{resolve:r,reject:n})});return Object.assign(e,t)};var In=(t,e="stdin")=>{let{options:n,fileDescriptors:i}=qe.get(t),o=Su(i,e,!0),s=t.stdio[o];if(s===null)throw new TypeError(bu(o,e,n,!0));return s},Jt=(t,e="stdout")=>{let{options:n,fileDescriptors:i}=qe.get(t),o=Su(i,e,!1),s=o==="all"?t.all:t.stdio[o];if(s==null)throw new TypeError(bu(o,e,n,!1));return s},qe=new WeakMap,Su=(t,e,r)=>{let n=kb(e,r);return Lb(n,e,r,t),n},kb=(t,e)=>{let r=mo(t);if(r!==void 0)return r;let{validOptions:n,defaultValue:i}=e?{validOptions:'"stdin"',defaultValue:"stdin"}:{validOptions:'"stdout", "stderr", "all"',defaultValue:"stdout"};throw new TypeError(`"${Tr(e)}" must not be "${t}".
It must be ${n} or "fd3", "fd4" (and so on).
It is optional and defaults to "${i}".`)},Lb=(t,e,r,n)=>{let i=n[wu(t)];if(i===void 0)throw new TypeError(`"${Tr(r)}" must not be ${e}. That file descriptor does not exist.
Please set the "stdio" option to ensure that file descriptor exists.`);if(i.direction==="input"&&!r)throw new TypeError(`"${Tr(r)}" must not be ${e}. It must be a readable stream, not writable.`);if(i.direction!=="input"&&r)throw new TypeError(`"${Tr(r)}" must not be ${e}. It must be a writable stream, not readable.`)},bu=(t,e,r,n)=>{if(t==="all"&&!r.all)return`The "all" option must be true to use "from: 'all'".`;let{optionName:i,optionValue:o}=Ob(t,r);return`The "${i}: ${On(o)}" option is incompatible with using "${Tr(n)}: ${On(e)}".
Please set this option with "pipe" instead.`},Ob=(t,{stdin:e,stdout:r,stderr:n,stdio:i})=>{let o=wu(t);return o===0&&e!==void 0?{optionName:"stdin",optionValue:e}:o===1&&r!==void 0?{optionName:"stdout",optionValue:r}:o===2&&n!==void 0?{optionName:"stderr",optionValue:n}:{optionName:`stdio[${o}]`,optionValue:i[o]}},wu=t=>t==="all"?1:t,Tr=t=>t?"to":"from",On=t=>typeof t=="string"?`'${t}'`:typeof t=="number"?`${t}`:"Stream";var Cu=w("events");var Eu=w("events"),bt=(t,e,r)=>{let n=t.getMaxListeners();n===0||n===Number.POSITIVE_INFINITY||(t.setMaxListeners(n+e),(0,Eu.addAbortListener)(r,()=>{t.setMaxListeners(t.getMaxListeners()-e)}))};var Du=w("events");var Ru=w("events"),Tu=w("timers/promises");var Nn=(t,e)=>{e&&Fo(t)},Fo=t=>{t.refCounted()},Dn=(t,e)=>{e&&Mo(t)},Mo=t=>{t.unrefCounted()},Pu=(t,e)=>{e&&(Mo(t),Mo(t))},xu=(t,e)=>{e&&(Fo(t),Fo(t))};var Au=async({anyProcess:t,channel:e,isSubprocess:r,ipcEmitter:n},i)=>{if(Ou(i)||Nu(i))return;Cn.has(t)||Cn.set(t,[]);let o=Cn.get(t);if(o.push(i),!(o.length>1))for(;o.length>0;){await Iu(t,n,i),await Tu.scheduler.yield();let s=await Lu({wrappedMessage:o[0],anyProcess:t,channel:e,isSubprocess:r,ipcEmitter:n});o.shift(),n.emit("message",s),n.emit("message:done")}},ku=async({anyProcess:t,channel:e,isSubprocess:r,ipcEmitter:n,boundOnMessage:i})=>{Uo();let o=Cn.get(t);for(;o?.length>0;)await(0,Ru.once)(n,"message:done");t.removeListener("message",i),xu(e,r),n.connected=!1,n.emit("disconnect")},Cn=new WeakMap;var st=(t,e,r)=>{if(vn.has(t))return vn.get(t);let n=new Du.EventEmitter;return n.connected=!0,vn.set(t,n),Ib({ipcEmitter:n,anyProcess:t,channel:e,isSubprocess:r}),n},vn=new WeakMap,Ib=({ipcEmitter:t,anyProcess:e,channel:r,isSubprocess:n})=>{let i=Au.bind(void 0,{anyProcess:e,channel:r,isSubprocess:n,ipcEmitter:t});e.on("message",i),e.once("disconnect",ku.bind(void 0,{anyProcess:e,channel:r,isSubprocess:n,ipcEmitter:t,boundOnMessage:i})),Pu(r,n)},Fn=t=>{let e=vn.get(t);return e===void 0?t.channel!==null:e.connected};var vu=({anyProcess:t,channel:e,isSubprocess:r,message:n,strict:i})=>{if(!i)return n;let o=st(t,e,r),s=Bn(t,o);return{id:Nb++,type:Un,message:n,hasListeners:s}},Nb=0n,Fu=(t,e)=>{if(!(e?.type!==Un||e.hasListeners))for(let{id:r}of t)r!==void 0&&Mn[r].resolve({isDeadlock:!0,hasListeners:!1})},Lu=async({wrappedMessage:t,anyProcess:e,channel:r,isSubprocess:n,ipcEmitter:i})=>{if(t?.type!==Un||!e.connected)return t;let{id:o,message:s}=t,a={id:o,type:Uu,message:Bn(e,i)};try{await Hn({anyProcess:e,channel:r,isSubprocess:n,ipc:!0},a)}catch(c){i.emit("strict:error",c)}return s},Ou=t=>{if(t?.type!==Uu)return!1;let{id:e,message:r}=t;return Mn[e]?.resolve({isDeadlock:!1,hasListeners:r}),!0},Mu=async(t,e,r)=>{if(t?.type!==Un)return;let n=je();Mn[t.id]=n;let i=new AbortController;try{let{isDeadlock:o,hasListeners:s}=await Promise.race([n,Db(e,r,i)]);o&&fu(r),s||pu(r)}finally{i.abort(),delete Mn[t.id]}},Mn={},Db=async(t,e,{signal:r})=>{bt(t,1,r),await(0,Cu.once)(t,"disconnect",{signal:r}),du(e)},Un="execa:ipc:request",Uu="execa:ipc:response";var Bu=(t,e,r)=>{Ar.has(t)||Ar.set(t,new Set);let n=Ar.get(t),i=je(),o=r?e.id:void 0,s={onMessageSent:i,id:o};return n.add(s),{outgoingMessages:n,outgoingMessage:s}},Hu=({outgoingMessages:t,outgoingMessage:e})=>{t.delete(e),e.onMessageSent.resolve()},Iu=async(t,e,r)=>{for(;!Bn(t,e)&&Ar.get(t)?.size>0;){let n=[...Ar.get(t)];Fu(n,r),await Promise.all(n.map(({onMessageSent:i})=>i))}},Ar=new WeakMap,Bn=(t,e)=>e.listenerCount("message")>Cb(t),Cb=t=>qe.has(t)&&!_e(qe.get(t).options.buffer,"ipc")?1:0;var Hn=({anyProcess:t,channel:e,isSubprocess:r,ipc:n},i,{strict:o=!1}={})=>{let s="sendMessage";return Kt({methodName:s,isSubprocess:r,ipc:n,isConnected:t.connected}),vb({anyProcess:t,channel:e,methodName:s,isSubprocess:r,message:i,strict:o})},vb=async({anyProcess:t,channel:e,methodName:r,isSubprocess:n,message:i,strict:o})=>{let s=vu({anyProcess:t,channel:e,isSubprocess:n,message:i,strict:o}),a=Bu(t,s,o);try{await Ho({anyProcess:t,methodName:r,isSubprocess:n,wrappedMessage:s,message:i})}catch(c){throw Zt(t),c}finally{Hu(a)}},Ho=async({anyProcess:t,methodName:e,isSubprocess:r,wrappedMessage:n,message:i})=>{let o=Fb(t);try{await Promise.all([Mu(n,t,r),o(n)])}catch(s){throw gu({error:s,methodName:e,isSubprocess:r}),yu({error:s,methodName:e,isSubprocess:r,message:i}),s}},Fb=t=>{if(Bo.has(t))return Bo.get(t);let e=(0,Gu.promisify)(t.send.bind(t));return Bo.set(t,e),e},Bo=new WeakMap;var ju=(t,e)=>{let r="cancelSignal";return vo(r,!1,t.connected),Ho({anyProcess:t,methodName:r,isSubprocess:!1,wrappedMessage:{type:Yu,message:e},message:e})},qu=async({anyProcess:t,channel:e,isSubprocess:r,ipc:n})=>(await Mb({anyProcess:t,channel:e,isSubprocess:r,ipc:n}),Go.signal),Mb=async({anyProcess:t,channel:e,isSubprocess:r,ipc:n})=>{if(!zu){if(zu=!0,!n){mu();return}if(e===null){Uo();return}st(t,e,r),await Wu.scheduler.yield()}},zu=!1,Nu=t=>t?.type!==Yu?!1:(Go.abort(t.message),!0),Yu="execa:ipc:cancel",Uo=()=>{Go.abort(hu())},Go=new AbortController;var Vu=({gracefulCancel:t,cancelSignal:e,ipc:r,serialization:n})=>{if(!!t){if(e===void 0)throw new Error("The `cancelSignal` option must be defined when setting the `gracefulCancel` option.");if(!r)throw new Error("The `ipc` option cannot be false when setting the `gracefulCancel` option.");if(n==="json")throw new Error("The `serialization` option cannot be 'json' when setting the `gracefulCancel` option.")}},Ku=({subprocess:t,cancelSignal:e,gracefulCancel:r,forceKillAfterDelay:n,context:i,controller:o})=>r?[Ub({subprocess:t,cancelSignal:e,forceKillAfterDelay:n,context:i,controller:o})]:[],Ub=async({subprocess:t,cancelSignal:e,forceKillAfterDelay:r,context:n,controller:{signal:i}})=>{await kn(e,i);let o=Bb(e);throw await ju(t,o),Co({kill:t.kill,forceKillAfterDelay:r,context:n,controllerSignal:i}),n.terminationReason??="gracefulCancel",e.reason},Bb=({reason:t})=>{if(!(t instanceof DOMException))return t;let e=new Error(t.message);return Object.defineProperty(e,"stack",{value:t.stack,enumerable:!1,configurable:!0,writable:!0}),e};var Zu=w("timers/promises");var Ju=({timeout:t})=>{if(t!==void 0&&(!Number.isFinite(t)||t<0))throw new TypeError(`Expected the \`timeout\` option to be a non-negative integer, got \`${t}\` (${typeof t})`)},Xu=(t,e,r,n)=>e===0||e===void 0?[]:[Hb(t,e,r,n)],Hb=async(t,e,r,{signal:n})=>{throw await(0,Zu.setTimeout)(e,void 0,{signal:n}),r.terminationReason??="timeout",t.kill(),new Me};var Gn=w("process"),zn=w("path");var Qu=({options:t})=>{if(t.node===!1)throw new TypeError('The "node" option cannot be false with `execaNode()`.');return{options:{...t,node:!0}}},_u=(t,e,{node:r=!1,nodePath:n=Gn.execPath,nodeOptions:i=Gn.execArgv.filter(c=>!c.startsWith("--inspect")),cwd:o,execPath:s,...a})=>{if(s!==void 0)throw new TypeError('The "execPath" option has been removed. Please use the "nodePath" option instead.');let c=Gt(n,'The "nodePath" option'),l=(0,zn.resolve)(o,c),f={...a,nodePath:l,node:r,cwd:o};if(!r)return[t,e,f];if((0,zn.basename)(t,".exe")==="node")throw new TypeError('When the "node" option is true, the first argument does not need to be "node".');return[l,[...i,t,...e],{ipc:!0,...f,shell:!1}]};var $u=w("v8"),ef=({ipcInput:t,ipc:e,serialization:r})=>{if(t!==void 0){if(!e)throw new Error("The `ipcInput` option cannot be set unless the `ipc` option is `true`.");Wb[r](t)}},Gb=t=>{try{(0,$u.serialize)(t)}catch(e){throw new Error("The `ipcInput` option is not serializable with a structured clone.",{cause:e})}},zb=t=>{try{JSON.stringify(t)}catch(e){throw new Error("The `ipcInput` option is not serializable with JSON.",{cause:e})}},Wb={advanced:Gb,json:zb},tf=async(t,e)=>{e!==void 0&&await t.sendMessage(e)};var nf=({encoding:t})=>{if(zo.has(t))return;let e=qb(t);if(e!==void 0)throw new TypeError(`Invalid option \`encoding: ${Wn(t)}\`.
Please rename it to ${Wn(e)}.`);let r=[...zo].map(n=>Wn(n)).join(", ");throw new TypeError(`Invalid option \`encoding: ${Wn(t)}\`.
Please rename it to one of: ${r}.`)},jb=new Set(["utf8","utf16le"]),xe=new Set(["buffer","hex","base64","base64url","latin1","ascii"]),zo=new Set([...jb,...xe]),qb=t=>{if(t===null)return"buffer";if(typeof t!="string")return;let e=t.toLowerCase();if(e in rf)return rf[e];if(zo.has(e))return e},rf={"utf-8":"utf8","utf-16le":"utf16le","ucs-2":"utf16le",ucs2:"utf16le",binary:"latin1"},Wn=t=>typeof t=="string"?`"${t}"`:String(t);var of=w("fs"),sf=w("path"),af=he(w("process"),1);var cf=(t=lf())=>{let e=Gt(t,'The "cwd" option');return(0,sf.resolve)(e)},lf=()=>{try{return af.default.cwd()}catch(t){throw t.message=`The current directory does not exist.
${t.message}`,t}},uf=(t,e)=>{if(e===lf())return t;let r;try{r=(0,of.statSync)(e)}catch(n){return`The "cwd" option is invalid: ${e}.
${n.message}
${t}`}return r.isDirectory()?t:`The "cwd" option is not a directory: ${e}.
${t}`};var jn=(t,e,r)=>{r.cwd=cf(r.cwd);let[n,i,o]=_u(t,e,r),{command:s,args:a,options:c}=pf.default._parse(n,i,o),l=vc(c),f=Yb(l);return Ju(f),nf(f),ef(f),cu(f),Vu(f),f.shell=fo(f.shell),f.env=Vb(f),f.killSignal=tu(f.killSignal),f.forceKillAfterDelay=ou(f.forceKillAfterDelay),f.lines=f.lines.map((u,p)=>u&&!xe.has(f.encoding)&&f.buffer[p]),Wo.default.platform==="win32"&&(0,ff.basename)(s,".exe")==="cmd"&&a.unshift("/q"),{file:s,commandArguments:a,options:f}},Yb=({extendEnv:t=!0,preferLocal:e=!1,cwd:r,localDir:n=r,encoding:i="utf8",reject:o=!0,cleanup:s=!0,all:a=!1,windowsHide:c=!0,killSignal:l="SIGTERM",forceKillAfterDelay:f=!0,gracefulCancel:u=!1,ipcInput:p,ipc:d=p!==void 0||u,serialization:m="advanced",...g})=>({...g,extendEnv:t,preferLocal:e,cwd:r,localDirectory:n,encoding:i,reject:o,cleanup:s,all:a,windowsHide:c,killSignal:l,forceKillAfterDelay:f,gracefulCancel:u,ipcInput:p,ipc:d,serialization:m}),Vb=({env:t,extendEnv:e,preferLocal:r,node:n,localDirectory:i,nodePath:o})=>{let s=e?{...Wo.default.env,...t}:t;return r||n?Wl({env:s,cwd:i,execPath:o,preferLocal:r,addExecPath:n}):s};var vf=w("util");function Xt(t){if(typeof t=="string")return Kb(t);if(!(ArrayBuffer.isView(t)&&t.BYTES_PER_ELEMENT===1))throw new Error("Input must be a string or a Uint8Array");return Zb(t)}var Kb=t=>t.at(-1)===df?t.slice(0,t.at(-2)===hf?-2:-1):t,Zb=t=>t.at(-1)===Jb?t.subarray(0,t.at(-2)===Xb?-2:-1):t,df=`
`,Jb=df.codePointAt(0),hf="\r",Xb=hf.codePointAt(0);var Af=w("events"),kf=w("stream/promises");function Be(t,{checkOpen:e=!0}={}){return t!==null&&typeof t=="object"&&(t.writable||t.readable||!e||t.writable===void 0&&t.readable===void 0)&&typeof t.pipe=="function"}function jo(t,{checkOpen:e=!0}={}){return Be(t,{checkOpen:e})&&(t.writable||!e)&&typeof t.write=="function"&&typeof t.end=="function"&&typeof t.writable=="boolean"&&typeof t.writableObjectMode=="boolean"&&typeof t.destroy=="function"&&typeof t.destroyed=="boolean"}function wt(t,{checkOpen:e=!0}={}){return Be(t,{checkOpen:e})&&(t.readable||!e)&&typeof t.read=="function"&&typeof t.readable=="boolean"&&typeof t.readableObjectMode=="boolean"&&typeof t.destroy=="function"&&typeof t.destroyed=="boolean"}function qo(t,e){return jo(t,e)&&wt(t,e)}var Qb=Object.getPrototypeOf(Object.getPrototypeOf(async function*(){}).prototype),Yo=class{#t;#r;#e=!1;#n=void 0;constructor(e,r){this.#t=e,this.#r=r}next(){let e=()=>this.#o();return this.#n=this.#n?this.#n.then(e,e):e(),this.#n}return(e){let r=()=>this.#i(e);return this.#n?this.#n.then(r,r):r()}async#o(){if(this.#e)return{done:!0,value:void 0};let e;try{e=await this.#t.read()}catch(r){throw this.#n=void 0,this.#e=!0,this.#t.releaseLock(),r}return e.done&&(this.#n=void 0,this.#e=!0,this.#t.releaseLock()),e}async#i(e){if(this.#e)return{done:!0,value:e};if(this.#e=!0,!this.#r){let r=this.#t.cancel(e);return this.#t.releaseLock(),await r,{done:!0,value:e}}return this.#t.releaseLock(),{done:!0,value:e}}},Vo=Symbol();function mf(){return this[Vo].next()}Object.defineProperty(mf,"name",{value:"next"});function gf(t){return this[Vo].return(t)}Object.defineProperty(gf,"name",{value:"return"});var _b=Object.create(Qb,{next:{enumerable:!0,configurable:!0,writable:!0,value:mf},return:{enumerable:!0,configurable:!0,writable:!0,value:gf}});function Ko({preventCancel:t=!1}={}){let e=this.getReader(),r=new Yo(e,t),n=Object.create(_b);return n[Vo]=r,n}var yf=t=>{if(wt(t,{checkOpen:!1})&&kr.on!==void 0)return ew(t);if(typeof t?.[Symbol.asyncIterator]=="function")return t;if($b.call(t)==="[object ReadableStream]")return Ko.call(t);throw new TypeError("The first argument must be a Readable, a ReadableStream, or an async iterable.")},{toString:$b}=Object.prototype,ew=async function*(t){let e=new AbortController,r={};tw(t,e,r);try{for await(let[n]of kr.on(t,"data",{signal:e.signal}))yield n}catch(n){if(r.error!==void 0)throw r.error;if(!e.signal.aborted)throw n}finally{t.destroy()}},tw=async(t,e,r)=>{try{await kr.finished(t,{cleanup:!0,readable:!0,writable:!1,error:!1})}catch(n){r.error=n}finally{e.abort()}},kr={};var Qt=async(t,{init:e,convertChunk:r,getSize:n,truncateChunk:i,addChunk:o,getFinalChunk:s,finalize:a},{maxBuffer:c=Number.POSITIVE_INFINITY}={})=>{let l=yf(t),f=e();f.length=0;try{for await(let u of l){let p=nw(u),d=r[p](u,f);wf({convertedChunk:d,state:f,getSize:n,truncateChunk:i,addChunk:o,maxBuffer:c})}return rw({state:f,convertChunk:r,getSize:n,truncateChunk:i,addChunk:o,getFinalChunk:s,maxBuffer:c}),a(f)}catch(u){let p=typeof u=="object"&&u!==null?u:new Error(u);throw p.bufferedData=a(f),p}},rw=({state:t,getSize:e,truncateChunk:r,addChunk:n,getFinalChunk:i,maxBuffer:o})=>{let s=i(t);s!==void 0&&wf({convertedChunk:s,state:t,getSize:e,truncateChunk:r,addChunk:n,maxBuffer:o})},wf=({convertedChunk:t,state:e,getSize:r,truncateChunk:n,addChunk:i,maxBuffer:o})=>{let s=r(t),a=e.length+s;if(a<=o){Sf(t,e,i,a);return}let c=n(t,o-e.length);throw c!==void 0&&Sf(c,e,i,o),new Ye},Sf=(t,e,r,n)=>{e.contents=r(t,e,n),e.length=n},nw=t=>{let e=typeof t;if(e==="string")return"string";if(e!=="object"||t===null)return"others";if(globalThis.Buffer?.isBuffer(t))return"buffer";let r=bf.call(t);return r==="[object ArrayBuffer]"?"arrayBuffer":r==="[object DataView]"?"dataView":Number.isInteger(t.byteLength)&&Number.isInteger(t.byteOffset)&&bf.call(t.buffer)==="[object ArrayBuffer]"?"typedArray":"others"},{toString:bf}=Object.prototype,Ye=class extends Error{name="MaxBufferError";constructor(){super("maxBuffer exceeded")}};var $e=t=>t,Lr=()=>{},qn=({contents:t})=>t,Yn=t=>{throw new Error(`Streams in object mode are not supported: ${String(t)}`)},Vn=t=>t.length;async function Kn(t,e){return Qt(t,aw,e)}var iw=()=>({contents:[]}),ow=()=>1,sw=(t,{contents:e})=>(e.push(t),e),aw={init:iw,convertChunk:{string:$e,buffer:$e,arrayBuffer:$e,dataView:$e,typedArray:$e,others:$e},getSize:ow,truncateChunk:Lr,addChunk:sw,getFinalChunk:Lr,finalize:qn};async function Zn(t,e){return Qt(t,gw,e)}var cw=()=>({contents:new ArrayBuffer(0)}),lw=t=>uw.encode(t),uw=new TextEncoder,Ef=t=>new Uint8Array(t),Pf=t=>new Uint8Array(t.buffer,t.byteOffset,t.byteLength),fw=(t,e)=>t.slice(0,e),pw=(t,{contents:e,length:r},n)=>{let i=Tf()?hw(e,n):dw(e,n);return new Uint8Array(i).set(t,r),i},dw=(t,e)=>{if(e<=t.byteLength)return t;let r=new ArrayBuffer(Rf(e));return new Uint8Array(r).set(new Uint8Array(t),0),r},hw=(t,e)=>{if(e<=t.maxByteLength)return t.resize(e),t;let r=new ArrayBuffer(e,{maxByteLength:Rf(e)});return new Uint8Array(r).set(new Uint8Array(t),0),r},Rf=t=>xf**Math.ceil(Math.log(t)/Math.log(xf)),xf=2,mw=({contents:t,length:e})=>Tf()?t:t.slice(0,e),Tf=()=>"resize"in ArrayBuffer.prototype,gw={init:cw,convertChunk:{string:lw,buffer:Ef,arrayBuffer:Ef,dataView:Pf,typedArray:Pf,others:Yn},getSize:Vn,truncateChunk:fw,addChunk:pw,getFinalChunk:Lr,finalize:mw};async function Xn(t,e){return Qt(t,Ew,e)}var yw=()=>({contents:"",textDecoder:new TextDecoder}),Jn=(t,{textDecoder:e})=>e.decode(t,{stream:!0}),Sw=(t,{contents:e})=>e+t,bw=(t,e)=>t.slice(0,e),ww=({textDecoder:t})=>{let e=t.decode();return e===""?void 0:e},Ew={init:yw,convertChunk:{string:$e,buffer:Jn,arrayBuffer:Jn,dataView:Jn,typedArray:Jn,others:Yn},getSize:Vn,truncateChunk:bw,addChunk:Sw,getFinalChunk:ww,finalize:qn};Object.assign(kr,{on:Af.on,finished:kf.finished});var Lf=({error:t,stream:e,readableObjectMode:r,lines:n,encoding:i,fdNumber:o})=>{if(!(t instanceof Ye))throw t;if(o==="all")return t;let s=Pw(r,n,i);throw t.maxBufferInfo={fdNumber:o,unit:s},e.destroy(),t},Pw=(t,e,r)=>t?"objects":e?"lines":r==="buffer"?"bytes":"characters",Of=(t,e,r)=>{if(e.length!==r)return;let n=new Ye;throw n.maxBufferInfo={fdNumber:"ipc"},n},If=(t,e)=>{let{streamName:r,threshold:n,unit:i}=xw(t,e);return`Command's ${r} was larger than ${n} ${i}`},xw=(t,e)=>{if(t?.maxBufferInfo===void 0)return{streamName:"output",threshold:e[1],unit:"bytes"};let{maxBufferInfo:{fdNumber:r,unit:n}}=t;delete t.maxBufferInfo;let i=_e(e,r);return r==="ipc"?{streamName:"IPC output",threshold:i,unit:"messages"}:{streamName:hn(r),threshold:i,unit:n}},Nf=(t,e,r)=>t?.code==="ENOBUFS"&&e!==null&&e.some(n=>n!==null&&n.length>Qn(r)),Df=(t,e,r)=>{if(!e)return t;let n=Qn(r);return t.length>n?t.slice(0,n):t},Qn=([,t])=>t;var Ff=({stdio:t,all:e,ipcOutput:r,originalError:n,signal:i,signalDescription:o,exitCode:s,escapedCommand:a,timedOut:c,isCanceled:l,isGracefullyCanceled:f,isMaxBuffer:u,isForcefullyTerminated:p,forceKillAfterDelay:d,killSignal:m,maxBuffer:g,timeout:h,cwd:O})=>{let D=n?.code,N=Rw({originalError:n,timedOut:c,timeout:h,isMaxBuffer:u,maxBuffer:g,errorCode:D,signal:i,signalDescription:o,exitCode:s,isCanceled:l,isGracefullyCanceled:f,isForcefullyTerminated:p,forceKillAfterDelay:d,killSignal:m}),H=Aw(n,O),G=H===void 0?"":`
${H}`,$=`${N}: ${a}${G}`,Z=e===void 0?[t[2],t[1]]:[e],v=[$,...Z,...t.slice(3),r.map(U=>kw(U)).join(`
`)].map(U=>Er(Xt(Lw(U)))).filter(Boolean).join(`

`);return{originalMessage:H,shortMessage:$,message:v}},Rw=({originalError:t,timedOut:e,timeout:r,isMaxBuffer:n,maxBuffer:i,errorCode:o,signal:s,signalDescription:a,exitCode:c,isCanceled:l,isGracefullyCanceled:f,isForcefullyTerminated:u,forceKillAfterDelay:p,killSignal:d})=>{let m=Tw(u,p);return e?`Command timed out after ${r} milliseconds${m}`:f?s===void 0?`Command was gracefully canceled with exit code ${c}`:u?`Command was gracefully canceled${m}`:`Command was gracefully canceled with ${s} (${a})`:l?`Command was canceled${m}`:n?`${If(t,i)}${m}`:o!==void 0?`Command failed with ${o}${m}`:u?`Command was killed with ${d} (${An(d)})${m}`:s!==void 0?`Command was killed with ${s} (${a})`:c!==void 0?`Command failed with exit code ${c}`:"Command failed"},Tw=(t,e)=>t?` and was forcefully terminated after ${e} milliseconds`:"",Aw=(t,e)=>{if(t instanceof Me)return;let r=Yl(t)?t.originalMessage:String(t?.message??t),n=Er(uf(r,e));return n===""?void 0:n},kw=t=>typeof t=="string"?t:(0,vf.inspect)(t),Lw=t=>Array.isArray(t)?t.map(e=>Xt(Cf(e))).filter(Boolean).join(`
`):Cf(t),Cf=t=>typeof t=="string"?t:pe(t)?fn(t):"";var _n=({command:t,escapedCommand:e,stdio:r,all:n,ipcOutput:i,options:{cwd:o},startTime:s})=>Mf({command:t,escapedCommand:e,cwd:o,durationMs:wo(s),failed:!1,timedOut:!1,isCanceled:!1,isGracefullyCanceled:!1,isTerminated:!1,isMaxBuffer:!1,isForcefullyTerminated:!1,exitCode:0,stdout:r[1],stderr:r[2],all:n,stdio:r,ipcOutput:i,pipedFrom:[]}),_t=({error:t,command:e,escapedCommand:r,fileDescriptors:n,options:i,startTime:o,isSync:s})=>Or({error:t,command:e,escapedCommand:r,startTime:o,timedOut:!1,isCanceled:!1,isGracefullyCanceled:!1,isMaxBuffer:!1,isForcefullyTerminated:!1,stdio:Array.from({length:n.length}),ipcOutput:[],options:i,isSync:s}),Or=({error:t,command:e,escapedCommand:r,startTime:n,timedOut:i,isCanceled:o,isGracefullyCanceled:s,isMaxBuffer:a,isForcefullyTerminated:c,exitCode:l,signal:f,stdio:u,all:p,ipcOutput:d,options:{timeoutDuration:m,timeout:g=m,forceKillAfterDelay:h,killSignal:O,cwd:D,maxBuffer:N},isSync:H})=>{let{exitCode:G,signal:$,signalDescription:Z}=Iw(l,f),{originalMessage:v,shortMessage:U,message:_}=Ff({stdio:u,all:p,ipcOutput:d,originalError:t,signal:$,signalDescription:Z,exitCode:G,escapedCommand:r,timedOut:i,isCanceled:o,isGracefullyCanceled:s,isMaxBuffer:a,isForcefullyTerminated:c,forceKillAfterDelay:h,killSignal:O,maxBuffer:N,timeout:g,cwd:D}),x=jl(t,_,H);return Object.assign(x,Ow({error:x,command:e,escapedCommand:r,startTime:n,timedOut:i,isCanceled:o,isGracefullyCanceled:s,isMaxBuffer:a,isForcefullyTerminated:c,exitCode:G,signal:$,signalDescription:Z,stdio:u,all:p,ipcOutput:d,cwd:D,originalMessage:v,shortMessage:U})),x},Ow=({error:t,command:e,escapedCommand:r,startTime:n,timedOut:i,isCanceled:o,isGracefullyCanceled:s,isMaxBuffer:a,isForcefullyTerminated:c,exitCode:l,signal:f,signalDescription:u,stdio:p,all:d,ipcOutput:m,cwd:g,originalMessage:h,shortMessage:O})=>Mf({shortMessage:O,originalMessage:h,command:e,escapedCommand:r,cwd:g,durationMs:wo(n),failed:!0,timedOut:i,isCanceled:o,isGracefullyCanceled:s,isTerminated:f!==void 0,isMaxBuffer:a,isForcefullyTerminated:c,exitCode:l,signal:f,signalDescription:u,code:t.cause?.code,stdout:p[1],stderr:p[2],all:d,stdio:p,ipcOutput:m,pipedFrom:[]}),Mf=t=>Object.fromEntries(Object.entries(t).filter(([,e])=>e!==void 0)),Iw=(t,e)=>{let r=t===null?void 0:t,n=e===null?void 0:e,i=n===void 0?void 0:An(e);return{exitCode:r,signal:n,signalDescription:i}};var Uf=t=>Number.isFinite(t)?t:0;function Nw(t){return{days:Math.trunc(t/864e5),hours:Math.trunc(t/36e5%24),minutes:Math.trunc(t/6e4%60),seconds:Math.trunc(t/1e3%60),milliseconds:Math.trunc(t%1e3),microseconds:Math.trunc(Uf(t*1e3)%1e3),nanoseconds:Math.trunc(Uf(t*1e6)%1e3)}}function Dw(t){return{days:t/86400000n,hours:t/3600000n%24n,minutes:t/60000n%60n,seconds:t/1000n%60n,milliseconds:t%1000n,microseconds:0n,nanoseconds:0n}}function Zo(t){switch(typeof t){case"number":{if(Number.isFinite(t))return Nw(t);break}case"bigint":return Dw(t)}throw new TypeError("Expected a finite number or bigint")}var Cw=t=>t===0||t===0n,vw=(t,e)=>e===1||e===1n?t:`${t}s`,Fw=1e-7,Mw=24n*60n*60n*1000n;function Jo(t,e){let r=typeof t=="bigint";if(!r&&!Number.isFinite(t))throw new TypeError("Expected a finite number or bigint");e={...e};let n=t<0?"-":"";t=t<0?-t:t,e.colonNotation&&(e.compact=!1,e.formatSubMilliseconds=!1,e.separateMilliseconds=!1,e.verbose=!1),e.compact&&(e.unitCount=1,e.secondsDecimalDigits=0,e.millisecondsDecimalDigits=0);let i=[],o=(f,u)=>{let p=Math.floor(f*10**u+Fw);return(Math.round(p)/10**u).toFixed(u)},s=(f,u,p,d)=>{if(!((i.length===0||!e.colonNotation)&&Cw(f)&&!(e.colonNotation&&p==="m"))){if(d??=String(f),e.colonNotation){let m=d.includes(".")?d.split(".")[0].length:d.length,g=i.length>0?2:1;d="0".repeat(Math.max(0,g-m))+d}else d+=e.verbose?" "+vw(u,f):p;i.push(d)}},a=Zo(t),c=BigInt(a.days);if(s(c/365n,"year","y"),s(c%365n,"day","d"),s(Number(a.hours),"hour","h"),s(Number(a.minutes),"minute","m"),e.separateMilliseconds||e.formatSubMilliseconds||!e.colonNotation&&t<1e3){let f=Number(a.seconds),u=Number(a.milliseconds),p=Number(a.microseconds),d=Number(a.nanoseconds);if(s(f,"second","s"),e.formatSubMilliseconds)s(u,"millisecond","ms"),s(p,"microsecond","\xB5s"),s(d,"nanosecond","ns");else{let m=u+p/1e3+d/1e6,g=typeof e.millisecondsDecimalDigits=="number"?e.millisecondsDecimalDigits:0,h=m>=1?Math.round(m):Math.ceil(m),O=g?m.toFixed(g):h;s(Number.parseFloat(O),"millisecond","ms",O)}}else{let f=(r?Number(t%Mw):t)/1e3%60,u=typeof e.secondsDecimalDigits=="number"?e.secondsDecimalDigits:1,p=o(f,u),d=e.keepDecimalsOnWholeSeconds?p:p.replace(/\.0+$/,"");s(Number.parseFloat(d),"second","s",d)}if(i.length===0)return n+"0"+(e.verbose?" milliseconds":"ms");let l=e.colonNotation?":":" ";return typeof e.unitCount=="number"&&(i=i.slice(0,Math.max(e.unitCount,1))),n+i.join(l)}var Bf=(t,e)=>{t.failed&&We({type:"error",verboseMessage:t.shortMessage,verboseInfo:e,result:t})};var Hf=(t,e)=>{!zt(e)||(Bf(t,e),Uw(t,e))},Uw=(t,e)=>{let r=`(done in ${Jo(t.durationMs)})`;We({type:"duration",verboseMessage:r,verboseInfo:e,result:t})};var $t=(t,e,{reject:r})=>{if(Hf(t,e),t.failed&&r)throw t;return t};var ns=w("fs");var Wf=(t,e)=>Et(t)?"asyncGenerator":Yf(t)?"generator":$n(t)?"fileUrl":Ww(t)?"filePath":qw(t)?"webStream":Be(t,{checkOpen:!1})?"native":pe(t)?"uint8Array":Yw(t)?"asyncIterable":Vw(t)?"iterable":_o(t)?jf({transform:t},e):zw(t)?Bw(t,e):"native",Bw=(t,e)=>qo(t.transform,{checkOpen:!1})?Hw(t,e):_o(t.transform)?jf(t,e):Gw(t,e),Hw=(t,e)=>(qf(t,e,"Duplex stream"),"duplex"),jf=(t,e)=>(qf(t,e,"web TransformStream"),"webTransform"),qf=({final:t,binary:e,objectMode:r},n,i)=>{Gf(t,`${n}.final`,i),Gf(e,`${n}.binary`,i),Xo(r,`${n}.objectMode`)},Gf=(t,e,r)=>{if(t!==void 0)throw new TypeError(`The \`${e}\` option can only be defined when using a generator, not a ${r}.`)},Gw=({transform:t,final:e,binary:r,objectMode:n},i)=>{if(t!==void 0&&!zf(t))throw new TypeError(`The \`${i}.transform\` option must be a generator, a Duplex stream or a web TransformStream.`);if(qo(e,{checkOpen:!1}))throw new TypeError(`The \`${i}.final\` option must not be a Duplex stream.`);if(_o(e))throw new TypeError(`The \`${i}.final\` option must not be a web TransformStream.`);if(e!==void 0&&!zf(e))throw new TypeError(`The \`${i}.final\` option must be a generator.`);return Xo(r,`${i}.binary`),Xo(n,`${i}.objectMode`),Et(t)||Et(e)?"asyncGenerator":"generator"},Xo=(t,e)=>{if(t!==void 0&&typeof t!="boolean")throw new TypeError(`The \`${e}\` option must use a boolean.`)},zf=t=>Et(t)||Yf(t),Et=t=>Object.prototype.toString.call(t)==="[object AsyncGeneratorFunction]",Yf=t=>Object.prototype.toString.call(t)==="[object GeneratorFunction]",zw=t=>ie(t)&&(t.transform!==void 0||t.final!==void 0),$n=t=>Object.prototype.toString.call(t)==="[object URL]",Vf=t=>$n(t)&&t.protocol!=="file:",Ww=t=>ie(t)&&Object.keys(t).length===1&&Qo(t.file),Qo=t=>typeof t=="string",Kf=(t,e)=>t==="native"&&typeof e=="string"&&!jw.has(e),jw=new Set(["ipc","ignore","inherit","overlapped","pipe"]),Zf=t=>Object.prototype.toString.call(t)==="[object ReadableStream]",ei=t=>Object.prototype.toString.call(t)==="[object WritableStream]",qw=t=>Zf(t)||ei(t),_o=t=>Zf(t?.readable)&&ei(t?.writable),Yw=t=>Jf(t)&&typeof t[Symbol.asyncIterator]=="function",Vw=t=>Jf(t)&&typeof t[Symbol.iterator]=="function",Jf=t=>typeof t=="object"&&t!==null,Oe=new Set(["generator","asyncGenerator","duplex","webTransform"]),ti=new Set(["fileUrl","filePath","fileNumber"]),$o=new Set(["fileUrl","filePath"]),Xf=new Set([...$o,"webStream","nodeStream"]),Qf=new Set(["webTransform","duplex"]),at={generator:"a generator",asyncGenerator:"an async generator",fileUrl:"a file URL",filePath:"a file path string",fileNumber:"a file descriptor number",webStream:"a web stream",nodeStream:"a Node.js stream",webTransform:"a web TransformStream",duplex:"a Duplex stream",native:"any value",iterable:"an iterable",asyncIterable:"an async iterable",string:"a string",uint8Array:"a Uint8Array"};var es=(t,e,r,n)=>n==="output"?Kw(t,e,r):Zw(t,e,r),Kw=(t,e,r)=>{let n=e!==0&&r[e-1].value.readableObjectMode;return{writableObjectMode:n,readableObjectMode:t??n}},Zw=(t,e,r)=>{let n=e===0?t===!0:r[e-1].value.readableObjectMode,i=e!==r.length-1&&(t??n);return{writableObjectMode:n,readableObjectMode:i}},_f=(t,e)=>{let r=t.findLast(({type:n})=>Oe.has(n));return r===void 0?!1:e==="input"?r.value.writableObjectMode:r.value.readableObjectMode};var $f=(t,e,r,n)=>[...t.filter(({type:i})=>!Oe.has(i)),...Jw(t,e,r,n)],Jw=(t,e,r,{encoding:n})=>{let i=t.filter(({type:s})=>Oe.has(s)),o=Array.from({length:i.length});for(let[s,a]of Object.entries(i))o[s]=Xw({stdioItem:a,index:Number(s),newTransforms:o,optionName:e,direction:r,encoding:n});return eE(o,r)},Xw=({stdioItem:t,stdioItem:{type:e},index:r,newTransforms:n,optionName:i,direction:o,encoding:s})=>e==="duplex"?Qw({stdioItem:t,optionName:i}):e==="webTransform"?_w({stdioItem:t,index:r,newTransforms:n,direction:o}):$w({stdioItem:t,index:r,newTransforms:n,direction:o,encoding:s}),Qw=({stdioItem:t,stdioItem:{value:{transform:e,transform:{writableObjectMode:r,readableObjectMode:n},objectMode:i=n}},optionName:o})=>{if(i&&!n)throw new TypeError(`The \`${o}.objectMode\` option can only be \`true\` if \`new Duplex({objectMode: true})\` is used.`);if(!i&&n)throw new TypeError(`The \`${o}.objectMode\` option cannot be \`false\` if \`new Duplex({objectMode: true})\` is used.`);return{...t,value:{transform:e,writableObjectMode:r,readableObjectMode:n}}},_w=({stdioItem:t,stdioItem:{value:e},index:r,newTransforms:n,direction:i})=>{let{transform:o,objectMode:s}=ie(e)?e:{transform:e},{writableObjectMode:a,readableObjectMode:c}=es(s,r,n,i);return{...t,value:{transform:o,writableObjectMode:a,readableObjectMode:c}}},$w=({stdioItem:t,stdioItem:{value:e},index:r,newTransforms:n,direction:i,encoding:o})=>{let{transform:s,final:a,binary:c=!1,preserveNewlines:l=!1,objectMode:f}=ie(e)?e:{transform:e},u=c||xe.has(o),{writableObjectMode:p,readableObjectMode:d}=es(f,r,n,i);return{...t,value:{transform:s,final:a,binary:u,preserveNewlines:l,writableObjectMode:p,readableObjectMode:d}}},eE=(t,e)=>e==="input"?t.reverse():t;var ri=he(w("process"),1);var ep=(t,e,r)=>{let n=t.map(i=>tE(i,e));if(n.includes("input")&&n.includes("output"))throw new TypeError(`The \`${r}\` option must not be an array of both readable and writable values.`);return n.find(Boolean)??iE},tE=({type:t,value:e},r)=>rE[r]??tp[t](e),rE=["input","output","output"],er=()=>{},ts=()=>"input",tp={generator:er,asyncGenerator:er,fileUrl:er,filePath:er,iterable:ts,asyncIterable:ts,uint8Array:ts,webStream:t=>ei(t)?"output":"input",nodeStream(t){return wt(t,{checkOpen:!1})?jo(t,{checkOpen:!1})?void 0:"input":"output"},webTransform:er,duplex:er,native(t){let e=nE(t);if(e!==void 0)return e;if(Be(t,{checkOpen:!1}))return tp.nodeStream(t)}},nE=t=>{if([0,ri.default.stdin].includes(t))return"input";if([1,2,ri.default.stdout,ri.default.stderr].includes(t))return"output"},iE="output";var rp=(t,e)=>e&&!t.includes("ipc")?[...t,"ipc"]:t;var np=({stdio:t,ipc:e,buffer:r,...n},i,o)=>{let s=oE(t,n).map((a,c)=>ip(a,c));return o?aE(s,r,i):rp(s,e)},oE=(t,e)=>{if(t===void 0)return Le.map(n=>e[n]);if(sE(e))throw new Error(`It's not possible to provide \`stdio\` in combination with one of ${Le.map(n=>`\`${n}\``).join(", ")}`);if(typeof t=="string")return[t,t,t];if(!Array.isArray(t))throw new TypeError(`Expected \`stdio\` to be of type \`string\` or \`Array\`, got \`${typeof t}\``);let r=Math.max(t.length,Le.length);return Array.from({length:r},(n,i)=>t[i])},sE=t=>Le.some(e=>t[e]!==void 0),ip=(t,e)=>Array.isArray(t)?t.map(r=>ip(r,e)):t??(e>=Le.length?"ignore":"pipe"),aE=(t,e,r)=>t.map((n,i)=>!e[i]&&i!==0&&!Wt(r,i)&&cE(n)?"ignore":n),cE=t=>t==="pipe"||Array.isArray(t)&&t.every(e=>e==="pipe");var sp=w("fs"),ap=he(w("tty"),1);var cp=({stdioItem:t,stdioItem:{type:e},isStdioArray:r,fdNumber:n,direction:i,isSync:o})=>!r||e!=="native"?t:o?lE({stdioItem:t,fdNumber:n,direction:i}):pE({stdioItem:t,fdNumber:n}),lE=({stdioItem:t,stdioItem:{value:e,optionName:r},fdNumber:n,direction:i})=>{let o=uE({value:e,optionName:r,fdNumber:n,direction:i});if(o!==void 0)return o;if(Be(e,{checkOpen:!1}))throw new TypeError(`The \`${r}: Stream\` option cannot both be an array and include a stream with synchronous methods.`);return t},uE=({value:t,optionName:e,fdNumber:r,direction:n})=>{let i=fE(t,r);if(i!==void 0){if(n==="output")return{type:"fileNumber",value:i,optionName:e};if(ap.default.isatty(i))throw new TypeError(`The \`${e}: ${On(t)}\` option is invalid: it cannot be a TTY with synchronous methods.`);return{type:"uint8Array",value:Qe((0,sp.readFileSync)(i)),optionName:e}}},fE=(t,e)=>{if(t==="inherit")return e;if(typeof t=="number")return t;let r=dn.indexOf(t);if(r!==-1)return r},pE=({stdioItem:t,stdioItem:{value:e,optionName:r},fdNumber:n})=>e==="inherit"?{type:"nodeStream",value:op(n,e,r),optionName:r}:typeof e=="number"?{type:"nodeStream",value:op(e,e,r),optionName:r}:Be(e,{checkOpen:!1})?{type:"nodeStream",value:e,optionName:r}:t,op=(t,e,r)=>{let n=dn[t];if(n===void 0)throw new TypeError(`The \`${r}: ${e}\` option is invalid: no such standard stream.`);return n};var lp=({input:t,inputFile:e},r)=>r===0?[...dE(t),...mE(e)]:[],dE=t=>t===void 0?[]:[{type:hE(t),value:t,optionName:"input"}],hE=t=>{if(wt(t,{checkOpen:!1}))return"nodeStream";if(typeof t=="string")return"string";if(pe(t))return"uint8Array";throw new Error("The `input` option must be a string, a Uint8Array or a Node.js Readable stream.")},mE=t=>t===void 0?[]:[{...gE(t),optionName:"inputFile"}],gE=t=>{if($n(t))return{type:"fileUrl",value:t};if(Qo(t))return{type:"filePath",value:{file:t}};throw new Error("The `inputFile` option must be a file path string or a file URL.")};var up=t=>t.filter((e,r)=>t.every((n,i)=>e.value!==n.value||r>=i||e.type==="generator"||e.type==="asyncGenerator")),fp=({stdioItem:{type:t,value:e,optionName:r},direction:n,fileDescriptors:i,isSync:o})=>{let s=yE(i,t);if(s.length!==0){if(o){SE({otherStdioItems:s,type:t,value:e,optionName:r,direction:n});return}if(Xf.has(t))return pp({otherStdioItems:s,type:t,value:e,optionName:r,direction:n});Qf.has(t)&&wE({otherStdioItems:s,type:t,value:e,optionName:r})}},yE=(t,e)=>t.flatMap(({direction:r,stdioItems:n})=>n.filter(i=>i.type===e).map(i=>({...i,direction:r}))),SE=({otherStdioItems:t,type:e,value:r,optionName:n,direction:i})=>{$o.has(e)&&pp({otherStdioItems:t,type:e,value:r,optionName:n,direction:i})},pp=({otherStdioItems:t,type:e,value:r,optionName:n,direction:i})=>{let o=t.filter(a=>bE(a,r));if(o.length===0)return;let s=o.find(a=>a.direction!==i);return dp(s,n,e),i==="output"?o[0].stream:void 0},bE=({type:t,value:e},r)=>t==="filePath"?e.file===r.file:t==="fileUrl"?e.href===r.href:e===r,wE=({otherStdioItems:t,type:e,value:r,optionName:n})=>{let i=t.find(({value:{transform:o}})=>o===r.transform);dp(i,n,e)},dp=(t,e,r)=>{if(t!==void 0)throw new TypeError(`The \`${t.optionName}\` and \`${e}\` options must not target ${at[r]} that is the same.`)};var ni=(t,e,r,n)=>{let o=np(e,r,n).map((a,c)=>EE({stdioOption:a,fdNumber:c,options:e,isSync:n})),s=OE({initialFileDescriptors:o,addProperties:t,options:e,isSync:n});return e.stdio=s.map(({stdioItems:a})=>DE(a)),s},EE=({stdioOption:t,fdNumber:e,options:r,isSync:n})=>{let i=hn(e),{stdioItems:o,isStdioArray:s}=PE({stdioOption:t,fdNumber:e,options:r,optionName:i}),a=ep(o,e,i),c=o.map(u=>cp({stdioItem:u,isStdioArray:s,fdNumber:e,direction:a,isSync:n})),l=$f(c,i,a,r),f=_f(l,a);return LE(l,f),{direction:a,objectMode:f,stdioItems:l}},PE=({stdioOption:t,fdNumber:e,options:r,optionName:n})=>{let o=[...(Array.isArray(t)?t:[t]).map(c=>xE(c,n)),...lp(r,e)],s=up(o),a=s.length>1;return RE(s,a,n),AE(s),{stdioItems:s,isStdioArray:a}},xE=(t,e)=>({type:Wf(t,e),value:t,optionName:e}),RE=(t,e,r)=>{if(t.length===0)throw new TypeError(`The \`${r}\` option must not be an empty array.`);if(!!e){for(let{value:n,optionName:i}of t)if(TE.has(n))throw new Error(`The \`${i}\` option must not include \`${n}\`.`)}},TE=new Set(["ignore","ipc"]),AE=t=>{for(let e of t)kE(e)},kE=({type:t,value:e,optionName:r})=>{if(Vf(e))throw new TypeError(`The \`${r}: URL\` option must use the \`file:\` scheme.
For example, you can use the \`pathToFileURL()\` method of the \`url\` core module.`);if(Kf(t,e))throw new TypeError(`The \`${r}: { file: '...' }\` option must be used instead of \`${r}: '...'\`.`)},LE=(t,e)=>{if(!e)return;let r=t.find(({type:n})=>ti.has(n));if(r!==void 0)throw new TypeError(`The \`${r.optionName}\` option cannot use both files and transforms in objectMode.`)},OE=({initialFileDescriptors:t,addProperties:e,options:r,isSync:n})=>{let i=[];try{for(let o of t)i.push(IE({fileDescriptor:o,fileDescriptors:i,addProperties:e,options:r,isSync:n}));return i}catch(o){throw rs(i),o}},IE=({fileDescriptor:{direction:t,objectMode:e,stdioItems:r},fileDescriptors:n,addProperties:i,options:o,isSync:s})=>{let a=r.map(c=>NE({stdioItem:c,addProperties:i,direction:t,options:o,fileDescriptors:n,isSync:s}));return{direction:t,objectMode:e,stdioItems:a}},NE=({stdioItem:t,addProperties:e,direction:r,options:n,fileDescriptors:i,isSync:o})=>{let s=fp({stdioItem:t,direction:r,fileDescriptors:i,isSync:o});return s!==void 0?{...t,stream:s}:{...t,...e[r][t.type](t,n)}},rs=t=>{for(let{stdioItems:e}of t)for(let{stream:r}of e)r!==void 0&&!ve(r)&&r.destroy()},DE=t=>{if(t.length>1)return t.some(({value:n})=>n==="overlapped")?"overlapped":"pipe";let[{type:e,value:r}]=t;return e==="native"?r:"pipe"};var mp=(t,e)=>ni(vE,t,e,!0),Ve=({type:t,optionName:e})=>{gp(e,at[t])},CE=({optionName:t,value:e})=>((e==="ipc"||e==="overlapped")&&gp(t,`"${e}"`),{}),gp=(t,e)=>{throw new TypeError(`The \`${t}\` option cannot be ${e} with synchronous methods.`)},hp={generator(){},asyncGenerator:Ve,webStream:Ve,nodeStream:Ve,webTransform:Ve,duplex:Ve,asyncIterable:Ve,native:CE},vE={input:{...hp,fileUrl:({value:t})=>({contents:[Qe((0,ns.readFileSync)(t))]}),filePath:({value:{file:t}})=>({contents:[Qe((0,ns.readFileSync)(t))]}),fileNumber:Ve,iterable:({value:t})=>({contents:[...t]}),string:({value:t})=>({contents:[t]}),uint8Array:({value:t})=>({contents:[t]})},output:{...hp,fileUrl:({value:t})=>({path:t}),filePath:({value:{file:t}})=>({path:t}),fileNumber:({value:t})=>({path:t}),iterable:Ve,string:Ve,uint8Array:Ve}};var et=(t,{stripFinalNewline:e},r)=>is(e,r)&&t!==void 0&&!Array.isArray(t)?Xt(t):t,is=(t,e)=>e==="all"?t[1]||t[2]:t[e];var Nr=w("stream");var ii=(t,e,r,n)=>t||r?void 0:Sp(e,n),ss=(t,e,r)=>r?t.flatMap(n=>yp(n,e)):yp(t,e),yp=(t,e)=>{let{transform:r,final:n}=Sp(e,{});return[...r(t),...n()]},Sp=(t,e)=>(e.previousChunks="",{transform:FE.bind(void 0,e,t),final:UE.bind(void 0,e)}),FE=function*(t,e,r){if(typeof r!="string"){yield r;return}let{previousChunks:n}=t,i=-1;for(let o=0;o<r.length;o+=1)if(r[o]===`
`){let s=ME(r,o,e,t),a=r.slice(i+1,o+1-s);n.length>0&&(a=os(n,a),n=""),yield a,i=o}i!==r.length-1&&(n=os(n,r.slice(i+1))),t.previousChunks=n},ME=(t,e,r,n)=>r?0:(n.isWindowsNewline=e!==0&&t[e-1]==="\r",n.isWindowsNewline?2:1),UE=function*({previousChunks:t}){t.length>0&&(yield t)},bp=({binary:t,preserveNewlines:e,readableObjectMode:r,state:n})=>t||e||r?void 0:{transform:BE.bind(void 0,n)},BE=function*({isWindowsNewline:t=!1},e){let{unixNewline:r,windowsNewline:n,LF:i,concatBytes:o}=typeof e=="string"?HE:zE;if(e.at(-1)===i){yield e;return}yield o(e,t?n:r)},os=(t,e)=>`${t}${e}`,HE={windowsNewline:`\r
`,unixNewline:`
`,LF:`
`,concatBytes:os},GE=(t,e)=>{let r=new Uint8Array(t.length+e.length);return r.set(t,0),r.set(e,t.length),r},zE={windowsNewline:new Uint8Array([13,10]),unixNewline:new Uint8Array([10]),LF:10,concatBytes:GE};var wp=w("buffer");var Ep=(t,e)=>t?void 0:WE.bind(void 0,e),WE=function*(t,e){if(typeof e!="string"&&!pe(e)&&!wp.Buffer.isBuffer(e))throw new TypeError(`The \`${t}\` option's transform must use "objectMode: true" to receive as input: ${typeof e}.`);yield e},Pp=(t,e)=>t?jE.bind(void 0,e):qE.bind(void 0,e),jE=function*(t,e){xp(t,e),yield e},qE=function*(t,e){if(xp(t,e),typeof e!="string"&&!pe(e))throw new TypeError(`The \`${t}\` option's function must yield a string or an Uint8Array, not ${typeof e}.`);yield e},xp=(t,e)=>{if(e==null)throw new TypeError(`The \`${t}\` option's function must not call \`yield ${e}\`.
Instead, \`yield\` should either be called with a value, or not be called at all. For example:
  if (condition) { yield value; }`)};var Rp=w("buffer"),Tp=w("string_decoder");var oi=(t,e,r)=>{if(r)return;if(t)return{transform:YE.bind(void 0,new TextEncoder)};let n=new Tp.StringDecoder(e);return{transform:VE.bind(void 0,n),final:KE.bind(void 0,n)}},YE=function*(t,e){Rp.Buffer.isBuffer(e)?yield Qe(e):typeof e=="string"?yield t.encode(e):yield e},VE=function*(t,e){yield pe(e)?t.write(e):e},KE=function*(t){let e=t.end();e!==""&&(yield e)};var as=w("util"),cs=(0,as.callbackify)(async(t,e,r,n)=>{e.currentIterable=t(...r);try{for await(let i of e.currentIterable)n.push(i)}finally{delete e.currentIterable}}),si=async function*(t,e,r){if(r===e.length){yield t;return}let{transform:n=JE}=e[r];for await(let i of n(t))yield*si(i,e,r+1)},Ap=async function*(t){for(let[e,{final:r}]of Object.entries(t))yield*ZE(r,Number(e),t)},ZE=async function*(t,e,r){if(t!==void 0)for await(let n of t())yield*si(n,r,e+1)},kp=(0,as.callbackify)(async({currentIterable:t},e)=>{if(t!==void 0){await(e?t.throw(e):t.return());return}if(e)throw e}),JE=function*(t){yield t};var ls=(t,e,r,n)=>{try{for(let i of t(...e))r.push(i);n()}catch(i){n(i)}},Lp=(t,e)=>[...e.flatMap(r=>[...Pt(r,t,0)]),...Ir(t)],Pt=function*(t,e,r){if(r===e.length){yield t;return}let{transform:n=QE}=e[r];for(let i of n(t))yield*Pt(i,e,r+1)},Ir=function*(t){for(let[e,{final:r}]of Object.entries(t))yield*XE(r,Number(e),t)},XE=function*(t,e,r){if(t!==void 0)for(let n of t())yield*Pt(n,r,e+1)},QE=function*(t){yield t};var us=({value:t,value:{transform:e,final:r,writableObjectMode:n,readableObjectMode:i},optionName:o},{encoding:s})=>{let a={},c=Op(t,s,o),l=Et(e),f=Et(r),u=l?cs.bind(void 0,si,a):ls.bind(void 0,Pt),p=l||f?cs.bind(void 0,Ap,a):ls.bind(void 0,Ir),d=l||f?kp.bind(void 0,a):void 0;return{stream:new Nr.Transform({writableObjectMode:n,writableHighWaterMark:(0,Nr.getDefaultHighWaterMark)(n),readableObjectMode:i,readableHighWaterMark:(0,Nr.getDefaultHighWaterMark)(i),transform(g,h,O){u([g,c,0],this,O)},flush(g){p([c],this,g)},destroy:d})}},ai=(t,e,r,n)=>{let i=e.filter(({type:s})=>s==="generator"),o=n?i.reverse():i;for(let{value:s,optionName:a}of o){let c=Op(s,r,a);t=Lp(c,t)}return t},Op=({transform:t,final:e,binary:r,writableObjectMode:n,readableObjectMode:i,preserveNewlines:o},s,a)=>{let c={};return[{transform:Ep(n,a)},oi(r,s,n),ii(r,o,n,c),{transform:t,final:e},{transform:Pp(i,a)},bp({binary:r,preserveNewlines:o,readableObjectMode:i,state:c})].filter(Boolean)};var Ip=(t,e)=>{for(let r of _E(t))$E(t,r,e)},_E=t=>new Set(Object.entries(t).filter(([,{direction:e}])=>e==="input").map(([e])=>Number(e))),$E=(t,e,r)=>{let{stdioItems:n}=t[e],i=n.filter(({contents:a})=>a!==void 0);if(i.length===0)return;if(e!==0){let[{type:a,optionName:c}]=i;throw new TypeError(`Only the \`stdin\` option, not \`${c}\`, can be ${at[a]} with synchronous methods.`)}let s=i.map(({contents:a})=>a).map(a=>eP(a,n));r.input=wr(s)},eP=(t,e)=>{let r=ai(t,e,"utf8",!0);return tP(r),wr(r)},tP=t=>{let e=t.find(r=>typeof r!="string"&&!pe(r));if(e!==void 0)throw new TypeError(`The \`stdin\` option is invalid: when passing objects as input, a transform must be used to serialize them to strings or Uint8Arrays: ${e}.`)};var li=w("fs");var ci=({stdioItems:t,encoding:e,verboseInfo:r,fdNumber:n})=>n!=="all"&&Wt(r,n)&&!xe.has(e)&&rP(n)&&(t.some(({type:i,value:o})=>i==="native"&&nP.has(o))||t.every(({type:i})=>Oe.has(i))),rP=t=>t===1||t===2,nP=new Set(["pipe","overlapped"]),Np=async(t,e,r,n)=>{for await(let i of t)iP(e)||Cp(i,r,n)},Dp=(t,e,r)=>{for(let n of t)Cp(n,e,r)},iP=t=>t._readableState.pipes.length>0,Cp=(t,e,r)=>{let n=wn(t);We({type:"output",verboseMessage:n,fdNumber:e,verboseInfo:r})};var vp=({fileDescriptors:t,syncResult:{output:e},options:r,isMaxBuffer:n,verboseInfo:i})=>{if(e===null)return{output:Array.from({length:3})};let o={},s=new Set([]);return{output:e.map((c,l)=>oP({result:c,fileDescriptors:t,fdNumber:l,state:o,outputFiles:s,isMaxBuffer:n,verboseInfo:i},r)),...o}},oP=({result:t,fileDescriptors:e,fdNumber:r,state:n,outputFiles:i,isMaxBuffer:o,verboseInfo:s},{buffer:a,encoding:c,lines:l,stripFinalNewline:f,maxBuffer:u})=>{if(t===null)return;let p=Df(t,o,u),d=Qe(p),{stdioItems:m,objectMode:g}=e[r],h=sP([d],m,c,n),{serializedResult:O,finalResult:D=O}=aP({chunks:h,objectMode:g,encoding:c,lines:l,stripFinalNewline:f,fdNumber:r});cP({serializedResult:O,fdNumber:r,state:n,verboseInfo:s,encoding:c,stdioItems:m,objectMode:g});let N=a[r]?D:void 0;try{return n.error===void 0&&lP(O,m,i),N}catch(H){return n.error=H,N}},sP=(t,e,r,n)=>{try{return ai(t,e,r,!1)}catch(i){return n.error=i,t}},aP=({chunks:t,objectMode:e,encoding:r,lines:n,stripFinalNewline:i,fdNumber:o})=>{if(e)return{serializedResult:t};if(r==="buffer")return{serializedResult:wr(t)};let s=Tc(t,r);return n[o]?{serializedResult:s,finalResult:ss(s,!i[o],e)}:{serializedResult:s}},cP=({serializedResult:t,fdNumber:e,state:r,verboseInfo:n,encoding:i,stdioItems:o,objectMode:s})=>{if(!ci({stdioItems:o,encoding:i,verboseInfo:n,fdNumber:e}))return;let a=ss(t,!1,s);try{Dp(a,e,n)}catch(c){r.error??=c}},lP=(t,e,r)=>{for(let{path:n}of e.filter(({type:i})=>ti.has(i))){let i=typeof n=="string"?n:n.toString();r.has(i)?(0,li.appendFileSync)(n,t):(r.add(i),(0,li.writeFileSync)(n,t))}};var Fp=([,t,e],r)=>{if(!!r.all)return t===void 0?e:e===void 0?t:Array.isArray(t)?Array.isArray(e)?[...t,...e]:[...t,et(e,r,"all")]:Array.isArray(e)?[et(t,r,"all"),...e]:pe(t)&&pe(e)?po([t,e]):`${t}${e}`};var ui=w("events");var Mp=async(t,e)=>{let[r,n]=await uP(t);return e.isForcefullyTerminated??=!1,[r,n]},uP=async t=>{let[e,r]=await Promise.allSettled([(0,ui.once)(t,"spawn"),(0,ui.once)(t,"exit")]);return e.status==="rejected"?[]:r.status==="rejected"?Up(t):r.value},Up=async t=>{try{return await(0,ui.once)(t,"exit")}catch{return Up(t)}},Bp=async t=>{let[e,r]=await t;if(!fP(e,r)&&fs(e,r))throw new Me;return[e,r]},fP=(t,e)=>t===void 0&&e===void 0,fs=(t,e)=>t!==0||e!==null;var Hp=({error:t,status:e,signal:r,output:n},{maxBuffer:i})=>{let o=pP(t,e,r),s=o?.code==="ETIMEDOUT",a=Nf(o,n,i);return{resultError:o,exitCode:e,signal:r,timedOut:s,isMaxBuffer:a}},pP=(t,e,r)=>t!==void 0?t:fs(e,r)?new Me:void 0;var zp=(t,e,r)=>{let{file:n,commandArguments:i,command:o,escapedCommand:s,startTime:a,verboseInfo:c,options:l,fileDescriptors:f}=dP(t,e,r),u=gP({file:n,commandArguments:i,options:l,command:o,escapedCommand:s,verboseInfo:c,fileDescriptors:f,startTime:a});return $t(u,c,l)},dP=(t,e,r)=>{let{command:n,escapedCommand:i,startTime:o,verboseInfo:s}=Pn(t,e,r),a=hP(r),{file:c,commandArguments:l,options:f}=jn(t,e,a);mP(f);let u=mp(f,s);return{file:c,commandArguments:l,command:n,escapedCommand:i,startTime:o,verboseInfo:s,options:f,fileDescriptors:u}},hP=t=>t.node&&!t.ipc?{...t,ipc:!1}:t,mP=({ipc:t,ipcInput:e,detached:r,cancelSignal:n})=>{e&&fi("ipcInput"),t&&fi("ipc: true"),r&&fi("detached: true"),n&&fi("cancelSignal")},fi=t=>{throw new TypeError(`The "${t}" option cannot be used with synchronous methods.`)},gP=({file:t,commandArguments:e,options:r,command:n,escapedCommand:i,verboseInfo:o,fileDescriptors:s,startTime:a})=>{let c=yP({file:t,commandArguments:e,options:r,command:n,escapedCommand:i,fileDescriptors:s,startTime:a});if(c.failed)return c;let{resultError:l,exitCode:f,signal:u,timedOut:p,isMaxBuffer:d}=Hp(c,r),{output:m,error:g=l}=vp({fileDescriptors:s,syncResult:c,options:r,isMaxBuffer:d,verboseInfo:o}),h=m.map((D,N)=>et(D,r,N)),O=et(Fp(m,r),r,"all");return bP({error:g,exitCode:f,signal:u,timedOut:p,isMaxBuffer:d,stdio:h,all:O,options:r,command:n,escapedCommand:i,startTime:a})},yP=({file:t,commandArguments:e,options:r,command:n,escapedCommand:i,fileDescriptors:o,startTime:s})=>{try{Ip(o,r);let a=SP(r);return(0,Gp.spawnSync)(t,e,a)}catch(a){return _t({error:a,command:n,escapedCommand:i,fileDescriptors:o,options:r,startTime:s,isSync:!0})}},SP=({encoding:t,maxBuffer:e,...r})=>({...r,encoding:"buffer",maxBuffer:Qn(e)}),bP=({error:t,exitCode:e,signal:r,timedOut:n,isMaxBuffer:i,stdio:o,all:s,options:a,command:c,escapedCommand:l,startTime:f})=>t===void 0?_n({command:c,escapedCommand:l,stdio:o,all:s,ipcOutput:[],options:a,startTime:f}):Or({error:t,command:c,escapedCommand:l,timedOut:n,isCanceled:!1,isGracefullyCanceled:!1,isMaxBuffer:i,isForcefullyTerminated:!1,exitCode:e,signal:r,stdio:o,all:s,ipcOutput:[],options:a,startTime:f,isSync:!0});var Jd=w("events"),Xd=w("child_process");var ds=he(w("process"),1);var tr=w("events");var Wp=({anyProcess:t,channel:e,isSubprocess:r,ipc:n},{reference:i=!0,filter:o}={})=>(Kt({methodName:"getOneMessage",isSubprocess:r,ipc:n,isConnected:Fn(t)}),wP({anyProcess:t,channel:e,isSubprocess:r,filter:o,reference:i})),wP=async({anyProcess:t,channel:e,isSubprocess:r,filter:n,reference:i})=>{Nn(e,i);let o=st(t,e,r),s=new AbortController;try{return await Promise.race([EP(o,n,s),PP(o,r,s),xP(o,r,s)])}catch(a){throw Zt(t),a}finally{s.abort(),Dn(e,i)}},EP=async(t,e,{signal:r})=>{if(e===void 0){let[n]=await(0,tr.once)(t,"message",{signal:r});return n}for await(let[n]of(0,tr.on)(t,"message",{signal:r}))if(e(n))return n},PP=async(t,e,{signal:r})=>{await(0,tr.once)(t,"disconnect",{signal:r}),uu(e)},xP=async(t,e,{signal:r})=>{let[n]=await(0,tr.once)(t,"strict:error",{signal:r});throw Ln(n,e)};var Dr=w("events");var qp=({anyProcess:t,channel:e,isSubprocess:r,ipc:n},{reference:i=!0}={})=>ps({anyProcess:t,channel:e,isSubprocess:r,ipc:n,shouldAwait:!r,reference:i}),ps=({anyProcess:t,channel:e,isSubprocess:r,ipc:n,shouldAwait:i,reference:o})=>{Kt({methodName:"getEachMessage",isSubprocess:r,ipc:n,isConnected:Fn(t)}),Nn(e,o);let s=st(t,e,r),a=new AbortController,c={};return RP(t,s,a),TP({ipcEmitter:s,isSubprocess:r,controller:a,state:c}),AP({anyProcess:t,channel:e,ipcEmitter:s,isSubprocess:r,shouldAwait:i,controller:a,state:c,reference:o})},RP=async(t,e,r)=>{try{await(0,Dr.once)(e,"disconnect",{signal:r.signal}),r.abort()}catch{}},TP=async({ipcEmitter:t,isSubprocess:e,controller:r,state:n})=>{try{let[i]=await(0,Dr.once)(t,"strict:error",{signal:r.signal});n.error=Ln(i,e),r.abort()}catch{}},AP=async function*({anyProcess:t,channel:e,ipcEmitter:r,isSubprocess:n,shouldAwait:i,controller:o,state:s,reference:a}){try{for await(let[c]of(0,Dr.on)(r,"message",{signal:o.signal}))jp(s),yield c}catch{jp(s)}finally{o.abort(),Dn(e,a),n||Zt(t),i&&await t}},jp=({error:t})=>{if(t)throw t};var Yp=(t,{ipc:e})=>{Object.assign(t,Kp(t,!1,e))},Vp=()=>{let t=ds.default,e=!0,r=ds.default.channel!==void 0;return{...Kp(t,e,r),getCancelSignal:qu.bind(void 0,{anyProcess:t,channel:t.channel,isSubprocess:e,ipc:r})}},Kp=(t,e,r)=>({sendMessage:Hn.bind(void 0,{anyProcess:t,channel:t.channel,isSubprocess:e,ipc:r}),getOneMessage:Wp.bind(void 0,{anyProcess:t,channel:t.channel,isSubprocess:e,ipc:r}),getEachMessage:qp.bind(void 0,{anyProcess:t,channel:t.channel,isSubprocess:e,ipc:r})});var Zp=w("child_process"),ct=w("stream");var Jp=({error:t,command:e,escapedCommand:r,fileDescriptors:n,options:i,startTime:o,verboseInfo:s})=>{rs(n);let a=new Zp.ChildProcess;kP(a,n),Object.assign(a,{readable:LP,writable:OP,duplex:IP});let c=_t({error:t,command:e,escapedCommand:r,fileDescriptors:n,options:i,startTime:o,isSync:!1}),l=NP(c,s,i);return{subprocess:a,promise:l}},kP=(t,e)=>{let r=Cr(),n=Cr(),i=Cr(),o=Array.from({length:e.length-3},Cr),s=Cr(),a=[r,n,i,...o];Object.assign(t,{stdin:r,stdout:n,stderr:i,all:s,stdio:a})},Cr=()=>{let t=new ct.PassThrough;return t.end(),t},LP=()=>new ct.Readable({read(){}}),OP=()=>new ct.Writable({write(){}}),IP=()=>new ct.Duplex({read(){},write(){}}),NP=async(t,e,r)=>$t(t,e,r);var rr=w("fs"),Qp=w("buffer"),Ke=w("stream");var _p=(t,e)=>ni(DP,t,e,!1),vr=({type:t,optionName:e})=>{throw new TypeError(`The \`${e}\` option cannot be ${at[t]}.`)},Xp={fileNumber:vr,generator:us,asyncGenerator:us,nodeStream:({value:t})=>({stream:t}),webTransform({value:{transform:t,writableObjectMode:e,readableObjectMode:r}}){let n=e||r;return{stream:Ke.Duplex.fromWeb(t,{objectMode:n})}},duplex:({value:{transform:t}})=>({stream:t}),native(){}},DP={input:{...Xp,fileUrl:({value:t})=>({stream:(0,rr.createReadStream)(t)}),filePath:({value:{file:t}})=>({stream:(0,rr.createReadStream)(t)}),webStream:({value:t})=>({stream:Ke.Readable.fromWeb(t)}),iterable:({value:t})=>({stream:Ke.Readable.from(t)}),asyncIterable:({value:t})=>({stream:Ke.Readable.from(t)}),string:({value:t})=>({stream:Ke.Readable.from(t)}),uint8Array:({value:t})=>({stream:Ke.Readable.from(Qp.Buffer.from(t))})},output:{...Xp,fileUrl:({value:t})=>({stream:(0,rr.createWriteStream)(t)}),filePath:({value:{file:t}})=>({stream:(0,rr.createWriteStream)(t)}),webStream:({value:t})=>({stream:Ke.Writable.fromWeb(t)}),iterable:vr,asyncIterable:vr,string:vr,uint8Array:vr}};var Fr=w("events"),di=w("stream"),gs=w("stream/promises");function xt(t){if(!Array.isArray(t))throw new TypeError(`Expected an array, got \`${typeof t}\`.`);for(let i of t)ms(i);let e=t.some(({readableObjectMode:i})=>i),r=CP(t,e),n=new hs({objectMode:e,writableHighWaterMark:r,readableHighWaterMark:r});for(let i of t)n.add(i);return n}var CP=(t,e)=>{if(t.length===0)return(0,di.getDefaultHighWaterMark)(e);let r=t.filter(({readableObjectMode:n})=>n===e).map(({readableHighWaterMark:n})=>n);return Math.max(...r)},hs=class extends di.PassThrough{#t=new Set([]);#r=new Set([]);#e=new Set([]);#n;#o=Symbol("unpipe");#i=new WeakMap;add(e){if(ms(e),this.#t.has(e))return;this.#t.add(e),this.#n??=vP(this,this.#t,this.#o);let r=UP({passThroughStream:this,stream:e,streams:this.#t,ended:this.#r,aborted:this.#e,onFinished:this.#n,unpipeEvent:this.#o});this.#i.set(e,r),e.pipe(this,{end:!1})}async remove(e){if(ms(e),!this.#t.has(e))return!1;let r=this.#i.get(e);return r===void 0?!1:(this.#i.delete(e),e.unpipe(this),await r,!0)}},vP=async(t,e,r)=>{pi(t,$p);let n=new AbortController;try{await Promise.race([FP(t,n),MP(t,e,r,n)])}finally{n.abort(),pi(t,-$p)}},FP=async(t,{signal:e})=>{try{await(0,gs.finished)(t,{signal:e,cleanup:!0})}catch(r){throw td(t,r),r}},MP=async(t,e,r,{signal:n})=>{for await(let[i]of(0,Fr.on)(t,"unpipe",{signal:n}))e.has(i)&&i.emit(r)},ms=t=>{if(typeof t?.pipe!="function")throw new TypeError(`Expected a readable stream, got: \`${typeof t}\`.`)},UP=async({passThroughStream:t,stream:e,streams:r,ended:n,aborted:i,onFinished:o,unpipeEvent:s})=>{pi(t,ed);let a=new AbortController;try{await Promise.race([BP(o,e,a),HP({passThroughStream:t,stream:e,streams:r,ended:n,aborted:i,controller:a}),GP({stream:e,streams:r,ended:n,aborted:i,unpipeEvent:s,controller:a})])}finally{a.abort(),pi(t,-ed)}r.size>0&&r.size===n.size+i.size&&(n.size===0&&i.size>0?ys(t):zP(t))},BP=async(t,e,{signal:r})=>{try{await t,r.aborted||ys(e)}catch(n){r.aborted||td(e,n)}},HP=async({passThroughStream:t,stream:e,streams:r,ended:n,aborted:i,controller:{signal:o}})=>{try{await(0,gs.finished)(e,{signal:o,cleanup:!0,readable:!0,writable:!1}),r.has(e)&&n.add(e)}catch(s){if(o.aborted||!r.has(e))return;rd(s)?i.add(e):nd(t,s)}},GP=async({stream:t,streams:e,ended:r,aborted:n,unpipeEvent:i,controller:{signal:o}})=>{if(await(0,Fr.once)(t,i,{signal:o}),!t.readable)return(0,Fr.once)(o,"abort",{signal:o});e.delete(t),r.delete(t),n.delete(t)},zP=t=>{t.writable&&t.end()},td=(t,e)=>{rd(e)?ys(t):nd(t,e)},rd=t=>t?.code==="ERR_STREAM_PREMATURE_CLOSE",ys=t=>{(t.readable||t.writable)&&t.destroy()},nd=(t,e)=>{t.destroyed||(t.once("error",WP),t.destroy(e))},WP=()=>{},pi=(t,e)=>{let r=t.getMaxListeners();r!==0&&r!==Number.POSITIVE_INFINITY&&t.setMaxListeners(r+e)},$p=2,ed=1;var Ss=w("stream/promises");var nr=(t,e)=>{t.pipe(e),jP(t,e),qP(t,e)},jP=async(t,e)=>{if(!(ve(t)||ve(e))){try{await(0,Ss.finished)(t,{cleanup:!0,readable:!0,writable:!1})}catch{}bs(e)}},bs=t=>{t.writable&&t.end()},qP=async(t,e)=>{if(!(ve(t)||ve(e))){try{await(0,Ss.finished)(e,{cleanup:!0,readable:!1,writable:!0})}catch{}ws(t)}},ws=t=>{t.readable&&t.destroy()};var id=(t,e,r)=>{let n=new Map;for(let[i,{stdioItems:o,direction:s}]of Object.entries(e)){for(let{stream:a}of o.filter(({type:c})=>Oe.has(c)))YP(t,a,s,i);for(let{stream:a}of o.filter(({type:c})=>!Oe.has(c)))KP({subprocess:t,stream:a,direction:s,fdNumber:i,pipeGroups:n,controller:r})}for(let[i,o]of n.entries()){let s=o.length===1?o[0]:xt(o);nr(s,i)}},YP=(t,e,r,n)=>{r==="output"?nr(t.stdio[n],e):nr(e,t.stdio[n]);let i=VP[n];i!==void 0&&(t[i]=e),t.stdio[n]=e},VP=["stdin","stdout","stderr"],KP=({subprocess:t,stream:e,direction:r,fdNumber:n,pipeGroups:i,controller:o})=>{if(e===void 0)return;ZP(e,o);let[s,a]=r==="output"?[e,t.stdio[n]]:[t.stdio[n],e],c=i.get(s)??[];i.set(s,[...c,a])},ZP=(t,{signal:e})=>{ve(t)&&bt(t,JP,e)},JP=2;var sd=w("events");var Rt=[];Rt.push("SIGHUP","SIGINT","SIGTERM");process.platform!=="win32"&&Rt.push("SIGALRM","SIGABRT","SIGVTALRM","SIGXCPU","SIGXFSZ","SIGUSR2","SIGTRAP","SIGSYS","SIGQUIT","SIGIOT");process.platform==="linux"&&Rt.push("SIGIO","SIGPOLL","SIGPWR","SIGSTKFLT");var hi=t=>!!t&&typeof t=="object"&&typeof t.removeListener=="function"&&typeof t.emit=="function"&&typeof t.reallyExit=="function"&&typeof t.listeners=="function"&&typeof t.kill=="function"&&typeof t.pid=="number"&&typeof t.on=="function",Es=Symbol.for("signal-exit emitter"),Ps=globalThis,XP=Object.defineProperty.bind(Object),xs=class{emitted={afterExit:!1,exit:!1};listeners={afterExit:[],exit:[]};count=0;id=Math.random();constructor(){if(Ps[Es])return Ps[Es];XP(Ps,Es,{value:this,writable:!1,enumerable:!1,configurable:!1})}on(e,r){this.listeners[e].push(r)}removeListener(e,r){let n=this.listeners[e],i=n.indexOf(r);i!==-1&&(i===0&&n.length===1?n.length=0:n.splice(i,1))}emit(e,r,n){if(this.emitted[e])return!1;this.emitted[e]=!0;let i=!1;for(let o of this.listeners[e])i=o(r,n)===!0||i;return e==="exit"&&(i=this.emit("afterExit",r,n)||i),i}},mi=class{},QP=t=>({onExit(e,r){return t.onExit(e,r)},load(){return t.load()},unload(){return t.unload()}}),Rs=class extends mi{onExit(){return()=>{}}load(){}unload(){}},Ts=class extends mi{#t=As.platform==="win32"?"SIGINT":"SIGHUP";#r=new xs;#e;#n;#o;#i={};#s=!1;constructor(e){super(),this.#e=e,this.#i={};for(let r of Rt)this.#i[r]=()=>{let n=this.#e.listeners(r),{count:i}=this.#r,o=e;if(typeof o.__signal_exit_emitter__=="object"&&typeof o.__signal_exit_emitter__.count=="number"&&(i+=o.__signal_exit_emitter__.count),n.length===i){this.unload();let s=this.#r.emit("exit",null,r),a=r==="SIGHUP"?this.#t:r;s||e.kill(e.pid,a)}};this.#o=e.reallyExit,this.#n=e.emit}onExit(e,r){if(!hi(this.#e))return()=>{};this.#s===!1&&this.load();let n=r?.alwaysLast?"afterExit":"exit";return this.#r.on(n,e),()=>{this.#r.removeListener(n,e),this.#r.listeners.exit.length===0&&this.#r.listeners.afterExit.length===0&&this.unload()}}load(){if(!this.#s){this.#s=!0,this.#r.count+=1;for(let e of Rt)try{let r=this.#i[e];r&&this.#e.on(e,r)}catch{}this.#e.emit=(e,...r)=>this.#c(e,...r),this.#e.reallyExit=e=>this.#a(e)}}unload(){!this.#s||(this.#s=!1,Rt.forEach(e=>{let r=this.#i[e];if(!r)throw new Error("Listener not defined for signal: "+e);try{this.#e.removeListener(e,r)}catch{}}),this.#e.emit=this.#n,this.#e.reallyExit=this.#o,this.#r.count-=1)}#a(e){return hi(this.#e)?(this.#e.exitCode=e||0,this.#r.emit("exit",this.#e.exitCode,null),this.#o.call(this.#e,this.#e.exitCode)):0}#c(e,...r){let n=this.#n;if(e==="exit"&&hi(this.#e)){typeof r[0]=="number"&&(this.#e.exitCode=r[0]);let i=n.call(this.#e,e,...r);return this.#r.emit("exit",this.#e.exitCode,null),i}else return n.call(this.#e,e,...r)}},As=globalThis.process,{onExit:od,load:iC,unload:oC}=QP(hi(As)?new Ts(As):new Rs);var ad=(t,{cleanup:e,detached:r},{signal:n})=>{if(!e||r)return;let i=od(()=>{t.kill()});(0,sd.addAbortListener)(n,()=>{i()})};var ld=({source:t,sourcePromise:e,boundOptions:r,createNested:n},...i)=>{let o=En(),{destination:s,destinationStream:a,destinationError:c,from:l,unpipeSignal:f}=_P(r,n,i),{sourceStream:u,sourceError:p}=ex(t,l),{options:d,fileDescriptors:m}=qe.get(t);return{sourcePromise:e,sourceStream:u,sourceOptions:d,sourceError:p,destination:s,destinationStream:a,destinationError:c,unpipeSignal:f,fileDescriptors:m,startTime:o}},_P=(t,e,r)=>{try{let{destination:n,pipeOptions:{from:i,to:o,unpipeSignal:s}={}}=$P(t,e,...r),a=In(n,o);return{destination:n,destinationStream:a,from:i,unpipeSignal:s}}catch(n){return{destinationError:n}}},$P=(t,e,r,...n)=>{if(Array.isArray(r))return{destination:e(cd,t)(r,...n),pipeOptions:t};if(typeof r=="string"||r instanceof URL){if(Object.keys(t).length>0)throw new TypeError('Please use .pipe("file", ..., options) or .pipe(execa("file", ..., options)) instead of .pipe(options)("file", ...).');let[i,o,s]=un(r,...n);return{destination:e(cd)(i,o,s),pipeOptions:s}}if(qe.has(r)){if(Object.keys(t).length>0)throw new TypeError("Please use .pipe(options)`command` or .pipe($(options)`command`) instead of .pipe(options)($`command`).");return{destination:r,pipeOptions:n[0]}}throw new TypeError(`The first argument must be a template string, an options object, or an Execa subprocess: ${r}`)},cd=({options:t})=>({options:{...t,stdin:"pipe",piped:!0}}),ex=(t,e)=>{try{return{sourceStream:Jt(t,e)}}catch(r){return{sourceError:r}}};var fd=({sourceStream:t,sourceError:e,destinationStream:r,destinationError:n,fileDescriptors:i,sourceOptions:o,startTime:s})=>{let a=tx({sourceStream:t,sourceError:e,destinationStream:r,destinationError:n});if(a!==void 0)throw ks({error:a,fileDescriptors:i,sourceOptions:o,startTime:s})},tx=({sourceStream:t,sourceError:e,destinationStream:r,destinationError:n})=>{if(e!==void 0&&n!==void 0)return n;if(n!==void 0)return ws(t),n;if(e!==void 0)return bs(r),e},ks=({error:t,fileDescriptors:e,sourceOptions:r,startTime:n})=>_t({error:t,command:ud,escapedCommand:ud,fileDescriptors:e,options:r,startTime:n,isSync:!1}),ud="source.pipe(destination)";var pd=async t=>{let[{status:e,reason:r,value:n=r},{status:i,reason:o,value:s=o}]=await t;if(s.pipedFrom.includes(n)||s.pipedFrom.push(n),i==="rejected")throw s;if(e==="rejected")throw n;return s};var dd=w("stream/promises");var hd=(t,e,r)=>{let n=gi.has(e)?nx(t,e):rx(t,e);return bt(t,ox,r.signal),bt(e,sx,r.signal),ix(e),n},rx=(t,e)=>{let r=xt([t]);return nr(r,e),gi.set(e,r),r},nx=(t,e)=>{let r=gi.get(e);return r.add(t),r},ix=async t=>{try{await(0,dd.finished)(t,{cleanup:!0,readable:!1,writable:!0})}catch{}gi.delete(t)},gi=new WeakMap,ox=2,sx=1;var md=w("util");var gd=(t,e)=>t===void 0?[]:[ax(t,e)],ax=async(t,{sourceStream:e,mergedStream:r,fileDescriptors:n,sourceOptions:i,startTime:o})=>{await(0,md.aborted)(t,e),await r.remove(e);let s=new Error("Pipe canceled by `unpipeSignal` option.");throw ks({error:s,fileDescriptors:n,sourceOptions:i,startTime:o})};var yi=(t,...e)=>{if(ie(e[0]))return yi.bind(void 0,{...t,boundOptions:{...t.boundOptions,...e[0]}});let{destination:r,...n}=ld(t,...e),i=cx({...n,destination:r});return i.pipe=yi.bind(void 0,{...t,source:r,sourcePromise:i,boundOptions:{}}),i},cx=async({sourcePromise:t,sourceStream:e,sourceOptions:r,sourceError:n,destination:i,destinationStream:o,destinationError:s,unpipeSignal:a,fileDescriptors:c,startTime:l})=>{let f=lx(t,i);fd({sourceStream:e,sourceError:n,destinationStream:o,destinationError:s,fileDescriptors:c,sourceOptions:r,startTime:l});let u=new AbortController;try{let p=hd(e,o,u);return await Promise.race([pd(f),...gd(a,{sourceStream:e,mergedStream:p,sourceOptions:r,fileDescriptors:c,startTime:l})])}finally{u.abort()}},lx=(t,e)=>Promise.allSettled([t,e]);var Ed=w("timers/promises");var Sd=w("events"),bd=w("stream");var Si=({subprocessStdout:t,subprocess:e,binary:r,shouldEncode:n,encoding:i,preserveNewlines:o})=>{let s=new AbortController;return ux(e,s),wd({stream:t,controller:s,binary:r,shouldEncode:!t.readableObjectMode&&n,encoding:i,shouldSplit:!t.readableObjectMode,preserveNewlines:o})},ux=async(t,e)=>{try{await t}catch{}finally{e.abort()}},Ls=({stream:t,onStreamEnd:e,lines:r,encoding:n,stripFinalNewline:i,allMixed:o})=>{let s=new AbortController;fx(e,s,t);let a=t.readableObjectMode&&!o;return wd({stream:t,controller:s,binary:n==="buffer",shouldEncode:!a,encoding:n,shouldSplit:!a&&r,preserveNewlines:!i})},fx=async(t,e,r)=>{try{await t}catch{r.destroy()}finally{e.abort()}},wd=({stream:t,controller:e,binary:r,shouldEncode:n,encoding:i,shouldSplit:o,preserveNewlines:s})=>{let a=(0,Sd.on)(t,"data",{signal:e.signal,highWaterMark:yd,highWatermark:yd});return px({onStdoutChunk:a,controller:e,binary:r,shouldEncode:n,encoding:i,shouldSplit:o,preserveNewlines:s})},Os=(0,bd.getDefaultHighWaterMark)(!0),yd=Os,px=async function*({onStdoutChunk:t,controller:e,binary:r,shouldEncode:n,encoding:i,shouldSplit:o,preserveNewlines:s}){let a=dx({binary:r,shouldEncode:n,encoding:i,shouldSplit:o,preserveNewlines:s});try{for await(let[c]of t)yield*Pt(c,a,0)}catch(c){if(!e.signal.aborted)throw c}finally{yield*Ir(a)}},dx=({binary:t,shouldEncode:e,encoding:r,shouldSplit:n,preserveNewlines:i})=>[oi(t,r,!e),ii(t,i,!n,{})].filter(Boolean);var Pd=async({stream:t,onStreamEnd:e,fdNumber:r,encoding:n,buffer:i,maxBuffer:o,lines:s,allMixed:a,stripFinalNewline:c,verboseInfo:l,streamInfo:f})=>{let u=hx({stream:t,onStreamEnd:e,fdNumber:r,encoding:n,allMixed:a,verboseInfo:l,streamInfo:f});if(!i){await Promise.all([mx(t),u]);return}let p=is(c,r),d=Ls({stream:t,onStreamEnd:e,lines:s,encoding:n,stripFinalNewline:p,allMixed:a}),[m]=await Promise.all([gx({stream:t,iterable:d,fdNumber:r,encoding:n,maxBuffer:o,lines:s}),u]);return m},hx=async({stream:t,onStreamEnd:e,fdNumber:r,encoding:n,allMixed:i,verboseInfo:o,streamInfo:{fileDescriptors:s}})=>{if(!ci({stdioItems:s[r]?.stdioItems,encoding:n,verboseInfo:o,fdNumber:r}))return;let a=Ls({stream:t,onStreamEnd:e,lines:!0,encoding:n,stripFinalNewline:!0,allMixed:i});await Np(a,t,r,o)},mx=async t=>{await(0,Ed.setImmediate)(),t.readableFlowing===null&&t.resume()},gx=async({stream:t,stream:{readableObjectMode:e},iterable:r,fdNumber:n,encoding:i,maxBuffer:o,lines:s})=>{try{return e||s?await Kn(r,{maxBuffer:o}):i==="buffer"?new Uint8Array(await Zn(r,{maxBuffer:o})):await Xn(r,{maxBuffer:o})}catch(a){return xd(Lf({error:a,stream:t,readableObjectMode:e,lines:s,encoding:i,fdNumber:n}))}},Is=async t=>{try{return await t}catch(e){return xd(e)}},xd=({bufferedData:t})=>xc(t)?new Uint8Array(t):t;var Td=w("stream/promises"),Mr=async(t,e,r,{isSameDirection:n,stopOnExit:i=!1}={})=>{let o=yx(t,r),s=new AbortController;try{await Promise.race([...i?[r.exitPromise]:[],(0,Td.finished)(t,{cleanup:!0,signal:s.signal})])}catch(a){o.stdinCleanedUp||wx(a,e,r,n)}finally{s.abort()}},yx=(t,{originalStreams:[e],subprocess:r})=>{let n={stdinCleanedUp:!1};return t===e&&Sx(t,r,n),n},Sx=(t,e,r)=>{let{_destroy:n}=t;t._destroy=(...i)=>{bx(e,r),n.call(t,...i)}},bx=({exitCode:t,signalCode:e},r)=>{(t!==null||e!==null)&&(r.stdinCleanedUp=!0)},wx=(t,e,r,n)=>{if(!Ex(t,e,r,n))throw t},Ex=(t,e,r,n=!0)=>r.propagating?Rd(t)||bi(t):(r.propagating=!0,Ns(r,e)===n?Rd(t):bi(t)),Ns=({fileDescriptors:t},e)=>e!=="all"&&t[e].direction==="input",bi=t=>t?.code==="ERR_STREAM_PREMATURE_CLOSE",Rd=t=>t?.code==="EPIPE";var Ad=({subprocess:t,encoding:e,buffer:r,maxBuffer:n,lines:i,stripFinalNewline:o,verboseInfo:s,streamInfo:a})=>t.stdio.map((c,l)=>Ds({stream:c,fdNumber:l,encoding:e,buffer:r[l],maxBuffer:n[l],lines:i[l],allMixed:!1,stripFinalNewline:o,verboseInfo:s,streamInfo:a})),Ds=async({stream:t,fdNumber:e,encoding:r,buffer:n,maxBuffer:i,lines:o,allMixed:s,stripFinalNewline:a,verboseInfo:c,streamInfo:l})=>{if(!t)return;let f=Mr(t,e,l);if(Ns(l,e)){await f;return}let[u]=await Promise.all([Pd({stream:t,onStreamEnd:f,fdNumber:e,encoding:r,buffer:n,maxBuffer:i,lines:o,allMixed:s,stripFinalNewline:a,verboseInfo:c,streamInfo:l}),f]);return u};var kd=({stdout:t,stderr:e},{all:r})=>r&&(t||e)?xt([t,e].filter(Boolean)):void 0,Ld=({subprocess:t,encoding:e,buffer:r,maxBuffer:n,lines:i,stripFinalNewline:o,verboseInfo:s,streamInfo:a})=>Ds({...Px(t,r),fdNumber:"all",encoding:e,maxBuffer:n[1]+n[2],lines:i[1]||i[2],allMixed:xx(t),stripFinalNewline:o,verboseInfo:s,streamInfo:a}),Px=({stdout:t,stderr:e,all:r},[,n,i])=>{let o=n||i;return o?n?i?{stream:r,buffer:o}:{stream:t,buffer:o}:{stream:e,buffer:o}:{stream:r,buffer:o}},xx=({all:t,stdout:e,stderr:r})=>t&&e&&r&&e.readableObjectMode!==r.readableObjectMode;var Cd=w("events");var Od=t=>Wt(t,"ipc"),Id=(t,e)=>{let r=wn(t);We({type:"ipc",verboseMessage:r,fdNumber:"ipc",verboseInfo:e})};var Nd=async({subprocess:t,buffer:e,maxBuffer:r,ipc:n,ipcOutput:i,verboseInfo:o})=>{if(!n)return i;let s=Od(o),a=_e(e,"ipc"),c=_e(r,"ipc");for await(let l of ps({anyProcess:t,channel:t.channel,isSubprocess:!1,ipc:n,shouldAwait:!1,reference:!0}))a&&(Of(t,i,c),i.push(l)),s&&Id(l,o);return i},Dd=async(t,e)=>(await Promise.allSettled([t]),e);var vd=async({subprocess:t,options:{encoding:e,buffer:r,maxBuffer:n,lines:i,timeoutDuration:o,cancelSignal:s,gracefulCancel:a,forceKillAfterDelay:c,stripFinalNewline:l,ipc:f,ipcInput:u},context:p,verboseInfo:d,fileDescriptors:m,originalStreams:g,onInternalError:h,controller:O})=>{let D=Mp(t,p),N={originalStreams:g,fileDescriptors:m,subprocess:t,exitPromise:D,propagating:!1},H=Ad({subprocess:t,encoding:e,buffer:r,maxBuffer:n,lines:i,stripFinalNewline:l,verboseInfo:d,streamInfo:N}),G=Ld({subprocess:t,encoding:e,buffer:r,maxBuffer:n,lines:i,stripFinalNewline:l,verboseInfo:d,streamInfo:N}),$=[],Z=Nd({subprocess:t,buffer:r,maxBuffer:n,ipc:f,ipcOutput:$,verboseInfo:d}),v=Rx(g,t,N),U=Tx(m,N);try{return await Promise.race([Promise.all([{},Bp(D),Promise.all(H),G,Z,tf(t,u),...v,...U]),h,Ax(t,O),...Xu(t,o,p,O),...lu({subprocess:t,cancelSignal:s,gracefulCancel:a,context:p,controller:O}),...Ku({subprocess:t,cancelSignal:s,gracefulCancel:a,forceKillAfterDelay:c,context:p,controller:O})])}catch(_){return p.terminationReason??="other",Promise.all([{error:_},D,Promise.all(H.map(x=>Is(x))),Is(G),Dd(Z,$),Promise.allSettled(v),Promise.allSettled(U)])}},Rx=(t,e,r)=>t.map((n,i)=>n===e.stdio[i]?void 0:Mr(n,i,r)),Tx=(t,e)=>t.flatMap(({stdioItems:r},n)=>r.filter(({value:i,stream:o=i})=>Be(o,{checkOpen:!1})&&!ve(o)).map(({type:i,value:o,stream:s=o})=>Mr(s,n,e,{isSameDirection:Oe.has(i),stopOnExit:i==="native"}))),Ax=async(t,{signal:e})=>{let[r]=await(0,Cd.once)(t,"error",{signal:e});throw r};var Fd=()=>({readableDestroy:new WeakMap,writableFinal:new WeakMap,writableDestroy:new WeakMap}),Ur=(t,e,r)=>{let n=t[r];n.has(e)||n.set(e,[]);let i=n.get(e),o=je();return i.push(o),{resolve:o.resolve.bind(o),promises:i}},ir=async({resolve:t,promises:e},r)=>{t();let[n]=await Promise.race([Promise.allSettled([!0,r]),Promise.all([!1,...e])]);return!n};var Ud=w("stream"),Bd=w("util");var Cs=w("stream/promises");var vs=async t=>{if(t!==void 0)try{await Fs(t)}catch{}},Md=async t=>{if(t!==void 0)try{await Ms(t)}catch{}},Fs=async t=>{await(0,Cs.finished)(t,{cleanup:!0,readable:!1,writable:!0})},Ms=async t=>{await(0,Cs.finished)(t,{cleanup:!0,readable:!0,writable:!1})},wi=async(t,e)=>{if(await t,e)throw e},Ei=(t,e,r)=>{r&&!bi(r)?t.destroy(r):e&&t.destroy()};var Hd=({subprocess:t,concurrentStreams:e,encoding:r},{from:n,binary:i=!0,preserveNewlines:o=!0}={})=>{let s=i||xe.has(r),{subprocessStdout:a,waitReadableDestroy:c}=Us(t,n,e),{readableEncoding:l,readableObjectMode:f,readableHighWaterMark:u}=Bs(a,s),{read:p,onStdoutDataDone:d}=Hs({subprocessStdout:a,subprocess:t,binary:s,encoding:r,preserveNewlines:o}),m=new Ud.Readable({read:p,destroy:(0,Bd.callbackify)(zs.bind(void 0,{subprocessStdout:a,subprocess:t,waitReadableDestroy:c})),highWaterMark:u,objectMode:f,encoding:l});return Gs({subprocessStdout:a,onStdoutDataDone:d,readable:m,subprocess:t}),m},Us=(t,e,r)=>{let n=Jt(t,e),i=Ur(r,n,"readableDestroy");return{subprocessStdout:n,waitReadableDestroy:i}},Bs=({readableEncoding:t,readableObjectMode:e,readableHighWaterMark:r},n)=>n?{readableEncoding:t,readableObjectMode:e,readableHighWaterMark:r}:{readableEncoding:t,readableObjectMode:!0,readableHighWaterMark:Os},Hs=({subprocessStdout:t,subprocess:e,binary:r,encoding:n,preserveNewlines:i})=>{let o=je(),s=Si({subprocessStdout:t,subprocess:e,binary:r,shouldEncode:!r,encoding:n,preserveNewlines:i});return{read(){kx(this,s,o)},onStdoutDataDone:o}},kx=async(t,e,r)=>{try{let{value:n,done:i}=await e.next();i?r.resolve():t.push(n)}catch{}},Gs=async({subprocessStdout:t,onStdoutDataDone:e,readable:r,subprocess:n,subprocessStdin:i})=>{try{await Ms(t),await n,await vs(i),await e,r.readable&&r.push(null)}catch(o){await vs(i),Gd(r,o)}},zs=async({subprocessStdout:t,subprocess:e,waitReadableDestroy:r},n)=>{await ir(r,e)&&(Gd(t,n),await wi(e,n))},Gd=(t,e)=>{Ei(t,t.readable,e)};var zd=w("stream"),Ws=w("util");var Wd=({subprocess:t,concurrentStreams:e},{to:r}={})=>{let{subprocessStdin:n,waitWritableFinal:i,waitWritableDestroy:o}=js(t,r,e),s=new zd.Writable({...qs(n,t,i),destroy:(0,Ws.callbackify)(Vs.bind(void 0,{subprocessStdin:n,subprocess:t,waitWritableFinal:i,waitWritableDestroy:o})),highWaterMark:n.writableHighWaterMark,objectMode:n.writableObjectMode});return Ys(n,s),s},js=(t,e,r)=>{let n=In(t,e),i=Ur(r,n,"writableFinal"),o=Ur(r,n,"writableDestroy");return{subprocessStdin:n,waitWritableFinal:i,waitWritableDestroy:o}},qs=(t,e,r)=>({write:Lx.bind(void 0,t),final:(0,Ws.callbackify)(Ox.bind(void 0,t,e,r))}),Lx=(t,e,r,n)=>{t.write(e,r)?n():t.once("drain",n)},Ox=async(t,e,r)=>{await ir(r,e)&&(t.writable&&t.end(),await e)},Ys=async(t,e,r)=>{try{await Fs(t),e.writable&&e.end()}catch(n){await Md(r),jd(e,n)}},Vs=async({subprocessStdin:t,subprocess:e,waitWritableFinal:r,waitWritableDestroy:n},i)=>{await ir(r,e),await ir(n,e)&&(jd(t,i),await wi(e,i))},jd=(t,e)=>{Ei(t,t.writable,e)};var qd=w("stream"),Yd=w("util");var Vd=({subprocess:t,concurrentStreams:e,encoding:r},{from:n,to:i,binary:o=!0,preserveNewlines:s=!0}={})=>{let a=o||xe.has(r),{subprocessStdout:c,waitReadableDestroy:l}=Us(t,n,e),{subprocessStdin:f,waitWritableFinal:u,waitWritableDestroy:p}=js(t,i,e),{readableEncoding:d,readableObjectMode:m,readableHighWaterMark:g}=Bs(c,a),{read:h,onStdoutDataDone:O}=Hs({subprocessStdout:c,subprocess:t,binary:a,encoding:r,preserveNewlines:s}),D=new qd.Duplex({read:h,...qs(f,t,u),destroy:(0,Yd.callbackify)(Ix.bind(void 0,{subprocessStdout:c,subprocessStdin:f,subprocess:t,waitReadableDestroy:l,waitWritableFinal:u,waitWritableDestroy:p})),readableHighWaterMark:g,writableHighWaterMark:f.writableHighWaterMark,readableObjectMode:m,writableObjectMode:f.writableObjectMode,encoding:d});return Gs({subprocessStdout:c,onStdoutDataDone:O,readable:D,subprocess:t,subprocessStdin:f}),Ys(f,D,c),D},Ix=async({subprocessStdout:t,subprocessStdin:e,subprocess:r,waitReadableDestroy:n,waitWritableFinal:i,waitWritableDestroy:o},s)=>{await Promise.all([zs({subprocessStdout:t,subprocess:r,waitReadableDestroy:n},s),Vs({subprocessStdin:e,subprocess:r,waitWritableFinal:i,waitWritableDestroy:o},s)])};var Ks=(t,e,{from:r,binary:n=!1,preserveNewlines:i=!1}={})=>{let o=n||xe.has(e),s=Jt(t,r),a=Si({subprocessStdout:s,subprocess:t,binary:o,shouldEncode:!0,encoding:e,preserveNewlines:i});return Nx(a,s,t)},Nx=async function*(t,e,r){try{yield*t}finally{e.readable&&e.destroy(),await r}};var Kd=(t,{encoding:e})=>{let r=Fd();t.readable=Hd.bind(void 0,{subprocess:t,concurrentStreams:r,encoding:e}),t.writable=Wd.bind(void 0,{subprocess:t,concurrentStreams:r}),t.duplex=Vd.bind(void 0,{subprocess:t,concurrentStreams:r,encoding:e}),t.iterable=Ks.bind(void 0,t,e),t[Symbol.asyncIterator]=Ks.bind(void 0,t,e,{})};var Zd=(t,e)=>{for(let[r,n]of Cx){let i=n.value.bind(e);Reflect.defineProperty(t,r,{...n,value:i})}},Dx=(async()=>{})().constructor.prototype,Cx=["then","catch","finally"].map(t=>[t,Reflect.getOwnPropertyDescriptor(Dx,t)]);var Qd=(t,e,r,n)=>{let{file:i,commandArguments:o,command:s,escapedCommand:a,startTime:c,verboseInfo:l,options:f,fileDescriptors:u}=vx(t,e,r),{subprocess:p,promise:d}=Mx({file:i,commandArguments:o,options:f,startTime:c,verboseInfo:l,command:s,escapedCommand:a,fileDescriptors:u});return p.pipe=yi.bind(void 0,{source:p,sourcePromise:d,boundOptions:{},createNested:n}),Zd(p,d),qe.set(p,{options:f,fileDescriptors:u}),p},vx=(t,e,r)=>{let{command:n,escapedCommand:i,startTime:o,verboseInfo:s}=Pn(t,e,r),{file:a,commandArguments:c,options:l}=jn(t,e,r),f=Fx(l),u=_p(f,s);return{file:a,commandArguments:c,command:n,escapedCommand:i,startTime:o,verboseInfo:s,options:f,fileDescriptors:u}},Fx=({timeout:t,signal:e,...r})=>{if(e!==void 0)throw new TypeError('The "signal" option has been renamed to "cancelSignal" instead.');return{...r,timeoutDuration:t}},Mx=({file:t,commandArguments:e,options:r,startTime:n,verboseInfo:i,command:o,escapedCommand:s,fileDescriptors:a})=>{let c;try{c=(0,Xd.spawn)(t,e,r)}catch(m){return Jp({error:m,command:o,escapedCommand:s,fileDescriptors:a,options:r,startTime:n,verboseInfo:i})}let l=new AbortController;(0,Jd.setMaxListeners)(Number.POSITIVE_INFINITY,l.signal);let f=[...c.stdio];id(c,a,l),ad(c,r,l);let u={},p=je();c.kill=su.bind(void 0,{kill:c.kill.bind(c),options:r,onInternalError:p,context:u,controller:l}),c.all=kd(c,r),Kd(c,r),Yp(c,r);let d=Ux({subprocess:c,options:r,startTime:n,verboseInfo:i,fileDescriptors:a,originalStreams:f,command:o,escapedCommand:s,context:u,onInternalError:p,controller:l});return{subprocess:c,promise:d}},Ux=async({subprocess:t,options:e,startTime:r,verboseInfo:n,fileDescriptors:i,originalStreams:o,command:s,escapedCommand:a,context:c,onInternalError:l,controller:f})=>{let[u,[p,d],m,g,h]=await vd({subprocess:t,options:e,context:c,verboseInfo:n,fileDescriptors:i,originalStreams:o,onInternalError:l,controller:f});f.abort(),l.resolve();let O=m.map((H,G)=>et(H,e,G)),D=et(g,e,"all"),N=Bx({errorInfo:u,exitCode:p,signal:d,stdio:O,all:D,ipcOutput:h,context:c,options:e,command:s,escapedCommand:a,startTime:r});return $t(N,n,e)},Bx=({errorInfo:t,exitCode:e,signal:r,stdio:n,all:i,ipcOutput:o,context:s,options:a,command:c,escapedCommand:l,startTime:f})=>"error"in t?Or({error:t.error,command:c,escapedCommand:l,timedOut:s.terminationReason==="timeout",isCanceled:s.terminationReason==="cancel"||s.terminationReason==="gracefulCancel",isGracefullyCanceled:s.terminationReason==="gracefulCancel",isMaxBuffer:t.error instanceof Ye,isForcefullyTerminated:s.isForcefullyTerminated,exitCode:e,signal:r,stdio:n,all:i,ipcOutput:o,options:a,startTime:f,isSync:!1}):_n({command:c,escapedCommand:l,stdio:n,all:i,ipcOutput:o,options:a,startTime:f});var Pi=(t,e)=>{let r=Object.fromEntries(Object.entries(e).map(([n,i])=>[n,Hx(n,t[n],i)]));return{...t,...r}},Hx=(t,e,r)=>Gx.has(t)&&ie(e)&&ie(r)?{...e,...r}:r,Gx=new Set(["env",...go]);var lt=(t,e,r,n)=>{let i=(s,a,c)=>lt(s,a,r,c),o=(...s)=>zx({mapArguments:t,deepOptions:r,boundOptions:e,setBoundExeca:n,createNested:i},...s);return n!==void 0&&n(o,i,e),o},zx=({mapArguments:t,deepOptions:e={},boundOptions:r={},setBoundExeca:n,createNested:i},o,...s)=>{if(ie(o))return i(t,Pi(r,o),n);let{file:a,commandArguments:c,options:l,isSync:f}=Wx({mapArguments:t,firstArgument:o,nextArguments:s,deepOptions:e,boundOptions:r});return f?zp(a,c,l):Qd(a,c,l,i)},Wx=({mapArguments:t,firstArgument:e,nextArguments:r,deepOptions:n,boundOptions:i})=>{let o=Ic(e)?Nc(e,r):[e,...r],[s,a,c]=un(...o),l=Pi(Pi(n,i),c),{file:f=s,commandArguments:u=a,options:p=l,isSync:d=!1}=t({file:s,commandArguments:a,options:l});return{file:f,commandArguments:u,options:p,isSync:d}};var _d=({file:t,commandArguments:e})=>eh(t,e),$d=({file:t,commandArguments:e})=>({...eh(t,e),isSync:!0}),eh=(t,e)=>{if(e.length>0)throw new TypeError(`The command and its arguments must be passed as a single string: ${t} ${e}.`);let[r,...n]=jx(t);return{file:r,commandArguments:n}},jx=t=>{if(typeof t!="string")throw new TypeError(`The command must be a string: ${String(t)}.`);let e=t.trim();if(e==="")return[];let r=[];for(let n of e.split(qx)){let i=r.at(-1);i&&i.endsWith("\\")?r[r.length-1]=`${i.slice(0,-1)} ${n}`:r.push(n)}return r},qx=/ +/g;var th=(t,e,r)=>{t.sync=e(Yx,r),t.s=t.sync},rh=({options:t})=>nh(t),Yx=({options:t})=>({...nh(t),isSync:!0}),nh=t=>({options:{...Vx(t),...t}}),Vx=({input:t,inputFile:e,stdio:r})=>t===void 0&&e===void 0&&r===void 0?{stdin:"inherit"}:{},ih={preferLocal:!0};var oh=lt(()=>({})),sh=lt(()=>({isSync:!0})),OF=lt(_d),IF=lt($d),NF=lt(Qu),DF=lt(rh,{},ih,th),{sendMessage:CF,getOneMessage:vF,getEachMessage:FF,getCancelSignal:MF}=Vp();var ye=he(w("typanion"));var Gi=w("@yarnpkg/cli"),me=w("@yarnpkg/core"),Ge=w("@yarnpkg/fslib"),ht=w("clipanion");var vt=w("@yarnpkg/core"),M=w("@yarnpkg/fslib"),Ba=he(dm()),ug=he(sg()),fg=w("zlib"),eA=["/package.json","/readme","/readme.*","/license","/license.*","/licence","/licence.*","/changelog","/changelog.*"],tA=["/package.tgz",".github",".git",".hg","node_modules",".npmignore",".gitignore",".#*",".DS_Store"];async function pg(t){return!!(vt.scriptUtils.hasWorkspaceScript(t,"prepack")||vt.scriptUtils.hasWorkspaceScript(t,"postpack"))}async function dg(t,{report:e},r){await vt.scriptUtils.maybeExecuteWorkspaceLifecycleScript(t,"prepack",{report:e});try{let n=M.ppath.join(t.cwd,vt.Manifest.fileName);await M.xfs.existsPromise(n)&&await t.manifest.loadFile(n,{baseFs:M.xfs}),await r()}finally{await vt.scriptUtils.maybeExecuteWorkspaceLifecycleScript(t,"postpack",{report:e})}}async function hg(t,e){typeof e>"u"&&(e=await Ha(t));let r=new Set;for(let o of t.manifest.publishConfig?.executableFiles??new Set)r.add(M.ppath.normalize(o));for(let o of t.manifest.bin.values())r.add(M.ppath.normalize(o));let n=ug.default.pack();process.nextTick(async()=>{for(let o of e){let s=M.ppath.normalize(o),a=M.ppath.resolve(t.cwd,s),c=M.ppath.join("package",s),l=await M.xfs.lstatPromise(a),f={name:c,mtime:new Date(M.constants.SAFE_TIME*1e3)},u=r.has(s)?493:420,p,d,m=new Promise((h,O)=>{p=h,d=O}),g=h=>{h?d(h):p()};if(l.isFile()){let h;s==="package.json"?h=Buffer.from(JSON.stringify(await rA(t),null,2)):h=await M.xfs.readFilePromise(a),n.entry({...f,mode:u,type:"file"},h,g)}else l.isSymbolicLink()?n.entry({...f,mode:u,type:"symlink",linkname:await M.xfs.readlinkPromise(a)},g):g(new Error(`Unsupported file type ${l.mode} for ${M.npath.fromPortablePath(s)}`));await m}n.finalize()});let i=(0,fg.createGzip)();return n.pipe(i),i}async function rA(t){let e=JSON.parse(JSON.stringify(t.manifest.raw));return await t.project.configuration.triggerHook(r=>r.beforeWorkspacePacking,t,e),e}async function Ha(t){let e=t.project,r=e.configuration,n={accept:[],reject:[]};for(let u of tA)n.reject.push(u);for(let u of eA)n.accept.push(u);n.reject.push(r.get("rcFilename"));let i=u=>{if(u===null||!u.startsWith(`${t.cwd}/`))return;let p=M.ppath.relative(t.cwd,u),d=M.ppath.resolve(M.PortablePath.root,p);n.reject.push(d)};i(M.ppath.resolve(e.cwd,M.Filename.lockfile)),i(r.get("cacheFolder")),i(r.get("globalFolder")),i(r.get("installStatePath")),i(r.get("virtualFolder")),i(r.get("yarnPath")),await r.triggerHook(u=>u.populateYarnPaths,e,u=>{i(u)});for(let u of e.workspaces){let p=M.ppath.relative(t.cwd,u.cwd);p!==""&&!p.match(/^(\.\.)?\//)&&n.reject.push(`/${p}`)}let o={accept:[],reject:[]},s=t.manifest.publishConfig?.main??t.manifest.main,a=t.manifest.publishConfig?.module??t.manifest.module,c=t.manifest.publishConfig?.browser??t.manifest.browser,l=t.manifest.publishConfig?.bin??t.manifest.bin;s!=null&&o.accept.push(M.ppath.resolve(M.PortablePath.root,s)),a!=null&&o.accept.push(M.ppath.resolve(M.PortablePath.root,a)),typeof c=="string"&&o.accept.push(M.ppath.resolve(M.PortablePath.root,c));for(let u of l.values())o.accept.push(M.ppath.resolve(M.PortablePath.root,u));if(c instanceof Map)for(let[u,p]of c.entries())o.accept.push(M.ppath.resolve(M.PortablePath.root,u)),typeof p=="string"&&o.accept.push(M.ppath.resolve(M.PortablePath.root,p));let f=t.manifest.files!==null;if(f){o.reject.push("/*");for(let u of t.manifest.files)mg(o.accept,u,{cwd:M.PortablePath.root})}return await nA(t.cwd,{hasExplicitFileList:f,globalList:n,ignoreList:o})}async function nA(t,{hasExplicitFileList:e,globalList:r,ignoreList:n}){let i=[],o=new M.JailFS(t),s=[[M.PortablePath.root,[n]]];for(;s.length>0;){let[a,c]=s.pop(),l=await o.lstatPromise(a);if(!cg(a,{globalList:r,ignoreLists:l.isDirectory()?null:c}))if(l.isDirectory()){let f=await o.readdirPromise(a),u=!1,p=!1;if(!e||a!==M.PortablePath.root)for(let g of f)u=u||g===".gitignore",p=p||g===".npmignore";let d=p?await ag(o,a,".npmignore"):u?await ag(o,a,".gitignore"):null,m=d!==null?[d].concat(c):c;cg(a,{globalList:r,ignoreLists:c})&&(m=[...c,{accept:[],reject:["**/*"]}]);for(let g of f)s.push([M.ppath.resolve(a,g),m])}else(l.isFile()||l.isSymbolicLink())&&i.push(M.ppath.relative(M.PortablePath.root,a))}return i.sort()}async function ag(t,e,r){let n={accept:[],reject:[]},i=await t.readFilePromise(M.ppath.join(e,r),"utf8");for(let o of i.split(/\n/g))mg(n.reject,o,{cwd:e});return n}function iA(t,{cwd:e}){let r=t[0]==="!";return r&&(t=t.slice(1)),t.match(/\.{0,1}\//)&&(t=M.ppath.resolve(e,t)),r&&(t=`!${t}`),t}function mg(t,e,{cwd:r}){let n=e.trim();n===""||n[0]==="#"||t.push(iA(n,{cwd:r}))}function cg(t,{globalList:e,ignoreLists:r}){let n=Hi(t,e.accept);if(n!==0)return n===2;let i=Hi(t,e.reject);if(i!==0)return i===1;if(r!==null)for(let o of r){let s=Hi(t,o.accept);if(s!==0)return s===2;let a=Hi(t,o.reject);if(a!==0)return a===1}return!1}function Hi(t,e){let r=e,n=[];for(let i=0;i<e.length;++i)e[i][0]!=="!"?r!==e&&r.push(e[i]):(r===e&&(r=e.slice(0,i)),n.push(e[i].slice(1)));return lg(t,n)?2:lg(t,r)?1:0}function lg(t,e){let r=e,n=[];for(let i=0;i<e.length;++i)e[i].includes("/")?r!==e&&r.push(e[i]):(r===e&&(r=e.slice(0,i)),n.push(e[i]));return!!(Ba.default.isMatch(t,r,{dot:!0,nocase:!0})||Ba.default.isMatch(t,n,{dot:!0,basename:!0,nocase:!0}))}var Ft=class extends Gi.BaseCommand{constructor(){super(...arguments);this.installIfNeeded=ht.Option.Boolean("--install-if-needed",!1,{description:"Run a preliminary `yarn install` if the package contains build scripts"});this.dryRun=ht.Option.Boolean("-n,--dry-run",!1,{description:"Print the file paths without actually generating the package archive"});this.json=ht.Option.Boolean("--json",!1,{description:"Format the output as an NDJSON stream"});this.out=ht.Option.String("-o,--out",{description:"Create the archive at the specified path"});this.filename=ht.Option.String("--filename",{hidden:!0})}async execute(){let r=await me.Configuration.find(this.context.cwd,this.context.plugins),{project:n,workspace:i}=await me.Project.find(r,this.context.cwd);if(!i)throw new Gi.WorkspaceRequiredError(n.cwd,this.context.cwd);process.env.YARNNIX_PACK_DIRECTORY!=null&&(i.cwd=process.env.YARNNIX_PACK_DIRECTORY),await pg(i)&&(this.installIfNeeded?await n.install({cache:await me.Cache.find(r),report:new me.ThrowReport}):await n.restoreInstallState());let o=this.out??this.filename,s=typeof o<"u"?Ge.ppath.resolve(this.context.cwd,sA(o,{workspace:i})):Ge.ppath.resolve(i.cwd,"package.tgz");return(await me.StreamReport.start({configuration:r,stdout:this.context.stdout,json:this.json},async c=>{await dg(i,{report:c},async()=>{c.reportJson({base:Ge.npath.fromPortablePath(i.cwd)});let l=await Ha(i);for(let f of l)c.reportInfo(null,Ge.npath.fromPortablePath(f)),c.reportJson({location:Ge.npath.fromPortablePath(f)});if(!this.dryRun){let f=await hg(i,l),u=Ge.xfs.createWriteStream(s);f.pipe(u),await new Promise(p=>{u.on("finish",p)})}}),this.dryRun||(c.reportInfo(me.MessageName.UNNAMED,`Package archive generated in ${me.formatUtils.pretty(r,s,me.formatUtils.Type.PATH)}`),c.reportJson({output:Ge.npath.fromPortablePath(s)}))})).exitCode()}};Ft.paths=[["nix","pack"]],Ft.usage=ht.Command.Usage({description:"generate a tarball from the active workspace",details:"\n      This command will turn the active workspace into a compressed archive suitable for publishing. The archive will by default be stored at the root of the workspace (`package.tgz`).\n\n      If the `-o,---out` is set the archive will be created at the specified path. The `%s` and `%v` variables can be used within the path and will be respectively replaced by the package name and version.\n    ",examples:[["Create an archive from the active workspace","yarn pack"],["List the files that would be made part of the workspace's archive","yarn pack --dry-run"],["Name and output the archive in a dedicated folder","yarn pack --out /artifacts/%s-%v.tgz"]]});function sA(t,{workspace:e}){let r=t.replace("%s",aA(e)).replace("%v",cA(e));return Ge.npath.toPortablePath(r)}function aA(t){return t.manifest.name!==null?me.structUtils.slugifyIdent(t.manifest.name):"package"}function cA(t){return t.manifest.version!==null?t.manifest.version:"unknown"}var uA=gg(),Ga;function fA(t,e){for(let[r,n]of t.entries())if(n===e)return r}function pA(){if(Ga)return Ga;let t=JSON.parse(sh("nix",["eval","--impure","--json","--expr","builtins.currentSystem"]).stdout);return Ga=t,t}async function dA(t){try{let e=["eval","--json","--impure","--expr",uA+`

        getPackages (import ${t}).packages
      `],{stdout:r}=await oh("nix",e,{stderr:"ignore"});return JSON.parse(r)}catch{return null}}var zi=class extends Mt.BaseCommand{constructor(){super(...arguments);this.locator=ge.Option.String({validator:ye.isString()});this.outDirectory=ge.Option.String({validator:ye.isString()})}async execute(){let r=await I.Configuration.find(process.cwd(),this.context.plugins),{project:n,workspace:i}=await I.Project.find(r,process.cwd()),o=r.makeFetcher(),s=await I.StreamReport.start({configuration:r,stdout:this.context.stdout,includeLogs:!this.context.quiet},async a=>{r.values.set("enableMirror",!1);let c={...JSON.parse(this.locator),locatorHash:"",identHash:""};I.structUtils.isVirtualLocator(c)&&(c=I.structUtils.devirtualizeLocator(c));let l={checksums:new Map,project:n,cache:new I.Cache(this.outDirectory,{check:!1,configuration:r,immutable:!1}),fetcher:o,report:a},f=await o.fetch(c,l);be.renameSync(f.packageFs.target,ke.join(this.outDirectory,"output.zip"))})}};zi.paths=[["nix","fetch-by-locator"]];var Wi=class extends Mt.BaseCommand{constructor(){super(...arguments);this.packageRegistryDataPath=ge.Option.String({validator:ye.isString()})}async execute(){let r=await I.Configuration.find(process.cwd(),this.context.plugins),n=new I.Project(process.cwd(),{configuration:r});await n.setupResolutions();let i=JSON.parse(be.readFileSync(this.packageRegistryDataPath,"utf8")),o=Object.values(i).filter(s=>!!s?.manifest);for(let s of o){let a=Object.assign({},s.manifest,{name:s.name,reference:s.reference}),c=new Map,l=new Map(Object.entries(a.bin??{})),f=I.structUtils.makeIdent(a.scope,a.flatName),u=I.structUtils.makeLocator(f,a.reference),p=I.structUtils.makeDescriptor(f,a.descriptorRange);a.locatorHash=u.locatorHash,a.descriptorHash=p.descriptorHash,s.manifest.locatorHash=u.locatorHash,s.manifest.descriptorHash=p.descriptorHash;let d={...u,languageName:a.languageName,linkType:a.linkType,conditions:null,dependencies:c,bin:l};n.originalPackages.set(a.locatorHash,d),n.storedResolutions.set(a.descriptorHash,a.locatorHash),a.checksum!=null&&n.storedChecksums.set(a.locatorHash,a.checksum),n.storedDescriptors.set(a.descriptorHash,p)}for(let s of o){let a=n.originalPackages.get(s.manifest.locatorHash);if(!a)continue;let c=s.packageDependencies??{};for(let l of Object.keys(c)){let[f,u]=c[l],p=o.find(d=>d?.name===f&&d?.reference===u);if(p?.manifest?.descriptorHash!=null){let d=n.storedDescriptors.get(p.manifest.descriptorHash);d!=null&&a.dependencies.set(p.manifest.descriptorHash,d)}}}n.storedPackages=n.originalPackages,await n.persistLockfile()}};Wi.paths=[["nix","create-lockfile"]];var ji=class extends Mt.BaseCommand{constructor(){super(...arguments);this.locator=ge.Option.String({validator:ye.isString()});this.tgzPath=ge.Option.String({validator:ye.isString()});this.outPath=ge.Option.String({validator:ye.isString()})}async execute(){let r=await I.Configuration.find(process.cwd(),this.context.plugins),{project:n,workspace:i}=await I.Project.find(r,process.cwd()),o={...JSON.parse(this.locator),locatorHash:"",identHash:""},{path:s}=await I.tgzUtils.convertToZip(be.readFileSync(this.tgzPath),{compressionLevel:n.configuration.get("compressionLevel"),prefixPath:I.structUtils.getIdentVendorPath(o),stripComponents:1});be.copyFileSync(s,this.outPath)}};ji.paths=[["nix","convert-to-zip"]];var qi=class extends Mt.BaseCommand{constructor(){super(...arguments);this.outDirectory=ge.Option.String({validator:ye.isString()});this.packageRegistryDataPath=ge.Option.String({validator:ye.isString()});this.topLevelPackageLocator=ge.Option.String({validator:ye.isString()})}async execute(){let r=await I.Configuration.find(process.cwd(),this.context.plugins),{project:n,workspace:i}=await I.Project.find(r,process.cwd()),o=(0,yg.getPnpPath)({cwd:this.outDirectory}),s=n.configuration.get("pnpFallbackMode"),a=[],c=s!=="none",l=new Map,f=I.miscUtils.buildIgnorePattern([".yarn/sdks/**",...n.configuration.get("pnpIgnorePatterns")]),u=n.configuration.get("pnpShebang"),p=new Map,d=JSON.parse(be.readFileSync(this.packageRegistryDataPath,"utf8")),m=null,g=be.realpathSync(this.outDirectory);for(let D of Object.keys(d)){let N=d[D];if(!N)continue;let H=I.structUtils.makeIdent(N.manifest.scope,N.manifest.flatName),G=I.structUtils.makeLocator(H,N.reference),$=I.structUtils.isVirtualLocator(N),Z=new Map,v=new Set;for(let K of N.manifest?.packagePeers??[])Z.set(K,null),v.add(K);if(N.packageDependencies!=null)for(let K of Object.keys(N.packageDependencies))Z.set(K,N.packageDependencies[K]);let U=N.packageLocation??N.drvPath+"/node_modules/"+N.name,_=ke.relative(g,U),x=(_.startsWith("../")?_:"./"+_)+"/";$&&(x="./"+Ne.VirtualFS.makeVirtualPath("./.yarn/__virtual__",I.structUtils.slugifyLocator(G),_)+"/");let X={packageLocation:x,packageDependencies:Z,packagePeers:v,linkType:N.linkType};I.miscUtils.getMapWithDefault(p,N.name).set(N.reference,X),G.reference.startsWith("workspace:")&&a.push({name:I.structUtils.stringifyIdent(G),reference:G.reference}),`${N.name}@${N.reference}`===this.topLevelPackageLocator&&(m=X)}if(m!=null)I.miscUtils.getMapWithDefault(p,null).set(null,m);else throw new Error("Could not determine topLevelPackage, this is NEEDED for the .pnp.cjs to be correctly generated");let O=(0,bg.generateInlinedScript)({dependencyTreeRoots:a,enableTopLevelFallback:c,fallbackExclusionList:s==="dependencies-only"?a:[],fallbackPool:l,ignorePattern:f,packageRegistry:p,shebang:u});await Ne.xfs.changeFilePromise(o.cjs,O,{automaticNewlines:!0,mode:493})}};qi.paths=[["nix","generate-pnp-file"]];var Yi=class extends Mt.BaseCommand{constructor(){super(...arguments);this.binWrappersOutDirectory=ge.Option.String({validator:ye.isString()});this.pnpOutDirectory=ge.Option.String({validator:ye.isString()});this.packageRegistryDataPath=ge.Option.String({validator:ye.isString()});this.topLevelPackageLocator=ge.Option.String({validator:ye.isString()})}async execute(){let r=JSON.parse(be.readFileSync(this.packageRegistryDataPath,"utf8")),n=be.realpathSync(this.pnpOutDirectory);for(let i of Object.keys(r)){let o=r[i];if(!o)continue;let s=I.structUtils.makeIdent(o.manifest.scope,o.manifest.flatName),a=I.structUtils.makeLocator(s,o.reference),c=I.structUtils.isVirtualLocator(o),l=o.packageLocation??o.drvPath+"/node_modules/"+o.name,f=ke.relative(n,l),u=l;if(`${o.name}@${o.reference}`!==this.topLevelPackageLocator){c&&(u=ke.join(n,Ne.VirtualFS.makeVirtualPath("./.yarn/__virtual__",I.structUtils.slugifyLocator(a),f)));for(let d of Object.keys(o?.manifest?.bin??{})){let m=ke.join(u,o.manifest.bin[d]);await Ne.xfs.writeFilePromise(ke.join(this.binWrappersOutDirectory,d),`node ${m} "$@"`,{mode:493})}}}}};Yi.paths=[["nix","make-path-wrappers"]];var Vi=class extends Mt.BaseCommand{constructor(){super(...arguments);this.locator=ge.Option.String({validator:ye.isString()});this.pnpRootDirectory=ge.Option.String({validator:ye.isString()});this.packageDirectory=ge.Option.String({validator:ye.isString()})}async execute(){let r=await I.Configuration.find(process.cwd(),this.context.plugins),{project:n,workspace:i}=await I.Project.find(r,process.cwd()),o=JSON.parse(this.locator),s=I.structUtils.makeIdent(o.scope,o.name),a=I.structUtils.makeLocator(s,o.reference),c=n.originalPackages.get(a.locatorHash);n.cwd=this.pnpRootDirectory,n.storedPackages=n.originalPackages;let l=await Wa.ZipOpenFS.openPromise(async f=>{let u=n.configuration.getLinkers(),p={project:n,report:new I.StreamReport({stdout:new za.PassThrough,configuration:r})},d=u.find(O=>O.supportsPackage(c,p));if(!d)throw new Error(`The package ${I.structUtils.prettyLocator(n.configuration,c)} isn't supported by any of the available linkers`);let m=await d.findPackageLocation(c,p),g=new Ne.CwdFS(m,{baseFs:f});return await I.Manifest.find(Ne.PortablePath.dot,{baseFs:g})});for(let f of["preinstall","install","postinstall"]){if(!l.scripts.has(f))continue;let u=await I.scriptUtils.executePackageScript(c,f,[],{cwd:this.packageDirectory,project:n,stdin:process.stdin,stdout:process.stdout,stderr:process.stderr});if(u>0)return u}}};Vi.paths=[["nix","run-build-scripts"]];var hA={hooks:{afterAllInstalled:async(t,e)=>{let r=t.configuration.getLinkers(),n={project:t,report:null},i=new Map(r.map(g=>{let h=g.makeInstaller(n),O=g.getCustomDataKey(),D=t.linkersCustomData.get(O);return typeof D<"u"&&h.attachCustomData(D),[g,h]})),o=await I.Cache.find(t.configuration),s=t.configuration.makeFetcher(),a={checksums:new Map,project:t,cache:null,fetcher:s,report:null},c=t.configuration.makeResolver(),l={project:t,report:e.report,resolver:c},f={};for(let[g,h]of t.storedPackages){let O=I.structUtils.isVirtualLocator(h),D=O?t.storedPackages.get(I.structUtils.devirtualizeLocator(h).locatorHash):h,N=r.find(L=>L.supportsPackage(D,n)),H=i.get(N),G=s.getLocalPath(D,a);if(!G){let L=Sg.fileUtils.parseSpec(D.reference);if(L?.parentLocator!=null&&L?.path!=null){let y=s.getLocalPath(L.parentLocator,a),b=ke.resolve(y,L.path);b!=null&&(G=b)}}let $=G!=null?"./"+ke.relative(t.cwd,G):null,Z=h.reference.startsWith("workspace:")?`./${h.reference.substring(10)}`:$??null,v=h.bin!=null?Object.fromEntries(h.bin):null,U=Z!=null?!0:H?.shouldBeUnplugged!=null?H.customData.store.get(h.locatorHash)!=null?H.shouldBeUnplugged(h,H.customData.store.get(h.locatorHash),t.getDependencyMeta(I.structUtils.isVirtualLocator(h)?I.structUtils.devirtualizeLocator(h):h,h.version)):!1:!0,_=!Z&&!U,x=Z!=null&&h.reference.startsWith("patch:"),X=null;if(h.conditions!=null){let L=h.conditions.split("&").map(b=>b.trim().split("=")),y=[];for(let b of L){let C=b[0],F=b[1];if(C==="os")F==="linux"?y.push("stdenv.isLinux"):F==="darwin"?y.push("stdenv.isDarwin"):y.push("false");else if(C==="cpu"){let S={ia32:"stdenv.isi686",x64:"stdenv.isx86_64",arm:"stdenv.isAarch32",arm64:"stdenv.isAarch64",wasm32:"true"};S[F]!=null?y.push(S[F]):y.push("false")}else C==="libc"&&F!=="glibc"&&y.push("false")}y.length>0&&(X=`stdenv: ${y.map(b=>`(${b})`).join(" && ")}`)}let K=h.dependencies,le=new Map;if(D.reference.startsWith("workspace:")){let L=await Wa.ZipOpenFS.openPromise(async y=>{let b=t.configuration.getLinkers(),C={project:t,report:new I.StreamReport({stdout:new za.PassThrough,configuration:t.configuration})},F=b.find(z=>z.supportsPackage(D,C));if(!F)throw new Error(`The package ${I.structUtils.prettyLocator(t.configuration,h)} isn't supported by any of the available linkers`);let S=await F.findPackageLocation(D,C),B=new Ne.CwdFS(S,{baseFs:y});return await I.Manifest.find(Ne.PortablePath.dot,{baseFs:B})});L!=null&&(K=new Map,le=new Map,L.devDependencies&&(Array.from(L.devDependencies).map(([y,b])=>le.set(y,h.dependencies.get(y))),Array.from(h.dependencies).map(([y,b])=>le.has(y)?null:K.set(y,b))))}let E=(await Promise.all(Array.from(K).map(async([L,y])=>{let b=t.storedResolutions.get(y.descriptorHash),C=b!=null?t.storedPackages.get(b):null;return C?{key:L,name:I.structUtils.stringifyIdent(y),packageManifestId:I.structUtils.stringifyIdent(C)+"@"+C.reference}:(console.log("failed to resolve",y),null)}))).filter(L=>!!L),ue=(await Promise.all(Array.from(le).map(async([L,y])=>{let b=t.storedResolutions.get(y.descriptorHash),C=b!=null?t.storedPackages.get(b):null;return C?{key:L,name:I.structUtils.stringifyIdent(y),packageManifestId:I.structUtils.stringifyIdent(C)+"@"+C.reference}:(console.log("failed to resolve",y),null)}))).filter(L=>!!L),Y=[];for(let L of h.peerDependencies.values())Y.push(I.structUtils.stringifyIdent(L));let we=I.structUtils.stringifyIdent(h)+"@"+h.reference,te;if(Z!=null&&!x)te=null;else if(_){let L=t.storedChecksums.get(h.locatorHash);L!=null?te=L.substring(L.indexOf("/")+1):te=null}else if(U){let L=t.storedChecksums.get(h.locatorHash);if(L!=null&&(te=L.substring(L.indexOf("/")+1)),!te)try{let y=o.getLocatorPath(h,null);te=await I.hashUtils.checksumFile(y)}catch{te=null}}let de=fA(t.storedResolutions,h.locatorHash),k=t.storedDescriptors.get(de),A=t.storedChecksums.get(h.locatorHash);f[we]={isVirtual:O,canonicalPackage:D,name:I.structUtils.stringifyIdent(h),reference:h.reference,linkType:h.linkType,outputName:[I.structUtils.stringifyIdent(h),h.version,h.locatorHash.substring(0,10)].filter(L=>!!L).join("-").replace(/@/g,"").replace(/[\/]/g,"-"),outputHash:te,src:Z,shouldBeUnplugged:U,installCondition:X,bin:v,flatName:h.name,descriptor:k,languageName:h.languageName,scope:h.scope,checksum:A,dependencies:E,devDependencies:ue,packagePeers:Y}}let u=[],p={compressionLevel:t.configuration.get("compressionLevel")};u.push('# This file is generated by running "yarn install" inside your project.'),u.push("# It is essentially a version of yarn.lock that Nix can better understand"),u.push("# Manual changes WILL be lost - proceed with caution!"),u.push("let"),u.push("  settings = {");for(let g of Object.keys(p))u.push(`    ${g} = ${JSON.stringify(p[g])};`);u.push("  };"),u.push("  packages = {");function d(g,h){if(h.length>0){u.push(`      ${g} = {`);for(let O of h)u.push(`        ${JSON.stringify(O.name)} = packages.${JSON.stringify(O.packageManifestId)};`);u.push("      };")}}let m=Object.keys(f).sort((g,h)=>g.localeCompare(h));for(let g of m){let h=f[g];if(u.push(`    "${g}" = {`),u.push(`      name = ${JSON.stringify(h.name)};`),u.push(`      reference = ${JSON.stringify(h.reference)};`),h.isVirtual&&h.canonicalPackage!=null&&u.push(`      canonicalPackage = packages.${JSON.stringify(`${I.structUtils.stringifyIdent(h.canonicalPackage)}@${h.canonicalPackage.reference}`)};`),!h.isVirtual){if(u.push(`      linkType = ${JSON.stringify(h.linkType)};`),u.push(`      outputName = ${JSON.stringify(h.outputName)};`),h.outputHash!=null&&u.push(`      outputHash = ${JSON.stringify(h.outputHash)};`),h.outputHashByPlatform&&Object.keys(h.outputHashByPlatform).length>0){u.push("      outputHashByPlatform = {");for(let O of Object.keys(h.outputHashByPlatform))u.push(`        ${JSON.stringify(O)} = ${JSON.stringify(h.outputHashByPlatform[O])};`);u.push("      };")}if(h.src&&u.push(`      src = ${h.src};`),h.shouldBeUnplugged&&u.push(`      shouldBeUnplugged = ${h.shouldBeUnplugged};`),h.installCondition&&u.push(`      installCondition = ${h.installCondition};`),u.push(`      flatName = ${JSON.stringify(h.flatName)};`),u.push(`      languageName = ${JSON.stringify(h.languageName)};`),u.push(`      scope = ${JSON.stringify(h.scope)};`),u.push(`      descriptorRange = ${JSON.stringify(h.descriptor.range)};`),h.checksum&&u.push(`      checksum = ${JSON.stringify(h.checksum)};`),h.bin&&Object.keys(h.bin).length>0){u.push("      bin = {");for(let O of Object.keys(h.bin))u.push(`        ${JSON.stringify(O)} = ${JSON.stringify(h.bin[O])};`);u.push("      };")}}if(d("dependencies",h.dependencies),d("devDependencies",h.devDependencies),!h.isVirtual&&h.packagePeers&&h.packagePeers.length>0){u.push("      packagePeers = [");for(let O of h.packagePeers)u.push(`        ${JSON.stringify(O)}`);u.push("      ];")}u.push("    };")}u.push("  };"),u.push("in"),u.push("{ inherit packages; inherit settings; }"),u.push(""),be.writeFileSync(ke.join(t.cwd,"yarn-manifest.nix"),u.join(`
`),"utf8")},populateYarnPaths:async t=>{let e=process.env.YARNNIX_PACKAGE_REGISTRY_DATA_PATH;if(e){let r=JSON.parse(be.readFileSync(e,"utf8")),n=Object.values(r).filter(i=>!!i?.manifest);for(let i of n)if(i.canonicalReference.startsWith("workspace:")&&i.drvPath!=="/dev/null"&&i.drvPath!==process.env.out){let o=new I.Workspace(i.packageLocation??ke.join(i.drvPath,"node_modules",i.name),{project:t});await o.setup(),await t.addWorkspace(o)}}}},commands:[Wi,zi,ji,qi,Yi,Vi,Ft]};return kg(mA);})();
/*!
 * fill-range <https://github.com/jonschlinkert/fill-range>
 *
 * Copyright (c) 2014-present, Jon Schlinkert.
 * Licensed under the MIT License.
 */
/*!
 * is-number <https://github.com/jonschlinkert/is-number>
 *
 * Copyright (c) 2014-present, Jon Schlinkert.
 * Released under the MIT License.
 */
/*!
 * to-regex-range <https://github.com/micromatch/to-regex-range>
 *
 * Copyright (c) 2015-present, Jon Schlinkert.
 * Released under the MIT License.
 */
/**
  @license
  Copyright Node.js contributors. All rights reserved.

  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to
  deal in the Software without restriction, including without limitation the
  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
  sell copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
  IN THE SOFTWARE.
*/
/**
  @license
  The MIT License (MIT)

  Copyright (c) 2014 Blake Embrey (hello@blakeembrey.com)

  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  THE SOFTWARE.
*/
return plugin;
}
};
